{"version":3,"sources":["module.js","BaseContainer.js","collection.js","ItemChildrenRegister.js","ItemParentRegister.js","ManyToManyRelationship.js","model.js","ParentChildRelationship.js","queued-response-db.js","relationship.js","util.js","value-register.js"],"names":["c","console","angular","module","factory","$q","BaseContainer","self","this","__index","__db","dbDocumentType","def","prototype","postInitialLoading","__postAndLoad","document","defered","defer","type","post","then","result","ok","log","get","id","docFromDb","resolve","loadDocumentFromDb","promise","util","Collection","db","singleItemName","fieldNames","options","itemName","name","plural","__constructorFunction","constructorFunction","__items","__relationships","__fieldNames","slice","__fullFieldNames","push","inheritPrototype","registerRelationship","relationship","fieldName","doc","item","copyFields","_id","getAccessFunctionDefinitions","capitalize","capitalizeFirstLetter","buildFunc","createAccessFunctionDefinition","single","newItem","getItem","findItems","allItems","Object","keys","map","i","query","test","prop","filterIndex","data","undefined","deferred","saveItem","put","_rev","rev","deleteItem","childDeletions","respondToItemDeleted","all","remove","promiseFailed","ItemChildrenRegister","parentCollection","childCollection","childAlias","parentAlias","__parentCollection","__childCollection","__cascadeDelete","cascadeDelete","__reverseIndex","parentId","newEntry","forEach","childrenIds","childId","getChildren","parentItem","indexEntry","__ensureIndexEntryHasLiveChildren","liveChildren","linkChildToParent","childItem","innerPromise","parentItemId","__unlinkChildFromPreviousParent","__addChildToIndexEntry","respondToParentDeleted","length","debug","respondToChildDeleted","arrayContains","Id","oldParentId","removeFromArray","ItemParentRegister","newIndexEntry","getParent","isUndefined","liveObject","ManyToManyRelationship","leftCollection","rightCollection","__rightCollection","__leftCollection","defaultDbDocumentTypeName","toLowerCase","__functionNameEnd","qualifier","__leftRights","__rightLefts","__docsForReuse","leftName","leftPlural","rightName","rightPlural","end","getLeftRightsFnName","getRightLeftsFnName","addLeftRightFnName","removeLeftRightFnName","isLeftLinkedToRightFnName","getLeftRights","getRightLefts","addLink","removeLink","isLinked","right","left","__updateOneRegisterWithDocument","__sendDocumentToReusePile","register","key","entry","docs","items","leftItem","__getInitialisedEntry","rightItem","when","__writeLinkToDatabase","leftEntry","rightEntry","addUnique","doc1","__removeFromEntry","doc2","collection","opposites","itemIsFromRight","operations","oppositeItem","finish","succesfullyLoaded","pop","service","ParentChildRelationship","__createAccessFunctions","container","accessFunc","func","fnName","ModelFunctionName","queuedPromise","__getQueuedFunction","containerFunction","__getNonQueuedFunction","apply","arguments","originalArgs","__lastPromiseInQueue","__registerDocumentTypeLoader","__dbDocumentTypeLoaders","__initializeModel","loadQuery","__loadQuery","rows","row","__addDocumentToCollection","__postInitialLoading","err","__containers","initialize","allDocs","include_docs","attachments","__dataReady","dataReady","printInfo","__registerContainer","join","firstCollection","secondCollection","relationshipType","ValueRegister","__childAlias","__parentAlias","__parentDeleteInProgress","__itemParent","__itemChildren","foreignKey","childName","parentName","setChildParent","parent","oldParent","__respondToParentDeleted","__respondToChildDeleted","action","children","QueuedResponseDb","_db","queue","_nextId","_latestResolvedId","wrapPromise","dbCall","promiseId","nextId","hiddenPromise","returnPromise","queuePromise","response","promiseGotResolved","resolved","releasResolvedPromises","stop","Relationship","propertyName","parentPopertyName","_parentCollection","_parentPopertyName","_convertFromDoc","value","_convertToDoc","_onItemRemove","_links","str","charAt","toUpperCase","fn","myArray","len","addAsItem","object","index","indexOf","splice","filteredItems","Child","Parent","childProto","parentProto","source","target","fields","field","error","_register","set"],"mappings":"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","file":"relate.min.js","sourcesContent":["\"use strict\";\r\nvar c = console;\r\n\r\nangular.module('Relate', []);","\r\nangular.module('Relate').factory('BaseContainer', function($q) {\r\n  /*\r\n  A collection has an internal index of the objects in the database.\r\n  What it uses as keys and values is up to the derived class.\r\n  */\r\n  var BaseContainer = function()    {var self = this;\r\n    self.__index = null;\r\n    self.__db = null;\r\n    self.dbDocumentType = null;\r\n  };\r\n  var def = BaseContainer.prototype;\r\n  \r\n  def.postInitialLoading = function() {\r\n    //override if container needs to do any post loading operations\r\n  };\r\n  \r\n  def.__postAndLoad = function(document)  {var self = this;\r\n    var defered = $q.defer();\r\n    document.type = self.dbDocumentType;\r\n    self.__db.post(document).then( function (result) {\r\n      if (result.ok) {\r\n        self.__db.get(result.id).then( function (docFromDb) {\r\n          defered.resolve(self.loadDocumentFromDb(docFromDb));\r\n        });\r\n      } else {\r\n        console.log(result);\r\n        throw \"Error fetching data\";\r\n      }\r\n    });\r\n    return defered.promise;\r\n  };\r\n  \r\n  return BaseContainer;\r\n});","\r\nangular.module('Relate').factory('Collection', function(util, $q, BaseContainer) {\r\n\r\n  var Collection = function(db, singleItemName, fieldNames, options)    {var self = this;\r\n    var options = options || {};\r\n    self.itemName = singleItemName;\r\n    self.name = singleItemName; //This is how a relationship references collection\r\n    self.plural = options.plural || singleItemName + 's'\r\n    self.dbDocumentType = options.dbDocumentType || singleItemName;\r\n    self.__db = db;\r\n    self.__constructorFunction = options.constructorFunction || function(){};\r\n    self.__items = {};\r\n    self.__relationships = [];\r\n    self.__fieldNames = fieldNames.slice();\r\n    self.__fullFieldNames = fieldNames.slice();\r\n    self.__fullFieldNames.push('_id');\r\n    self.__fullFieldNames.push('_rev');\r\n  };\r\n  util.inheritPrototype(Collection, BaseContainer);\r\n  var def = Collection.prototype;\r\n\r\n  def.registerRelationship = function(relationship, fieldName)    {var self = this;\r\n    self.__relationships.push(relationship);\r\n    if (fieldName) {\r\n      self.__fullFieldNames.push(fieldName);\r\n    }\r\n  };\r\n\r\n  def.loadDocumentFromDb = function(doc)    {var self = this;\r\n    var item = new self.__constructorFunction();\r\n    util.copyFields(doc, item, self.__fullFieldNames);\r\n    item.type = self.itemName;\r\n    self.__items[doc._id] = item;\r\n    return item;\r\n  };\r\n\r\n  def.getAccessFunctionDefinitions = function()    {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        single = capitalize(self.itemName),\r\n        plural = capitalize(self.plural);\r\n    return [\r\n      buildFunc('new' + single, self.newItem, true),\r\n      buildFunc('get' + single, self.getItem, false),\r\n      buildFunc('find' + plural, self.findItems, false),\r\n      buildFunc('all' + plural, self.allItems, false),\r\n    ]\r\n  };\r\n\r\n  def.getItem = function(id)    {var self = this;\r\n    return self.__items[id];\r\n  };\r\n\r\n  def.allItems = function()    {var self = this;\r\n    return Object.keys(self.__items).map(function(i){\r\n      return self.__items[i];\r\n    });\r\n  };\r\n\r\n  def.findItems = function(query)    {var self = this;\r\n    /*\r\n    query can be:\r\n      a function returning true or false\r\n      an object like {name: 'deirdre'} -- which returns items whose properties match.\r\n      an empty object {} -- which returns all items.\r\n    TODO: what about parent properties?\r\n    */\r\n    var test;\r\n    if (typeof query === 'function') {\r\n      test = query;\r\n    } else if (typeof query === 'object') {\r\n      test = function(item) {\r\n        for (prop in query) {\r\n          if (item[prop] !== query[prop]) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n    } else {\r\n      throw 'Invalid argument for \"find\", must be an object or a function.';\r\n    }\r\n    return util.filterIndex(self.__items, test);\r\n  };\r\n\r\n  def.newItem = function(data)    {var self = this;\r\n    if(data === undefined) {\r\n      throw 'newItem expects an object as its first argument.'\r\n    }\r\n    var deferred = $q.defer();\r\n    var doc = {};\r\n    util.copyFields(data, doc, self.__fieldNames);\r\n    self.__postAndLoad(doc).then(function (newItem) {\r\n      //TODO: link relationships...\r\n      deferred.resolve(newItem);\r\n    });\r\n    return deferred.promise;\r\n  };\r\n\r\n  def.saveItem = function(item)    {var self = this;\r\n    var deferred = $q.defer();\r\n    var doc = {};\r\n    util.copyFields(item, doc, self.__fullFieldNames);\r\n    self.__db.put(doc).then(function (result) {\r\n      item._rev = result.rev;\r\n      deferred.resolve(item._rev);\r\n    });\r\n    return deferred.promise;\r\n  };\r\n\r\n  def.deleteItem = function(item)    {var self = this;\r\n    var childDeletions = self.__relationships.map(function(relationship) {\r\n      return relationship.respondToItemDeleted(item, self);\r\n    });\r\n    return $q.all(childDeletions).then(function() {\r\n      self.__db.remove(item).then(function (result) {\r\n        delete self.__items[item._id];\r\n      }, util.promiseFailed);\r\n    }, util.promiseFailed);\r\n  };\r\n\r\n  return Collection;\r\n});\r\n","\r\nangular.module('Relate').factory('ItemChildrenRegister', function(util, $q, BaseContainer) {\r\n\r\n  var ItemChildrenRegister = function(db, parentCollection, childCollection, options)    {var self = this;\r\n    var options = options || {};\r\n    var childAlias = options.childAlias || childCollection.itemName;\r\n    var parentAlias = options.parentAlias || parentCollection.itemName;\r\n    self.dbDocumentType = 'lnk_child_' + childAlias + 's_of_' + parentAlias;\r\n    self.__db = db;\r\n    self.__parentCollection = parentCollection;\r\n    self.__childCollection = childCollection;\r\n    self.__cascadeDelete = options.cascadeDelete || false;\r\n    self.__index = {};//format {parentId: {doc: Object, liveChildren: []}\r\n    self.__reverseIndex = {};//format {childId: parentId}\r\n  };\r\n  util.inheritPrototype(ItemChildrenRegister, BaseContainer);\r\n  var def = ItemChildrenRegister.prototype;\r\n  \r\n  def.loadDocumentFromDb = function(doc)     {var self = this;\r\n    var parentId = doc.parentId;\r\n    if (self.__index[parentId]) {\r\n      throw \"Found duplicate item children link in database.\"\r\n    }\r\n    var newEntry = {doc: doc};\r\n    self.__index[parentId] = newEntry;\r\n    angular.forEach(doc.childrenIds, function (childId) {\r\n      self.__reverseIndex[childId] = parentId;\r\n    });\r\n    return newEntry;\r\n  };\r\n\r\n  def.getChildren = function(parentItem)    {var self = this;\r\n    var indexEntry = self.__index[parentItem._id];\r\n    if (indexEntry) {\r\n      self.__ensureIndexEntryHasLiveChildren(indexEntry);\r\n      return indexEntry.liveChildren;\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  def.linkChildToParent = function(parentItem, childItem)    {var self = this;\r\n    var deferred = $q.defer(),\r\n        parentItemId = parentItem? parentItem._id : null,\r\n        indexEntry = self.__index[parentItemId],\r\n        innerPromise;\r\n    //Note: parentItemId and indexEntry could rightfully be null/undefined.\r\n    self.__unlinkChildFromPreviousParent(childItem).then(function() {\r\n      self.__reverseIndex[childItem._id] = parentItemId;\r\n      if (indexEntry) {\r\n        innerPromise = self.__addChildToIndexEntry(indexEntry, childItem);\r\n      } else {\r\n        innerPromise = self.__postAndLoad({\r\n          parentId: parentItem._id,\r\n          childrenIds: [childItem._id]\r\n        });\r\n      }\r\n      innerPromise.then(function () {\r\n        deferred.resolve();\r\n      });\r\n    });\r\n    return deferred.promise;\r\n  };\r\n\r\n  def.respondToParentDeleted = function(parentItem)    {var self = this;\r\n    var deferred = $q.defer();\r\n    indexEntry = self.__index[parentItem._id];\r\n    if (indexEntry) {\r\n      if (self.__cascadeDelete && indexEntry.doc.childrenIds.length > 0) {\r\n        debug(indexEntry);\r\n        throw 'Cannot delete parent object as it still has children';\r\n      } else {\r\n        self.__db.remove(indexEntry.doc).then(function() {\r\n          delete self.__index[parentItem._id];\r\n          deferred.resolve();\r\n        });\r\n      }\r\n    }\r\n    return deferred.promise;\r\n  };\r\n\r\n  def.respondToChildDeleted = function(childItem)    {var self = this;\r\n    return self.__unlinkChildFromPreviousParent(childItem);\r\n  };\r\n\r\n  def.__addChildToIndexEntry = function(indexEntry, childItem)    {var self = this;\r\n    var deferred = $q.defer();\r\n    self.__ensureIndexEntryHasLiveChildren(indexEntry);\r\n    if (util.arrayContains(indexEntry.doc.childrenIds, childItem._id)) {\r\n      deferred.resolve();\r\n    } else {\r\n      indexEntry.doc.childrenIds.push(childItem.Id);\r\n      self.__db.put(indexEntry.doc).then(function() {\r\n        indexEntry.liveChildren.push(childItem),\r\n        deferred.resolve();\r\n      });\r\n    }\r\n    return deferred.promise;\r\n  };\r\n  \r\n  def.__unlinkChildFromPreviousParent = function(childItem)    {var self = this;\r\n    var deferred = $q.defer();\r\n    var oldParentId = self.__reverseIndex[childItem._id];\r\n    if (oldParentId) {\r\n      var indexEntry = self.__index[oldParentId];\r\n      util.removeFromArray(indexEntry.doc.childrenIds, childItem._id);\r\n      self.__reverseIndex[childItem._id] = null;\r\n      self.__db.put(indexEntry.doc).then(function() {\r\n        self.__ensureIndexEntryHasLiveChildren(indexEntry);\r\n        util.removeFromArray(indexEntry.liveChildren, childItem);\r\n        deferred.resolve();\r\n      });\r\n    } else {\r\n      deferred.resolve();\r\n    }\r\n    return deferred.promise;\r\n  };\r\n\r\n  def.__ensureIndexEntryHasLiveChildren = function(indexEntry)    {var self = this;\r\n    var liveChildren = indexEntry.liveChildren;\r\n    if (!liveChildren) {\r\n      var liveChildren = [];\r\n      angular.forEach(indexEntry.doc.childrenIds, function (childId) {\r\n        liveChildren.push(self.__childCollection.getItem(childId));\r\n      });\r\n      indexEntry.liveChildren = liveChildren;\r\n    }\r\n  };\r\n\r\n  return ItemChildrenRegister;\r\n});\r\n","\r\nangular.module('Relate').factory('ItemParentRegister', function(util, $q, BaseContainer) {\r\n\r\n  var ItemParentRegister = function(db, parentCollection, childCollection, options)    {var self = this;\r\n    var options = options || {};\r\n    var childAlias = options.childAlias || childCollection.itemName;\r\n    var parentAlias = options.parentAlias || parentCollection.itemName;\r\n    self.dbDocumentType = 'lnk_parent_' + parentAlias + '_of_' + childAlias;\r\n    self.__db = db;\r\n    self.__index = {};\r\n    self.__parentCollection = parentCollection;\r\n  };\r\n  util.inheritPrototype(ItemParentRegister, BaseContainer);\r\n  var def = ItemParentRegister.prototype;\r\n\r\n  def.loadDocumentFromDb = function(document)    {var self = this;\r\n    if (self.__index[document.childId]) {\r\n      throw \"Found duplicate item parent link in database.\"\r\n    }\r\n    var newIndexEntry = {document: document};\r\n    self.__index[document.childId] = newIndexEntry;\r\n    return newIndexEntry;\r\n  };\r\n  \r\n  def.getParent = function(childItem)    {var self = this;\r\n    var indexEntry = self.__index[childItem._id];\r\n    if (indexEntry) {\r\n      if (angular.isUndefined(indexEntry.liveObject)) {\r\n        indexEntry.liveObject = self.__parentCollection.getItem(indexEntry.document.parentId) || null;\r\n      }\r\n      return indexEntry.liveObject;\r\n    }\r\n    return null;\r\n  };\r\n  \r\n  def.linkChildToParent = function(parentItem, childItem)    {var self = this;\r\n    var deferred = $q.defer(),\r\n        parentItemId = parentItem? parentItem._id : null,\r\n        indexEntry = self.__index[childItem._id];\r\n    if (indexEntry) {\r\n      indexEntry.document.parentId = parentItemId;\r\n      self.__db.put(indexEntry.document).then(function (result) {\r\n        indexEntry.document._rev = result.rev;\r\n        indexEntry.liveObject = parentItem;\r\n        deferred.resolve();\r\n      });\r\n    } else {\r\n      self.__postAndLoad({\r\n        parentId: parentItemId, \r\n        childId: childItem._id\r\n      }).then(function (result) {\r\n        deferred.resolve();\r\n      });      \r\n    }\r\n    return deferred.promise;\r\n  };\r\n  \r\n  def.respondToChildDeleted = function(childItem)    {var self = this;\r\n    var deferred = $q.defer(),\r\n        id = childItem._id,\r\n        indexEntry = self.__index[id];\r\n    if (indexEntry) {\r\n      self.__db.remove(indexEntry.document).then(function (result) {\r\n        delete self.__index[id];\r\n        deferred.resolve();\r\n      });\r\n    }\r\n    return deferred.promise;\r\n  };\r\n  \r\n  return ItemParentRegister;\r\n});\r\n\r\n    ","    \r\n/*\r\n  Left and right may be absent from register.\r\n  Both registers will always be equal and complimentary:\r\n  {\r\n     p1: {items: [t6]}\r\n     p2: {items: [t4, t6]}\r\n  }\r\n  {\r\n     t6: {items: [p1, p2]},\r\n     t4: {items: [p2]},\r\n  }\r\n*/\r\n    \r\nangular.module('Relate').factory('ManyToManyRelationship', function($q, BaseContainer, util) {\r\n  \r\n  var ManyToManyRelationship = function(db, leftCollection, rightCollection, options)    {var self = this;\r\n    var options = options || {};\r\n    self.__rightCollection = rightCollection;\r\n    self.__leftCollection = leftCollection;\r\n    var defaultDbDocumentTypeName = ('lnk_' + leftCollection.itemName + '_' + rightCollection.itemName).toLowerCase();\r\n    self.__functionNameEnd = '';\r\n    if (options.qualifier) {\r\n      self.__functionNameEnd = 'As' + util.capitalizeFirstLetter(options.qualifier);\r\n      defaultDbDocumentTypeName += '_as_' + options.qualifier.toLowerCase();\r\n    }\r\n    self.dbDocumentType = options.dbDocumentType || defaultDbDocumentTypeName;\r\n    self.name = self.dbDocumentType;\r\n    self.__db = db;\r\n    self.__leftCollection = leftCollection;\r\n    self.__rightCollection = rightCollection;\r\n    self.__leftRights = {};\r\n    self.__rightLefts = {};\r\n    self.__docsForReuse = [];\r\n    rightCollection.registerRelationship(self);\r\n    leftCollection.registerRelationship(self);\r\n  };\r\n  util.inheritPrototype(ManyToManyRelationship, BaseContainer);\r\n  var def = ManyToManyRelationship.prototype;\r\n  \r\n  def.getAccessFunctionDefinitions = function()  {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        leftName = capitalize(self.__leftCollection.itemName),\r\n        leftPlural = capitalize(self.__leftCollection.plural),\r\n        rightName = capitalize(self.__rightCollection.itemName),\r\n        rightPlural = capitalize(self.__rightCollection.plural),\r\n        end = self.__functionNameEnd,\r\n        getLeftRightsFnName = 'get' + leftName + rightPlural + end,\r\n        getRightLeftsFnName = 'get' + rightName + leftPlural + end,\r\n        addLeftRightFnName = 'add' + leftName + rightName + end,\r\n        removeLeftRightFnName = 'remove' + leftName + rightName + end,\r\n        isLeftLinkedToRightFnName = 'is' + leftName + 'LinkedTo' + rightName + end;\r\n    return [\r\n      buildFunc(getLeftRightsFnName, self.getLeftRights, false),\r\n      buildFunc(getRightLeftsFnName, self.getRightLefts, false),\r\n      buildFunc(addLeftRightFnName, self.addLink, true),\r\n      buildFunc(removeLeftRightFnName, self.removeLink, true),\r\n      buildFunc(isLeftLinkedToRightFnName, self.isLinked, false)\r\n    ];\r\n  };\r\n  \r\n  def.loadDocumentFromDb = function(doc)  {var self = this;\r\n    if (doc.right && \r\n        doc.left && \r\n        self.__updateOneRegisterWithDocument(self.__leftRights, doc.left, doc.right, doc)\r\n        ){\r\n      self.__updateOneRegisterWithDocument(self.__rightLefts, doc.right, doc.left, doc);\r\n      return true;\r\n    } else {\r\n      self.__sendDocumentToReusePile(doc);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  def.__updateOneRegisterWithDocument = function(register, key, id, doc)  {var self = this;\r\n    var entry = register[key];\r\n    if (entry === undefined) {\r\n      var docs = {};\r\n      docs[id] = doc;\r\n      register[key] = {docs: docs, items: []};\r\n    } else {\r\n      if (entry.docs[id]) {\r\n        return false;\r\n      }\r\n      entry.docs[id] = doc;\r\n    }\r\n    return true;\r\n  };\r\n  \r\n  def.getLeftRights = function (leftItem)  {var self = this;\r\n    return self.__getInitialisedEntry(self.__leftRights, leftItem._id).items;\r\n  };\r\n  \r\n  def.getRightLefts = function (rightItem)  {var self = this;\r\n    return self.__getInitialisedEntry(self.__rightLefts, rightItem._id).items;\r\n  };\r\n  \r\n  //TODO: assert they are of correct type?\r\n  def.addLink = function (leftItem, rightItem)    {var self = this;\r\n    if (self.isLinked(leftItem, rightItem)) {\r\n      return $q.when();\r\n    } else {\r\n      var deferred = $q.defer();\r\n      self.__writeLinkToDatabase(leftItem, rightItem).then(function(){\r\n        //will have gone through loadDocumentFromDb succesfully.\r\n        var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id),\r\n            rightEntry = self.__getInitialisedEntry(self.__rightLefts, rightItem._id);\r\n        util.addUnique(leftEntry.items, rightItem);\r\n        util.addUnique(rightEntry.items, leftItem);\r\n        deferred.resolve()\r\n      });\r\n      return deferred.promise; \r\n    };\r\n  };\r\n  \r\n  def.removeLink = function (leftItem, rightItem)    {var self = this;\r\n    var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id);\r\n    var rightEntry = self.__getInitialisedEntry(self.__rightLefts, rightItem._id);\r\n    var doc1 = self.__removeFromEntry(leftEntry, rightItem);\r\n    var doc2 = self.__removeFromEntry(rightEntry, leftItem);\r\n    if (doc1 !== doc2) {\r\n      throw \"This is strange...\"\r\n    }\r\n    return self.__db.remove(doc1);\r\n  };\r\n  \r\n  def.__removeFromEntry = function(entry, item)  {var self = this;\r\n    var doc = entry.docs[item._id];\r\n    util.removeFromArray(entry.items, item);\r\n    delete entry.docs[item._id];\r\n    return doc;\r\n  }\r\n   \r\n  def.isLinked = function (leftItem, rightItem)  {var self = this;\r\n    var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id);\r\n    return util.arrayContains(leftEntry.items, rightItem);\r\n  };\r\n  \r\n  def.respondToItemDeleted = function (item, collection)     {var self = this;\r\n    var opposites, itemIsFromRight;\r\n    if (collection === self.__rightCollection) {\r\n      itemIsFromRight = true;\r\n      opposites = self.getRightLefts(item);\r\n    } else if (collection === self.__leftCollection) {\r\n      itemIsFromRight = false;\r\n      opposites = self.getLeftRights(item);\r\n    }\r\n    opposites = opposites.slice();\r\n    var operations = [];\r\n    angular.forEach(opposites, function(oppositeItem) {\r\n      if (itemIsFromRight) {\r\n        var leftItem = oppositeItem;\r\n        var rightItem = item;\r\n      } else {\r\n        var leftItem = item;\r\n        var rightItem = oppositeItem;\r\n      }\r\n      operations.push(self.removeLink(leftItem, rightItem));\r\n    });\r\n    return $q.all(operations);\r\n  };\r\n  \r\n  /*\r\n  Should only be called if sure that items are not linked. Will reuse a document if one is available.\r\n  */\r\n  def.__writeLinkToDatabase = function(leftItem, rightItem)  {var self = this;\r\n    var deferred = $q.defer(),\r\n        doc = self.__docsForReuse.pop();\r\n    function finish(succesfullyLoaded) {\r\n      if (succesfullyLoaded) {\r\n        deferred.resolve();\r\n      } else {\r\n        throw 'ManyToManyRelationship.__writeLinkToDatabase failed to load document. This should not have happened.'\r\n      }\r\n    }\r\n    if (doc) {\r\n      doc.left = leftItem._id;\r\n      doc.right = rightItem._id;\r\n      self.__db.put(doc).then(function (result) {\r\n        doc._rev = result.rev;\r\n        finish(self.loadDocumentFromDb(doc));        \r\n      });\r\n    } else {\r\n      doc = {left: leftItem._id, right:rightItem._id};\r\n      self.__postAndLoad(doc).then(function (result) {\r\n        finish(result);\r\n      });\r\n    }\r\n    return deferred.promise;\r\n  };\r\n  \r\n  def.__sendDocumentToReusePile = function(doc)  {var self = this;\r\n    self.__docsForReuse.push(doc);\r\n  };\r\n  \r\n  def.__getInitialisedEntry = function (register, id)  {var self = this;\r\n    var entry = register[id];\r\n    if (entry === undefined) {\r\n      entry = {docs: {}, items: []};\r\n      register[id] = entry;\r\n    } else {\r\n      if (entry.items.length !== Object.keys(entry.docs).length) {\r\n        var collection = (register === self.__leftRights)? self.__rightCollection : self.__leftCollection; \r\n        entry.items.length = 0;\r\n        angular.forEach(entry.docs, function(doc, id) {\r\n          //TODO: what if item doesn't exist?\r\n          var item = collection.getItem(id);\r\n          if (item) {\r\n            entry.items.push(item);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return entry;\r\n  };\r\n  \r\n  return ManyToManyRelationship;\r\n});","\r\nangular.module('Relate').service('model', function($q, Collection, ParentChildRelationship, ManyToManyRelationship) {\r\n\r\n  var self = this,\r\n      __db,\r\n      __loadQuery,\r\n      __containers = {},\r\n      __dbDocumentTypeLoaders = {},\r\n      __lastPromiseInQueue = $q.when(),\r\n      __relationshipDefinitionFunctions = {};\r\n\r\n  self.initialize = function(db, query) {\r\n    __db = db;\r\n    __loadQuery = query || function() {\r\n      return __db.allDocs({\r\n        include_docs: true,\r\n        attachments: false\r\n      });\r\n    }\r\n  };\r\n\r\n  var __dataReady;\r\n  self.dataReady = function (){\r\n    if (__dataReady === undefined) {\r\n      __dataReady = $q.defer();\r\n      __initializeModel().then( function () {\r\n        __dataReady.resolve();\r\n      });\r\n    }\r\n    return __dataReady.promise;\r\n  };\r\n\r\n  self.printInfo = function (){\r\n    angular.forEach(__containers, function(container) {\r\n      angular.forEach(container.getAccessFunctionDefinitions(), function(accessFunc) {\r\n        console.log('model.' + accessFunc.ModelFunctionName);\r\n      });\r\n    });\r\n  };\r\n\r\n  /************* MODEL DEFINITION FUNCTIONS *************/\r\n\r\n  self.collection = function(singleItemName, fieldNames, options){\r\n    var container = new Collection(__db, singleItemName, fieldNames, options);\r\n    __registerContainer(container);\r\n    return container;\r\n  };\r\n\r\n  self.join = function(firstCollection, secondCollection, options){\r\n    var options = options || {},\r\n        container,\r\n        relationshipType = options.type || 'parentChild';\r\n    angular.forEach([firstCollection, secondCollection], function(name) {\r\n      if (__containers[name] === undefined) {\r\n        throw 'Failed to create join, container not found: \"' + name + '\" ';\r\n      }\r\n    });\r\n    if (relationshipType === 'parentChild') {\r\n      var parentCollection = __containers[firstCollection];\r\n      var childCollection = __containers[secondCollection];\r\n      container = new ParentChildRelationship(__db, parentCollection, childCollection, options);\r\n    } else if (relationshipType === 'manyToMany') {\r\n      var leftCollection = __containers[firstCollection];\r\n      var rightCollection = __containers[secondCollection];\r\n      container = new ManyToManyRelationship(__db, leftCollection, rightCollection, options);\r\n    } else {\r\n      throw '\"' + relationshipType + '\" is not a valid relationship type';\r\n    }\r\n    __registerContainer(container);\r\n    return container;\r\n  };\r\n\r\n  __registerContainer = function(container) {\r\n    var name = container.name;\r\n    if (__containers[name] !== undefined) {\r\n      throw 'Trying to create two containers with the same name: ' + name + ' on model but it already exists.';\r\n    }\r\n    __containers[name] = container;\r\n    __registerDocumentTypeLoader(container);\r\n    __createAccessFunctions(container);\r\n  };\r\n\r\n  /************* COLLECTION ACCESS FUNCTIONALITY ************\r\n\r\n    __createAccessFunctions() creates methods like:\r\n\r\n      model.newTask({})\r\n      model.getProjectTasks(project)\r\n\r\n    Query functions (getX, findX) return directly. Data changing functions (all other prefixed) return promises.\r\n\r\n    Query data may be dirty while a promise is waiting to complete, so you need to do this:\r\n\r\n    model.newTask({}).then(function(){\r\n      angular.copy($scope.tasks, model.getProjectTasks($scope.project));\r\n    });\r\n\r\n    Data changing functions are queued internally, so you can do this.\r\n    model.newTask({});\r\n    model.newTask({});\r\n    model.newTask({}).then(function(){\r\n      angular.copy($scope.tasks, model.getProjectTasks($scope.project));\r\n    });\r\n\r\n  */\r\n  self.saveItem = function(item) {\r\n    return __containers[item.type].saveItem(item);\r\n  };\r\n\r\n  self.deleteItem = function(item) {\r\n    return __containers[item.type].deleteItem(item);\r\n  };\r\n\r\n  function __createAccessFunctions(container){\r\n    angular.forEach(container.getAccessFunctionDefinitions(), function(accessFunc) {\r\n      var func, fnName = accessFunc.ModelFunctionName;\r\n      if (accessFunc.queuedPromise) {\r\n        func = __getQueuedFunction(container, accessFunc.containerFunction);\r\n      } else {\r\n        func = __getNonQueuedFunction(container, accessFunc.containerFunction);\r\n      }\r\n      if (self[fnName] !== undefined) {\r\n        throw 'Container ' + container.name + ' trying to create function ' + fnName + ' on model but it already exists.';\r\n      }\r\n      self[fnName] = func;\r\n    });\r\n  };\r\n\r\n  function __getNonQueuedFunction(container, containerFunction){\r\n    return function() {\r\n      return containerFunction.apply(container, arguments);\r\n    }\r\n  };\r\n\r\n  function __getQueuedFunction(container, containerFunction){\r\n    return function() {\r\n      var originalArgs = arguments;\r\n      var deferred = $q.defer();\r\n      __lastPromiseInQueue.then( function() {\r\n        __lastPromiseInQueue = containerFunction.apply(container, originalArgs);\r\n        __lastPromiseInQueue.then(function(result) {\r\n          deferred.resolve(result);\r\n        });\r\n      });\r\n      return deferred.promise;\r\n    }\r\n  };\r\n\r\n  /************* INITIAL LOADING FUNCTIONALITY *************/\r\n\r\n  function __registerDocumentTypeLoader(container) {\r\n    /* If container has field 'dbDocumentType' then every document whose 'type' field matches that\r\n    will be passed to the container's loadDocumentFromDb() function at loading.\r\n    */\r\n    var dbDocumentType = container.dbDocumentType;\r\n    if (dbDocumentType !== undefined) {\r\n      if (dbDocumentType in __dbDocumentTypeLoaders) {\r\n        var claimedBy = __dbDocumentTypeLoaders[dbDocumentType];\r\n        throw 'More than one container attempting to register database document type: \"' + dbDocumentType + '\".';\r\n      } else {\r\n        __dbDocumentTypeLoaders[dbDocumentType] = container;\r\n      }\r\n    }\r\n  };\r\n\r\n  function __initializeModel(){\r\n    var defer = $q.defer();\r\n    var loadQuery = __loadQuery();\r\n    loadQuery.then(function (result) {\r\n      angular.forEach(result.rows, function(row){\r\n        __addDocumentToCollection(row.doc);\r\n      });\r\n      __postInitialLoading();\r\n      defer.resolve();\r\n    }).catch(function (err) {\r\n      console.log(err);\r\n    });\r\n    return defer.promise;\r\n  };\r\n\r\n  function __addDocumentToCollection(document){\r\n    var dbDocumentType = document.type;\r\n    if (dbDocumentType) {\r\n      var container = __dbDocumentTypeLoaders[dbDocumentType];\r\n      if (container) {\r\n        container.loadDocumentFromDb(document, dbDocumentType);\r\n      } else {\r\n        console.log(document);\r\n        console.log('Could not load document \\\"' + document._id + '\\\" as type was not recognised (' + dbDocumentType + ')');\r\n      }\r\n    } else {\r\n      console.log('Could not load document \\\"' + document._id + '\\\" as it has no \\\"type\\\" field.');\r\n    }\r\n  };\r\n\r\n  function __postInitialLoading() {\r\n    angular.forEach(__containers, function(container) {\r\n      container.postInitialLoading();\r\n    });\r\n  }\r\n\r\n});\r\n\r\n","\r\nangular.module('Relate').factory('ParentChildRelationship', function($q, BaseContainer, ValueRegister, util) {\r\n\r\n  var ParentChildRelationship = function(db, parentCollection, childCollection, options)    {var self = this;\r\n    var options = options || {};\r\n    self.__db = db;\r\n    self.__parentCollection = parentCollection;\r\n    self.__childCollection = childCollection;\r\n    self.__childAlias = options.childAlias || childCollection.plural;\r\n    self.__parentAlias = options.parentAlias || parentCollection.itemName;\r\n    self.__parentDeleteInProgress = new ValueRegister();\r\n    self.__cascadeDelete = (options.cascadeDelete === undefined)? true : options.cascadeDelete;\r\n    self.__itemParent = {};\r\n    self.__itemChildren = {};\r\n    self.name = 'relationship_' + childCollection.itemName + '_as_' + self.__childAlias + '_' +\r\n          parentCollection.itemName + '_as_' + self.__parentAlias;\r\n    self.foreignKey = '__' + self.__parentAlias;\r\n    parentCollection.registerRelationship(self);\r\n    childCollection.registerRelationship(self, self.foreignKey);\r\n  };\r\n  util.inheritPrototype(ParentChildRelationship, BaseContainer);\r\n  var def = ParentChildRelationship.prototype;\r\n\r\n  def.getAccessFunctionDefinitions = function()  {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        childName = capitalize(self.__childCollection.itemName),\r\n        childAlias = capitalize(self.__childAlias),\r\n        parentName = capitalize(self.__parentCollection.itemName),\r\n        parentAlias = capitalize(self.__parentAlias);\r\n    return [\r\n      buildFunc('get' + childName + parentAlias, self.getParent, false),\r\n      buildFunc('get' + parentName + childAlias, self.getChildren, false),\r\n      buildFunc('set' + childName + parentAlias, self.setChildParent, true),\r\n    ];\r\n  };\r\n\r\n  def.postInitialLoading = function()  {var self = this;\r\n    var key = self.foreignKey;\r\n    angular.forEach(self.__parentCollection.__items, function(parentItem) {\r\n      self.__itemChildren[parentItem._id] = [];\r\n    });\r\n    angular.forEach(self.__childCollection.__items, function(childItem) {\r\n      var parentId = childItem[key];\r\n      if (parentId) {\r\n        var parent = self.__parentCollection.getItem(parentId);\r\n        self.__itemParent[childItem._id] = parent;\r\n        self.__itemChildren[parentId].push(childItem);\r\n      }\r\n    });\r\n  };\r\n\r\n  def.getParent = function (childItem)    {var self = this;\r\n    return self.__itemParent[childItem._id] || null;\r\n  };\r\n\r\n  def.getChildren = function (parentItem)    {var self = this;\r\n    return self.__itemChildren[parentItem._id] || [];\r\n  };\r\n\r\n  def.setChildParent = function (childItem, parentItem)    {var self = this;\r\n    //TODO: assert they are of correct type?\r\n    var oldParent = self.__itemParent[childItem._id];\r\n    var parentItemId = parentItem? parentItem._id : null;\r\n    if (oldParent) {\r\n      util.removeFromArray(self.__itemChildren[oldParent._id], childItem);\r\n    }\r\n    if (parentItem) {\r\n      if (self.__itemChildren[parentItem._id] === undefined) {\r\n        self.__itemChildren[parentItem._id] = [childItem];\r\n      } else {\r\n        self.__itemChildren[parentItem._id].push(childItem);\r\n      }\r\n    }\r\n    self.__itemParent[childItem._id] = parentItem;\r\n    childItem[self.foreignKey] = parentItemId;\r\n    return self.__childCollection.saveItem(childItem);\r\n  };\r\n\r\n  def.respondToItemDeleted = function (item, collection)     {var self = this;\r\n    if (collection === self.__parentCollection) {\r\n      return self.__respondToParentDeleted(item);\r\n    } else if (collection === self.__childCollection) {\r\n      return self.__respondToChildDeleted(item);\r\n    }\r\n  };\r\n\r\n  def.__respondToParentDeleted = function (parentItem)     {var self = this;\r\n    var action = (self.__cascadeDelete)?\r\n        function(childItem) {return self.__childCollection.deleteItem(childItem)} :\r\n        function(childItem) {return self.setChildParent(childItem, null)};\r\n    var children = self.getChildren(parentItem).slice(); //slice() is imortant!\r\n    return $q.all(children.map(action)).then(function() {\r\n      delete self.__itemChildren[parentItem._id];\r\n      return $q.when(true);\r\n    }, util.promiseFailed);\r\n  };\r\n\r\n  def.__respondToChildDeleted = function (childItem)     {var self = this;\r\n    var parentItem = self.getParent(childItem);\r\n    if (parentItem) {\r\n      util.removeFromArray(self.__itemChildren[parentItem._id], childItem);\r\n    }\r\n    delete self.__itemParent[childItem._id];\r\n    return $q.when(true);\r\n  };\r\n\r\n  return ParentChildRelationship;\r\n});\r\n","\r\nangular.module('Relate').factory('QueuedResponseDb', function($q, ValueRegister) {\r\n  /*\r\n  post put get remove\r\n  */\r\n  var QueuedResponseDb = function(db) {\r\n    var self = this;\r\n    self._db = db;\r\n    self.queue = {};\r\n    self._nextId = 0;\r\n    self._latestResolvedId = 1;\r\n    \r\n    self.wrapPromise = function(dbCall, data) {\r\n      var promiseId = self.nextId();\r\n      var hiddenPromise = self._db[dbCall](data);\r\n      var returnPromise = $q.defer();\r\n      self.queuePromise(promiseId, returnPromise);\r\n      hiddenPromise.then(function(response) {\r\n        self.promiseGotResolved(promiseId, response);\r\n      });\r\n      return returnPromise.promise;\r\n    };\r\n    angular.forEach(['post', 'put', 'get', 'remove'], function (dbCall) {\r\n      self[dbCall] = function(data) {\r\n        return self.wrapPromise(dbCall, data);\r\n      }\r\n    });\r\n  };\r\n  \r\n  QueuedResponseDb.prototype.nextId = function (){\r\n    this._nextId ++;\r\n    return this._nextId;\r\n  }\r\n  \r\n  QueuedResponseDb.prototype.queuePromise = function(promiseId, returnPromise) {\r\n    this.queue[promiseId] = {\r\n      returnPromise: returnPromise,\r\n      resolved: false\r\n    };\r\n  };\r\n  \r\n  QueuedResponseDb.prototype.promiseGotResolved = function(promiseId, result) {\r\n    var promise = this.queue[promiseId]\r\n    promise['result'] = result;\r\n    promise.resolved = true;\r\n    this.releasResolvedPromises();\r\n  };\r\n  \r\n  QueuedResponseDb.prototype.releasResolvedPromises = function() {\r\n    var stop = false; // encounteredUnresolvedPromiseOrReachedEndOfQueue\r\n    while (!stop) {\r\n      entry = this.queue[this._latestResolvedId]\r\n      if (entry && entry.resolved) {\r\n        entry.returnPromise.resolve(entry.result);\r\n        this._latestResolvedId ++;\r\n      } else {\r\n        stop = true;\r\n      }\r\n    }\r\n  }\r\n  \r\n  return QueuedResponseDb;\r\n});","/*\r\nNew way:\r\n\r\nSpecify one relationship per collection.\r\nIt knows of the other collection, and how the relationship behaves.\r\n\r\nThe model is responisble for passing complementary relationships to the collections.\r\n\r\nLinking:\r\n   collection ends up with methods:\r\n   setParent\r\n   addChild\r\n   removeChild\r\n   addTag\r\n   removeTag\r\n   \r\n  model.join({type: 'parentChild'... })\r\n    r1 = parentChildRelationship(parent, child)\r\n    r2 = childParentRelationship(parent, child)\r\n    parentCollection.registerRelationship(r1)\r\n    parentCollection.registerRelationship(r2)\r\n    childCollection.registerRelationship(r1)\r\n    childCollection.registerRelationship(r2)\r\n  }\r\n  What does a relationship do:\r\n    create accessor functions (get, set)\r\n    respond to deletions\r\n    respond to new\r\n    \r\n    \r\n  Deletions:\r\n    if has child items: \r\n      delete:\r\n        chilren\r\n        parent of child links \r\n        children of parent\r\n    if has parent items:\r\n      delete:\r\n        parent of child links \r\n        children of parent\r\n    if many to many:\r\n      delete join only\r\n      \r\n    ...but parent child deletions could benefit from not having all the items stripped first. Do I care?\r\n    I could collate operations on the db side (i.e. collect changes to single objects, and flush them after a period)\r\n    \r\n    \r\n      \r\n*/\r\n\r\nangular.module('Relate').factory('ParentRelationshipNew', function($q) {\r\n\r\n  var Relationship = function(propertyName, parentCollection, parentPopertyName) {\r\n    this.propertyName = propertyName;\r\n    this._parentCollection = parentCollection;\r\n    this._parentPopertyName = parentPopertyName;\r\n  };\r\n  \r\n  Relationship.prototype._convertFromDoc = function(doc) {\r\n    var value = doc[this.propertyName];\r\n    if (value) {\r\n      this._parentCollection.getItem(value);\r\n    }\r\n  };\r\n  \r\n  Relationship.prototype._convertToDoc = function(value) {\r\n    return value.id;\r\n  };\r\n  \r\n  Relationship.prototype._onItemRemove = function(item) {\r\n    var value = doc[this.propertyName];\r\n    if (value) {\r\n      var parentItem = this._parentCollection.getItem(value);\r\n      if (parentItem) {\r\n        parentItem._links[this._parentPopertyName]\r\n      }\r\n    }\r\n  };\r\n  \r\n});","\r\n\r\n\r\nangular.module('Relate').service('util', function($q) {\r\n  var self = this;\r\n\r\n  self.capitalizeFirstLetter = function(str) {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  };\r\n\r\n  self.createAccessFunctionDefinition = function(name, fn, queuedPromise) {\r\n    return {\r\n      ModelFunctionName: name,\r\n      containerFunction: fn,\r\n      queuedPromise: queuedPromise\r\n    }\r\n  };\r\n\r\n  self.arrayContains = function(myArray, item) {\r\n    for (var i = 0, len = myArray.length; i < len; i++) {\r\n      if (item === myArray[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  self.addUnique = function(myArray, item) {\r\n    if(!self.arrayContains(myArray, item)){\r\n      myArray.push(item);\r\n    }\r\n  }\r\n\r\n  self.addAsItem = function(object, key, item) {\r\n    //Where object[key] = [items...]\r\n    if (object[key] === undefined) {\r\n      object[key] = [item];\r\n    } else {\r\n      object[key].push(item);\r\n    }\r\n  };\r\n\r\n  self.removeFromArray = function(myArray, item) {\r\n    var index = myArray.indexOf(item);\r\n    if (index > -1) {\r\n      myArray.splice(index, 1);\r\n    }\r\n  };\r\n\r\n  self.filterIndex = function(index, test) {\r\n    //accepts an object like array.\r\n    var filteredItems = [];\r\n    angular.forEach(index, function(item) {\r\n      if (test(item)) {\r\n        filteredItems.push(item);\r\n      }\r\n    });\r\n    return filteredItems;\r\n  };\r\n\r\n  self.inheritPrototype = function(Child, Parent) {\r\n    var childProto = Child.prototype;\r\n    var parentProto = Parent.prototype;\r\n    for (var prop in parentProto) {\r\n      if (typeof parentProto[prop] == 'function') {\r\n        childProto[prop] = parentProto[prop];\r\n      }\r\n    }\r\n  };\r\n\r\n  self.copyFields = function(source, target, fields) {\r\n    angular.forEach(fields, function(field) {\r\n      target[field] = source[field];\r\n    });\r\n  };\r\n\r\n  self.promiseFailed = function(error) {\r\n    console.log('Promise failed!');\r\n    console.log(error);\r\n  }\r\n\r\n});\r\n","\r\nangular.module('Relate').factory('ValueRegister', function() {\r\n  //\r\n  var ValueRegister = function() {\r\n    this._register = {};\r\n  };\r\n  ValueRegister.prototype.set = function(key, value) {\r\n    this._register[key] = value;\r\n  };\r\n  ValueRegister.prototype.get = function(key) {\r\n    return this._register[key];\r\n  };\r\n  \r\n  return ValueRegister;\r\n});\r\n"],"sourceRoot":"/source/"}