{"version":3,"sources":["Model.js","BaseContainer.js","Collection.js","ManyToManyRelationship.js","ParentChildRelationship.js","Singleton.js","util.js"],"names":["angular","module","factory","$q","SnjsCollection","SnjsSingleton","SnjsParentChildRelationship","SnjsManyToManyRelationship","SneakerModel","dbWrapper","initialLoadQuery","self","this","__db","__loadQuery","allDocs","include_docs","attachments","__containers","__dbDocumentTypeLoaders","__lastPromiseInQueue","when","__relationshipDefinitionFunctions","__dataReady","undefined","changeCount","dataReady","__initializeModel","reload","forEach","container","clear","printInfo","getAccessFunctionDefinitions","accessFunc","console","log","ModelFunctionName","collection","singleItemName","fieldNames","options","__registerContainer","singleton","name","data","oneToMany","parentCollectionName","childCollectionName","__ensureCollectionsExist","parentCollection","childCollection","manyToMany","leftCollectionName","rightCollectionName","leftCollection","rightCollection","collectionNames","__registerDocumentTypeLoader","__createAccessFunctions","saveItem","item","type","deleteItem","func","fnName","queuedPromise","__getQueuedFunction","containerFunction","__getNonQueuedFunction","apply","arguments","originalArgs","deferred","defer","then","result","resolve","promise","dbDocumentType","rows","row","__addDocumentToCollection","doc","__postInitialLoading","length","err","document","loadDocumentFromDb","_id","postInitialLoading","SnjsBaseContainer","def","prototype","__postAndLoad","defered","post","ok","get","id","docFromDb","SnjsUtil","util","db","itemName","plural","__proto","proto","__items","__itemsAsArray","__parentRelationships","__relationships","__fieldNames","slice","__fullFieldNames","push","inheritPrototype","registerChildRelationship","relationship","registerParentRelationship","foreignKey","alias","registerManyToManyRelationship","newItem","copyFields","capitalize","capitalizeFirstLetter","buildFunc","createAccessFunctionDefinition","single","getItem","findItems","allItems","query","test","prop","filterIndex","relationshipsToLink","parentItem","linkNewlyLoadedChildToParent","put","_rev","rev","childDeletions","map","respondToItemDeleted","all","remove","removeFromArray","__rightCollection","__leftCollection","defaultDbDocumentTypeName","toLowerCase","__functionNameEnd","qualifier","__leftRights","__rightLefts","__docsForReuse","leftName","leftPlural","rightName","rightPlural","end","getLeftRightsFnName","getRightLeftsFnName","addLeftRightFnName","removeLeftRightFnName","isLeftLinkedToRightFnName","getLeftRights","getRightLefts","addLink","removeLink","isLinked","right","left","__updateOneRegisterWithDocument","__sendDocumentToReusePile","register","key","entry","docs","items","leftItem","__getInitialisedEntry","rightItem","__writeLinkToDatabase","leftEntry","rightEntry","addUnique","doc1","__removeFromEntry","doc2","arrayContains","opposites","itemIsFromRight","operations","oppositeItem","finish","succesfullyLoaded","pop","Object","keys","__parentCollection","__childCollection","__childAlias","childAlias","__parentAlias","parentAlias","__cascadeDelete","cascadeDelete","__itemParent","__itemChildren","childName","parentName","getParent","getChildren","setChildParent","childItem","parentId","parentChildren","oldParent","parentItemId","__respondToParentDeleted","__respondToChildDeleted","action","children","promiseFailed","__doc","getData","setData","copy","service","str","charAt","toUpperCase","fn","myArray","i","len","addAsItem","object","index","indexOf","splice","filteredItems","Child","Parent","childProto","parentProto","source","target","fields","field","error"],"mappings":"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","file":"sneakerjs.min.js","sourcesContent":["\r\nangular.module('SneakerJS', []);\r\n\r\nangular.module('SneakerJS').factory('SneakerModel', function($q, SnjsCollection, \r\n    SnjsSingleton, SnjsParentChildRelationship, SnjsManyToManyRelationship){\r\n  \r\n  var SneakerModel = function(dbWrapper, initialLoadQuery) {var self = this;\r\n    self.__db = dbWrapper;\r\n    self.__loadQuery = initialLoadQuery || function() {\r\n      return dbWrapper.allDocs({\r\n        include_docs: true,\r\n        attachments: false\r\n      });\r\n    };\r\n    self.__containers = {};\r\n    self.__dbDocumentTypeLoaders = {};\r\n    self.__lastPromiseInQueue = $q.when();\r\n    self.__relationshipDefinitionFunctions = {};\r\n    self.__dataReady = undefined;\r\n    self.changeCount = 0;\r\n\r\n    self.dataReady = function() {\r\n      if (self.__dataReady === undefined) {\r\n        self.__dataReady = self.__initializeModel();\r\n      }\r\n      return self.__dataReady;\r\n    };\r\n\r\n    self.reload = function() {\r\n      self.__dataReady = undefined;\r\n      angular.forEach(self.__containers, function(container) {\r\n        container.clear();\r\n      });\r\n      return self.dataReady();\r\n    };\r\n\r\n    self.printInfo = function() {\r\n      angular.forEach(self.__containers, function(container) {\r\n        angular.forEach(container.getAccessFunctionDefinitions(), function(accessFunc) {\r\n          console.log('db.' + accessFunc.ModelFunctionName);\r\n        });\r\n      });\r\n    };\r\n\r\n    /************* MODEL DEFINITION FUNCTIONS *************/\r\n\r\n    self.collection = function(singleItemName, fieldNames, options) {\r\n      var container = new SnjsCollection(self.__db, singleItemName, fieldNames, options);\r\n      self.__registerContainer(container);\r\n      return container;\r\n    };\r\n\r\n    self.singleton = function(name, data) {\r\n      var container = new SnjsSingleton(self.__db, name, data);\r\n      self.__registerContainer(container);\r\n      return container;\r\n    };\r\n    \r\n    self.oneToMany = function(parentCollectionName, childCollectionName, options) {\r\n      self.__ensureCollectionsExist([parentCollectionName, childCollectionName]);\r\n      var parentCollection = self.__containers[parentCollectionName];\r\n      var childCollection = self.__containers[childCollectionName];\r\n      var container = new SnjsParentChildRelationship(self.__db, parentCollection, childCollection, options);\r\n      return self.__registerContainer(container);\r\n    };\r\n    \r\n    self.manyToMany = function(leftCollectionName, rightCollectionName, options) {\r\n      self.__ensureCollectionsExist([leftCollectionName, rightCollectionName]);\r\n      var leftCollection = self.__containers[leftCollectionName];\r\n      var rightCollection = self.__containers[rightCollectionName];\r\n      container = new SnjsManyToManyRelationship(self.__db, leftCollection, rightCollection, options);\r\n      return self.__registerContainer(container);\r\n    };\r\n\r\n    self.__ensureCollectionsExist = function(collectionNames) {\r\n      angular.forEach(collectionNames, function(name) {\r\n        if (self.__containers[name] === undefined) {\r\n          throw 'Failed to create relationship, container not found: \"' + name + '\" ';\r\n        }\r\n      });\r\n    };\r\n    \r\n    self.__registerContainer = function(container) {\r\n      var name = container.name;\r\n      if (self.__containers[name] !== undefined) {\r\n        throw 'Trying to create containers with name: ' + name + ' on model but it already exists.';\r\n      }\r\n      self.__containers[name] = container;\r\n      self.__registerDocumentTypeLoader(container);\r\n      self.__createAccessFunctions(container);\r\n      return container;\r\n    };\r\n\r\n    /************* COLLECTION ACCESS FUNCTIONALITY ************\r\n\r\n      __createAccessFunctions() creates methods like:\r\n\r\n        model.newTask({})\r\n        model.getProjectTasks(project)\r\n\r\n      Query functions (getX, findX) return directly. Data changing functions (all other prefixed) return promises.\r\n\r\n      Query data may be dirty while a promise is waiting to complete, so you need to do this:\r\n\r\n      model.newTask({}).then(function(){\r\n        angular.copy($scope.tasks, model.getProjectTasks($scope.project));\r\n      });\r\n\r\n      Data changing functions are queued internally, so you can do this.\r\n      model.newTask({});\r\n      model.newTask({});\r\n      model.newTask({}).then(function(){\r\n        angular.copy($scope.tasks, model.getProjectTasks($scope.project));\r\n      });\r\n\r\n    */\r\n    self.saveItem = function(item) {\r\n      self.changeCount ++;\r\n      return $q.when(self.__containers[item.type].saveItem(item));\r\n    };\r\n\r\n    self.deleteItem = function(item) {\r\n      self.changeCount ++;\r\n      return $q.when(self.__containers[item.type].deleteItem(item));\r\n    };\r\n\r\n    self.__createAccessFunctions = function(container) {\r\n      angular.forEach(container.getAccessFunctionDefinitions(), function(accessFunc) {\r\n        var func, fnName = accessFunc.ModelFunctionName;\r\n        if (accessFunc.queuedPromise) {\r\n          func = self.__getQueuedFunction(container, accessFunc.containerFunction);\r\n        } else {\r\n          func = self.__getNonQueuedFunction(container, accessFunc.containerFunction);\r\n        }\r\n        if (self[fnName] !== undefined) {\r\n          throw 'Container ' + container.name + ' trying to create function ' +\r\n                  fnName + ' on model but it already exists.';\r\n        }\r\n        self[fnName] = func;\r\n      });\r\n    };\r\n\r\n    self.__getNonQueuedFunction = function(container, containerFunction) {\r\n      return function() {\r\n        return containerFunction.apply(container, arguments);\r\n      }\r\n    };\r\n\r\n    self.__getQueuedFunction = function(container, containerFunction) {\r\n      /*This returns the function which actually gets called on e.g. mode.newPerson()\r\n      Keep the the $q.defer() so it wraps it in a $q promise.\r\n      */\r\n      return function() {\r\n        var originalArgs = arguments;\r\n        var deferred = $q.defer();\r\n        self.__lastPromiseInQueue.then( function() {\r\n          self.__lastPromiseInQueue = containerFunction.apply(container, originalArgs);\r\n          self.__lastPromiseInQueue.then(function(result) {\r\n            self.changeCount ++;\r\n            deferred.resolve(result);\r\n          });\r\n        });\r\n        return deferred.promise;\r\n      }\r\n    };\r\n\r\n    /************* INITIAL LOADING FUNCTIONALITY *************/\r\n\r\n    self.__registerDocumentTypeLoader = function(container) {\r\n      /* If container has field 'dbDocumentType' then every document whose 'type' field matches that\r\n      will be passed to the container's loadDocumentFromDb() function at loading.\r\n      */\r\n      var dbDocumentType = container.dbDocumentType;\r\n      if (dbDocumentType !== undefined) {\r\n        if (dbDocumentType in self.__dbDocumentTypeLoaders) {\r\n          var claimedBy = self.__dbDocumentTypeLoaders[dbDocumentType];\r\n          throw 'More than one container attempting to register database document type: \"' + dbDocumentType + '\".';\r\n        } else {\r\n          self.__dbDocumentTypeLoaders[dbDocumentType] = container;\r\n        }\r\n      }\r\n    };\r\n\r\n    self.__initializeModel = function() {\r\n      return self.__loadQuery().then(function (result) {\r\n        angular.forEach(result.rows, function(row){\r\n          self.__addDocumentToCollection(row.doc);\r\n        });\r\n        self.__postInitialLoading();\r\n        return result.rows.length;\r\n      }).catch(function (err) {\r\n        console.log(err);\r\n      });\r\n    };\r\n\r\n    self.__addDocumentToCollection = function(document) {\r\n      var dbDocumentType = document.type;\r\n      if (dbDocumentType) {\r\n        var container = self.__dbDocumentTypeLoaders[dbDocumentType];\r\n        if (container) {\r\n          container.loadDocumentFromDb(document, dbDocumentType);\r\n        } else {\r\n          console.log(document);\r\n          console.log('Could not load document \\\"' + document._id + '\\\" as type was not recognised (' + dbDocumentType + ')');\r\n        }\r\n      } else {\r\n        console.log('Could not load document \\\"' + document._id + '\\\" as it has no \\\"type\\\" field.');\r\n      }\r\n    };\r\n\r\n    self.__postInitialLoading = function() {\r\n      angular.forEach(self.__containers, function(container) {\r\n        container.postInitialLoading();\r\n      });\r\n    };\r\n  \r\n  };\r\n  return SneakerModel;\r\n  \r\n});","\r\nangular.module('SneakerJS').factory('SnjsBaseContainer', function($q) {\r\n  /*\r\n  A collection has an internal index of the objects in the database.\r\n  What it uses as keys and values is up to the derived class.\r\n  */\r\n  var SnjsBaseContainer = function()    {var self = this;\r\n    self.__db = null;\r\n  };\r\n  var def = SnjsBaseContainer.prototype;\r\n  \r\n  def.postInitialLoading = function() {\r\n    //override if container needs to do any post loading operations\r\n  };\r\n  \r\n  def.clear = function() {\r\n    //must implement to clear items\r\n  }\r\n  \r\n  def.__postAndLoad = function(doc)  {var self = this;\r\n    var defered = $q.defer();\r\n    self.__db.post(doc).then( function (result) {\r\n      if (result.ok) {\r\n        self.__db.get(result.id).then( function (docFromDb) {\r\n          defered.resolve(self.loadDocumentFromDb(docFromDb));\r\n        });\r\n      } else {\r\n        console.log(result);\r\n        throw \"Error fetching data\";\r\n      }\r\n    });\r\n    return defered.promise;\r\n  };\r\n  \r\n  return SnjsBaseContainer;\r\n});","\r\nangular.module('SneakerJS').factory('SnjsCollection', function(SnjsUtil, $q, SnjsBaseContainer) {\r\n  \r\n  var util = SnjsUtil;\r\n  var SnjsCollection = function(db, singleItemName, fieldNames, options)    {var self = this;\r\n    var options = options || {};\r\n    self.itemName = singleItemName;\r\n    self.name = singleItemName; //This is how a relationship references collection\r\n    self.plural = options.plural || singleItemName + 's'\r\n    self.dbDocumentType = options.dbDocumentType || singleItemName;\r\n    self.__db = db;\r\n    self.__proto = options.proto || function(){};\r\n    self.__items = {};\r\n    self.__itemsAsArray = [];\r\n    self.__parentRelationships = {};\r\n    self.__relationships = [];\r\n    self.__fieldNames = fieldNames.slice();\r\n    self.__fullFieldNames = fieldNames.slice();\r\n    self.__fullFieldNames.push('_id');\r\n    self.__fullFieldNames.push('_rev');\r\n  };\r\n  util.inheritPrototype(SnjsCollection, SnjsBaseContainer);\r\n  var def = SnjsCollection.prototype;\r\n\r\n  def.registerChildRelationship = function(relationship)    {var self = this;\r\n    self.__relationships.push(relationship);\r\n  };\r\n\r\n  def.registerParentRelationship = function(relationship, foreignKey, alias)    {var self = this;\r\n    self.__parentRelationships[alias] = relationship;\r\n    self.__relationships.push(relationship);\r\n    self.__fullFieldNames.push(foreignKey);\r\n  };\r\n\r\n  def.registerManyToManyRelationship = function(relationship)    {var self = this;\r\n    self.__relationships.push(relationship);\r\n  };\r\n\r\n  def.loadDocumentFromDb = function(doc)    {var self = this;\r\n    var newItem = new self.__proto();\r\n    util.copyFields(doc, newItem, self.__fullFieldNames);\r\n    newItem.type = self.itemName;\r\n    self.__items[doc._id] = newItem;\r\n    self.__itemsAsArray.push(newItem);\r\n    return newItem;\r\n  };\r\n\r\n  def.clear = function() {var self = this;\r\n    self.__items = {};\r\n    self.__itemsAsArray = [];\r\n  };\r\n\r\n  def.getAccessFunctionDefinitions = function()    {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        single = capitalize(self.itemName),\r\n        plural = capitalize(self.plural);\r\n    return [\r\n      buildFunc('new' + single, self.newItem, true),\r\n      buildFunc('get' + single, self.getItem, false),\r\n      buildFunc('find' + plural, self.findItems, false),\r\n      buildFunc('all' + plural, self.allItems, false),\r\n    ]\r\n  };\r\n\r\n  def.getItem = function(id)    {var self = this;\r\n    return self.__items[id];\r\n  };\r\n\r\n  def.allItems = function()    {var self = this;\r\n    return self.__itemsAsArray;\r\n  };\r\n\r\n  def.findItems = function(query)    {var self = this;\r\n    /*\r\n    query can be:\r\n      a function returning true or false\r\n      an object like {name: 'deirdre'} -- which returns items whose properties match.\r\n      an empty object {} -- which returns all items.\r\n    TODO: what about parent properties?\r\n    */\r\n    var test;\r\n    if (typeof query === 'function') {\r\n      test = query;\r\n    } else if (typeof query === 'object') {\r\n      test = function(item) {\r\n        for (prop in query) {\r\n          if (item[prop] !== query[prop]) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n    } else {\r\n      throw 'Invalid argument for \"find\", must be an object or a function.';\r\n    }\r\n    return util.filterIndex(self.__items, test);\r\n  };\r\n\r\n  def.newItem = function(data)    {var self = this;\r\n    var doc = {};\r\n    var relationshipsToLink = {};\r\n    util.copyFields(data, doc, self.__fieldNames);\r\n    doc.type = self.dbDocumentType;\r\n    for (var alias in self.__parentRelationships) {\r\n      var parentItem = data[alias];\r\n      var foreignKey = self.__parentRelationships[alias].foreignKey;\r\n      if (data[alias]) {\r\n        doc[foreignKey] = parentItem._id;\r\n        relationshipsToLink[alias] = parentItem;\r\n      }\r\n    }\r\n    return self.__postAndLoad(doc).then(function (newItem) {\r\n      for (var alias in relationshipsToLink) {\r\n        self.__parentRelationships[alias].linkNewlyLoadedChildToParent(newItem, parentItem);\r\n      }\r\n      return newItem;\r\n    });\r\n  };\r\n\r\n  def.saveItem = function(item)    {var self = this;\r\n    var doc = {};\r\n    util.copyFields(item, doc, self.__fullFieldNames);\r\n    doc.type = self.dbDocumentType;\r\n    return self.__db.put(doc).then(function (result) {\r\n      item._rev = result.rev;\r\n      return item._rev;\r\n    });\r\n  };\r\n\r\n  def.deleteItem = function(item)    {var self = this;\r\n    var childDeletions = self.__relationships.map(function(relationship) {\r\n      return relationship.respondToItemDeleted(item, self);\r\n    });\r\n    return $q.all(childDeletions).then(function() {\r\n      return self.__db.remove(item).then(function (result) {\r\n        delete self.__items[item._id];\r\n        util.removeFromArray(self.__itemsAsArray, item);\r\n      });\r\n    });\r\n  };\r\n\r\n  return SnjsCollection;\r\n});\r\n","    \r\n/*\r\n  Left and right may be absent from register.\r\n  Both registers will always be equal and complimentary:\r\n  {\r\n     p1: {items: [t6]}\r\n     p2: {items: [t4, t6]}\r\n  }\r\n  {\r\n     t6: {items: [p1, p2]},\r\n     t4: {items: [p2]},\r\n  }\r\n*/\r\n    \r\nangular.module('SneakerJS').factory('SnjsManyToManyRelationship', function($q, SnjsBaseContainer, SnjsUtil) {\r\n  \r\n  var util = SnjsUtil;\r\n  var SnjsManyToManyRelationship = function(db, leftCollection, rightCollection, options)    {var self = this;\r\n    var options = options || {};\r\n    self.__rightCollection = rightCollection;\r\n    self.__leftCollection = leftCollection;\r\n    var defaultDbDocumentTypeName = ('lnk_' + leftCollection.itemName + '_' + rightCollection.itemName).toLowerCase();\r\n    self.__functionNameEnd = '';\r\n    if (options.qualifier) {\r\n      self.__functionNameEnd = 'As' + util.capitalizeFirstLetter(options.qualifier);\r\n      defaultDbDocumentTypeName += '_as_' + options.qualifier.toLowerCase();\r\n    }\r\n    self.dbDocumentType = options.dbDocumentType || defaultDbDocumentTypeName;\r\n    self.name = self.dbDocumentType;\r\n    self.__db = db;\r\n    self.__leftCollection = leftCollection;\r\n    self.__rightCollection = rightCollection;\r\n    self.__leftRights = {};\r\n    self.__rightLefts = {};\r\n    self.__docsForReuse = [];\r\n    rightCollection.registerManyToManyRelationship(self);\r\n    leftCollection.registerManyToManyRelationship(self);\r\n  };\r\n  util.inheritPrototype(SnjsManyToManyRelationship, SnjsBaseContainer);\r\n  var def = SnjsManyToManyRelationship.prototype;\r\n  \r\n  def.getAccessFunctionDefinitions = function()  {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        leftName = capitalize(self.__leftCollection.itemName),\r\n        leftPlural = capitalize(self.__leftCollection.plural),\r\n        rightName = capitalize(self.__rightCollection.itemName),\r\n        rightPlural = capitalize(self.__rightCollection.plural),\r\n        end = self.__functionNameEnd,\r\n        getLeftRightsFnName = 'get' + leftName + rightPlural + end,\r\n        getRightLeftsFnName = 'get' + rightName + leftPlural + end,\r\n        addLeftRightFnName = 'add' + leftName + rightName + end,\r\n        removeLeftRightFnName = 'remove' + leftName + rightName + end,\r\n        isLeftLinkedToRightFnName = 'is' + leftName + 'LinkedTo' + rightName + end;\r\n    return [\r\n      buildFunc(getLeftRightsFnName, self.getLeftRights, false),\r\n      buildFunc(getRightLeftsFnName, self.getRightLefts, false),\r\n      buildFunc(addLeftRightFnName, self.addLink, true),\r\n      buildFunc(removeLeftRightFnName, self.removeLink, true),\r\n      buildFunc(isLeftLinkedToRightFnName, self.isLinked, false)\r\n    ];\r\n  };\r\n  \r\n  def.loadDocumentFromDb = function(doc)  {var self = this;\r\n    if (doc.right && \r\n        doc.left && \r\n        self.__updateOneRegisterWithDocument(self.__leftRights, doc.left, doc.right, doc)\r\n        ){\r\n      self.__updateOneRegisterWithDocument(self.__rightLefts, doc.right, doc.left, doc);\r\n      return true;\r\n    } else {\r\n      self.__sendDocumentToReusePile(doc);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  def.clear = function() {var self = this;\r\n    self.__leftRights = {};\r\n    self.__rightLefts = {};\r\n    self.__docsForReuse = [];\r\n  };\r\n  \r\n  def.__updateOneRegisterWithDocument = function(register, key, id, doc)  {var self = this;\r\n    var entry = register[key];\r\n    if (entry === undefined) {\r\n      var docs = {};\r\n      docs[id] = doc;\r\n      register[key] = {docs: docs, items: []};\r\n    } else {\r\n      if (entry.docs[id]) {\r\n        return false;\r\n      }\r\n      entry.docs[id] = doc;\r\n    }\r\n    return true;\r\n  };\r\n  \r\n  def.getLeftRights = function (leftItem)  {var self = this;\r\n    return self.__getInitialisedEntry(self.__leftRights, leftItem._id).items;\r\n  };\r\n  \r\n  def.getRightLefts = function (rightItem)  {var self = this;\r\n    return self.__getInitialisedEntry(self.__rightLefts, rightItem._id).items;\r\n  };\r\n  \r\n  //TODO: assert they are of correct type?\r\n  def.addLink = function (leftItem, rightItem)    {var self = this;\r\n    if (self.isLinked(leftItem, rightItem)) {\r\n      return $q.when();\r\n    } else {\r\n      return self.__writeLinkToDatabase(leftItem, rightItem).then(function(){\r\n        //will have gone through loadDocumentFromDb succesfully.\r\n        var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id),\r\n            rightEntry = self.__getInitialisedEntry(self.__rightLefts, rightItem._id);\r\n        util.addUnique(leftEntry.items, rightItem);\r\n        util.addUnique(rightEntry.items, leftItem);\r\n      });\r\n    };\r\n  };\r\n  \r\n  def.removeLink = function (leftItem, rightItem)    {var self = this;\r\n    var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id);\r\n    var rightEntry = self.__getInitialisedEntry(self.__rightLefts, rightItem._id);\r\n    var doc1 = self.__removeFromEntry(leftEntry, rightItem);\r\n    var doc2 = self.__removeFromEntry(rightEntry, leftItem);\r\n    if (doc1 !== doc2) {\r\n      throw \"This is strange...\"\r\n    }\r\n    return self.__db.remove(doc1);\r\n  };\r\n  \r\n  def.__removeFromEntry = function(entry, item)  {var self = this;\r\n    var doc = entry.docs[item._id];\r\n    util.removeFromArray(entry.items, item);\r\n    delete entry.docs[item._id];\r\n    return doc;\r\n  }\r\n   \r\n  def.isLinked = function (leftItem, rightItem)  {var self = this;\r\n    var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id);\r\n    return util.arrayContains(leftEntry.items, rightItem);\r\n  };\r\n  \r\n  def.respondToItemDeleted = function (item, collection)     {var self = this;\r\n    var opposites, itemIsFromRight;\r\n    if (collection === self.__rightCollection) {\r\n      itemIsFromRight = true;\r\n      opposites = self.getRightLefts(item);\r\n    } else if (collection === self.__leftCollection) {\r\n      itemIsFromRight = false;\r\n      opposites = self.getLeftRights(item);\r\n    }\r\n    opposites = opposites.slice();\r\n    var operations = [];\r\n    angular.forEach(opposites, function(oppositeItem) {\r\n      if (itemIsFromRight) {\r\n        var leftItem = oppositeItem;\r\n        var rightItem = item;\r\n      } else {\r\n        var leftItem = item;\r\n        var rightItem = oppositeItem;\r\n      }\r\n      operations.push(self.removeLink(leftItem, rightItem));\r\n    });\r\n    return $q.all(operations);\r\n  };\r\n  \r\n  /*\r\n  Should only be called if sure that items are not linked. Will reuse a document if one is available.\r\n  */\r\n  //TODO: tidy this mess not to have var deferred = $q.defer()\r\n  def.__writeLinkToDatabase = function(leftItem, rightItem)  {var self = this;\r\n    var deferred = $q.defer(),\r\n        doc = self.__docsForReuse.pop();\r\n    function finish(succesfullyLoaded) {\r\n      if (succesfullyLoaded) {\r\n        deferred.resolve();\r\n      } else {\r\n        throw 'SnjsManyToManyRelationship.__writeLinkToDatabase failed to load document. This should not have happened.'\r\n      }\r\n    }\r\n    if (doc) {\r\n      doc.left = leftItem._id;\r\n      doc.right = rightItem._id;\r\n      self.__db.put(doc).then(function (result) {\r\n        doc._rev = result.rev;\r\n        finish(self.loadDocumentFromDb(doc));        \r\n      });\r\n    } else {\r\n      doc = {left: leftItem._id, right:rightItem._id, type:self.dbDocumentType};\r\n      self.__postAndLoad(doc).then(function (result) {\r\n        finish(result);\r\n      });\r\n    }\r\n    return deferred.promise;\r\n  };\r\n  \r\n  def.__sendDocumentToReusePile = function(doc)  {var self = this;\r\n    self.__docsForReuse.push(doc);\r\n  };\r\n  \r\n  def.__getInitialisedEntry = function (register, id)  {var self = this;\r\n    var entry = register[id];\r\n    if (entry === undefined) {\r\n      entry = {docs: {}, items: []};\r\n      register[id] = entry;\r\n    } else {\r\n      if (entry.items.length !== Object.keys(entry.docs).length) {\r\n        var collection = (register === self.__leftRights)? self.__rightCollection : self.__leftCollection; \r\n        entry.items.length = 0;\r\n        angular.forEach(entry.docs, function(doc, id) {\r\n          //TODO: what if item doesn't exist?\r\n          var item = collection.getItem(id);\r\n          if (item) {\r\n            entry.items.push(item);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return entry;\r\n  };\r\n  \r\n  return SnjsManyToManyRelationship;\r\n});","\r\nangular.module('SneakerJS').factory('SnjsParentChildRelationship', function($q, SnjsBaseContainer, SnjsUtil) {\r\n\r\n  var util = SnjsUtil;\r\n  var SnjsParentChildRelationship = function(db, parentCollection, childCollection, options)    {var self = this;\r\n    var options = options || {};\r\n    self.__db = db;\r\n    self.__parentCollection = parentCollection;\r\n    self.__childCollection = childCollection;\r\n    self.__childAlias = options.childAlias || childCollection.plural;\r\n    self.__parentAlias = options.parentAlias || parentCollection.itemName;\r\n    self.__cascadeDelete = (options.cascadeDelete === undefined)? true : options.cascadeDelete;\r\n    self.__itemParent = {};\r\n    self.__itemChildren = {};\r\n    self.name = 'relationship_' + childCollection.itemName + '_as_' + self.__childAlias + '_' +\r\n          parentCollection.itemName + '_as_' + self.__parentAlias;\r\n    self.foreignKey = 'fk__' + self.__parentAlias;\r\n    parentCollection.registerChildRelationship(self);\r\n    childCollection.registerParentRelationship(self, self.foreignKey, self.__parentAlias);\r\n  };\r\n  util.inheritPrototype(SnjsParentChildRelationship, SnjsBaseContainer);\r\n  var def = SnjsParentChildRelationship.prototype;\r\n\r\n  def.getAccessFunctionDefinitions = function()  {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        childName = capitalize(self.__childCollection.itemName),\r\n        childAlias = capitalize(self.__childAlias),\r\n        parentName = capitalize(self.__parentCollection.itemName),\r\n        parentAlias = capitalize(self.__parentAlias);\r\n    return [\r\n      buildFunc('get' + childName + parentAlias, self.getParent, false),\r\n      buildFunc('get' + parentName + childAlias, self.getChildren, false),\r\n      buildFunc('set' + childName + parentAlias, self.setChildParent, true),\r\n    ];\r\n  };\r\n\r\n  def.postInitialLoading = function()  {var self = this;\r\n    var key = self.foreignKey;\r\n    angular.forEach(self.__parentCollection.__items, function(parentItem) {\r\n      self.__itemChildren[parentItem._id] = [];\r\n    });\r\n    angular.forEach(self.__childCollection.__items, function(childItem) {\r\n      var parentId = childItem[key];\r\n      if (parentId) {\r\n        var parentItem = self.__parentCollection.getItem(parentId);\r\n        self.linkNewlyLoadedChildToParent(childItem, parentItem, parentId);\r\n      }\r\n    });\r\n  };\r\n  \r\n  def.clear = function() {var self = this;\r\n    self.__itemParent = {};\r\n    self.__itemChildren = {};\r\n  };\r\n  \r\n  def.linkNewlyLoadedChildToParent = function(childItem, parentItem, parentId)    {var self = this;\r\n    var parentId = parentId || parentItem._id;\r\n    self.__itemParent[childItem._id] = parentItem;\r\n    var parentChildren = self.__itemChildren[parentId];\r\n    if (parentChildren === undefined) {\r\n      self.__itemChildren[parentId] = [childItem];\r\n    } else {\r\n      parentChildren.push(childItem);\r\n    }\r\n  };\r\n\r\n  def.getParent = function (childItem)    {var self = this;\r\n    return self.__itemParent[childItem._id] || null;\r\n  };\r\n\r\n  def.getChildren = function (parentItem)    {var self = this;\r\n    return self.__itemChildren[parentItem._id] || [];\r\n  };\r\n\r\n  def.setChildParent = function (childItem, parentItem)    {var self = this;\r\n    //TODO: assert they are of correct type?\r\n    var oldParent = self.__itemParent[childItem._id];\r\n    var parentItemId = parentItem? parentItem._id : null;\r\n    if (oldParent) {\r\n      util.removeFromArray(self.__itemChildren[oldParent._id], childItem);\r\n    }\r\n    if (parentItem) {\r\n      if (self.__itemChildren[parentItem._id] === undefined) {\r\n        self.__itemChildren[parentItem._id] = [childItem];\r\n      } else {\r\n        self.__itemChildren[parentItem._id].push(childItem);\r\n      }\r\n    }\r\n    self.__itemParent[childItem._id] = parentItem;\r\n    childItem[self.foreignKey] = parentItemId;\r\n    return self.__childCollection.saveItem(childItem);\r\n  };\r\n\r\n  def.respondToItemDeleted = function (item, collection)     {var self = this;\r\n    if (collection === self.__parentCollection) {\r\n      return self.__respondToParentDeleted(item);\r\n    } else if (collection === self.__childCollection) {\r\n      return self.__respondToChildDeleted(item);\r\n    }\r\n  };\r\n\r\n  def.__respondToParentDeleted = function (parentItem)     {var self = this;\r\n    var action = (self.__cascadeDelete)?\r\n        function(childItem) {return self.__childCollection.deleteItem(childItem)} :\r\n        function(childItem) {return self.setChildParent(childItem, null)};\r\n    var children = self.getChildren(parentItem).slice(); //slice() is imortant!\r\n    return $q.all(children.map(action)).then(function() {\r\n      delete self.__itemChildren[parentItem._id];\r\n      return $q.when(true);\r\n    }, util.promiseFailed);\r\n  };\r\n\r\n  def.__respondToChildDeleted = function (childItem)     {var self = this;\r\n    var parentItem = self.getParent(childItem);\r\n    if (parentItem) {\r\n      util.removeFromArray(self.__itemChildren[parentItem._id], childItem);\r\n    }\r\n    delete self.__itemParent[childItem._id];\r\n    return $q.when(true);\r\n  };\r\n\r\n  return SnjsParentChildRelationship;\r\n});\r\n","\r\nangular.module('SneakerJS').factory('SnjsSingleton', function(SnjsUtil, SnjsBaseContainer) {\r\n  \r\n  var util = SnjsUtil;\r\n  var SnjsSingleton = function(db, name)    {var self = this;\r\n    self.name = name;\r\n    self.dbDocumentType = 'singleton__' + name;\r\n    self.__db = db;\r\n    self.__doc = null;\r\n  };\r\n  util.inheritPrototype(SnjsSingleton, SnjsBaseContainer);\r\n  var def = SnjsSingleton.prototype;\r\n  \r\n  def.loadDocumentFromDb = function(doc)    {var self = this;\r\n    if (self.__doc !== null) {\r\n      throw 'found singleton of type ' + self.name + ' more than once in db';\r\n    }\r\n    if (doc._id !== self.dbDocumentType) {\r\n      throw 'Expected singleton type ' + self.name + ' to have _id: ' + self.dbDocumentType;\r\n    }\r\n    self.__doc = doc;\r\n    return self.__doc.data;\r\n  };\r\n  \r\n  def.clear = function() {var self = this;\r\n    self.__doc = null;\r\n  };\r\n\r\n  def.getAccessFunctionDefinitions = function()    {var self = this;\r\n    return [\r\n      util.createAccessFunctionDefinition('get' + util.capitalizeFirstLetter(self.name), self.getData, false),\r\n      util.createAccessFunctionDefinition('set' + util.capitalizeFirstLetter(self.name), self.setData, false)\r\n    ]\r\n  };\r\n  \r\n  def.getData = function() {var self = this;\r\n    return (self.__doc)? self.__doc.data : {};\r\n  };\r\n  \r\n  def.setData = function(data) {var self = this;\r\n    if (!self.__doc){\r\n      self.__doc = {\r\n        type: self.dbDocumentType,\r\n        _id: self.dbDocumentType,\r\n        data: {}\r\n      }\r\n    }\r\n    angular.copy(data, self.__doc.data);\r\n    return self.__db.put(self.__doc).then(function (result) {\r\n      self.__doc._rev = result.rev;\r\n      return result.rev;\r\n    });\r\n  };\r\n  \r\n  return SnjsSingleton; \r\n});","\r\nangular.module('SneakerJS').service('SnjsUtil', function($q) {\r\n  var self = this;\r\n\r\n  self.capitalizeFirstLetter = function(str) {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  };\r\n\r\n  self.createAccessFunctionDefinition = function(name, fn, queuedPromise) {\r\n    return {\r\n      ModelFunctionName: name,\r\n      containerFunction: fn,\r\n      queuedPromise: queuedPromise\r\n    }\r\n  };\r\n\r\n  self.arrayContains = function(myArray, item) {\r\n    for (var i = 0, len = myArray.length; i < len; i++) {\r\n      if (item === myArray[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  self.addUnique = function(myArray, item) {\r\n    if(!self.arrayContains(myArray, item)){\r\n      myArray.push(item);\r\n    }\r\n  }\r\n\r\n  self.addAsItem = function(object, key, item) {\r\n    //Where object[key] = [items...]\r\n    if (object[key] === undefined) {\r\n      object[key] = [item];\r\n    } else {\r\n      object[key].push(item);\r\n    }\r\n  };\r\n\r\n  self.removeFromArray = function(myArray, item) {\r\n    var index = myArray.indexOf(item);\r\n    if (index > -1) {\r\n      myArray.splice(index, 1);\r\n    }\r\n  };\r\n\r\n  self.filterIndex = function(index, test) {\r\n    //accepts an object like array.\r\n    var filteredItems = [];\r\n    angular.forEach(index, function(item) {\r\n      if (test(item)) {\r\n        filteredItems.push(item);\r\n      }\r\n    });\r\n    return filteredItems;\r\n  };\r\n\r\n  self.inheritPrototype = function(Child, Parent) {\r\n    var childProto = Child.prototype;\r\n    var parentProto = Parent.prototype;\r\n    for (var prop in parentProto) {\r\n      if (typeof parentProto[prop] == 'function') {\r\n        childProto[prop] = parentProto[prop];\r\n      }\r\n    }\r\n  };\r\n\r\n  self.copyFields = function(source, target, fields) {\r\n    angular.forEach(fields, function(field) {\r\n      target[field] = source[field];\r\n    });\r\n  };\r\n\r\n  self.promiseFailed = function(error) {\r\n    console.log('Promise failed!');\r\n    console.log(error);\r\n  }\r\n\r\n});\r\n"],"sourceRoot":"/source/"}