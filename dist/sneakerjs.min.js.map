{"version":3,"sources":["module.js","BaseContainer.js","Collection.js","ManyToManyRelationship.js","model.js","ParentChildRelationship.js","queued-response-db.js","util.js","value-register.js"],"names":["angular","module","factory","$q","BaseContainer","self","this","__index","__db","dbDocumentType","def","prototype","postInitialLoading","__postAndLoad","doc","defered","defer","post","then","result","ok","console","log","get","id","docFromDb","resolve","loadDocumentFromDb","promise","util","Collection","db","singleItemName","fieldNames","options","itemName","name","plural","__proto","proto","__items","__itemsAsArray","__parentRelationships","__relationships","__fieldNames","slice","__fullFieldNames","push","inheritPrototype","registerChildRelationship","relationship","registerParentRelationship","foreignKey","alias","registerManyToManyRelationship","newItem","copyFields","type","_id","getAccessFunctionDefinitions","capitalize","capitalizeFirstLetter","buildFunc","createAccessFunctionDefinition","single","getItem","findItems","allItems","query","test","item","prop","filterIndex","data","deferred","relationshipsToLink","parentItem","linkNewlyLoadedChildToParent","saveItem","put","_rev","rev","deleteItem","childDeletions","map","respondToItemDeleted","all","remove","removeFromArray","promiseFailed","ManyToManyRelationship","leftCollection","rightCollection","__rightCollection","__leftCollection","defaultDbDocumentTypeName","toLowerCase","__functionNameEnd","qualifier","__leftRights","__rightLefts","__docsForReuse","leftName","leftPlural","rightName","rightPlural","end","getLeftRightsFnName","getRightLeftsFnName","addLeftRightFnName","removeLeftRightFnName","isLeftLinkedToRightFnName","getLeftRights","getRightLefts","addLink","removeLink","isLinked","right","left","__updateOneRegisterWithDocument","__sendDocumentToReusePile","register","key","entry","undefined","docs","items","leftItem","__getInitialisedEntry","rightItem","when","__writeLinkToDatabase","leftEntry","rightEntry","addUnique","doc1","__removeFromEntry","doc2","arrayContains","collection","opposites","itemIsFromRight","operations","forEach","oppositeItem","finish","succesfullyLoaded","pop","length","Object","keys","service","ParentChildRelationship","__registerContainer","container","__containers","__registerDocumentTypeLoader","__createAccessFunctions","accessFunc","func","fnName","ModelFunctionName","queuedPromise","__getQueuedFunction","containerFunction","__getNonQueuedFunction","apply","arguments","originalArgs","__lastPromiseInQueue","__dbDocumentTypeLoaders","__initializeModel","loadQuery","__loadQuery","rows","row","__addDocumentToCollection","__postInitialLoading","err","document","initialize","allDocs","include_docs","attachments","__dataReady","dataReady","printInfo","join","firstCollection","secondCollection","relationshipType","parentCollection","childCollection","ValueRegister","__parentCollection","__childCollection","__childAlias","childAlias","__parentAlias","parentAlias","__parentDeleteInProgress","__cascadeDelete","cascadeDelete","__itemParent","__itemChildren","childName","parentName","getParent","getChildren","setChildParent","childItem","parentId","parentChildren","oldParent","parentItemId","__respondToParentDeleted","__respondToChildDeleted","action","children","QueuedResponseDb","_db","queue","_nextId","_latestResolvedId","wrapPromise","dbCall","promiseId","nextId","hiddenPromise","returnPromise","queuePromise","response","promiseGotResolved","resolved","releasResolvedPromises","stop","str","charAt","toUpperCase","fn","myArray","i","len","addAsItem","object","index","indexOf","splice","filteredItems","Child","Parent","childProto","parentProto","source","target","fields","field","error","_register","set","value"],"mappings":"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","file":"sneakerjs.min.js","sourcesContent":["\"use strict\";\r\nangular.module('SneakerJS', []);","\r\nangular.module('SneakerJS').factory('BaseContainer', function($q) {\r\n  /*\r\n  A collection has an internal index of the objects in the database.\r\n  What it uses as keys and values is up to the derived class.\r\n  */\r\n  var BaseContainer = function()    {var self = this;\r\n    self.__index = null;\r\n    self.__db = null;\r\n    self.dbDocumentType = null;\r\n  };\r\n  var def = BaseContainer.prototype;\r\n  \r\n  def.postInitialLoading = function() {\r\n    //override if container needs to do any post loading operations\r\n  };\r\n  \r\n  def.__postAndLoad = function(doc)  {var self = this;\r\n    var defered = $q.defer();\r\n    self.__db.post(doc).then( function (result) {\r\n      if (result.ok) {\r\n        self.__db.get(result.id).then( function (docFromDb) {\r\n          defered.resolve(self.loadDocumentFromDb(docFromDb));\r\n        });\r\n      } else {\r\n        console.log(result);\r\n        throw \"Error fetching data\";\r\n      }\r\n    });\r\n    return defered.promise;\r\n  };\r\n  \r\n  return BaseContainer;\r\n});","\r\nangular.module('SneakerJS').factory('Collection', function(util, $q, BaseContainer) {\r\n\r\n  var Collection = function(db, singleItemName, fieldNames, options)    {var self = this;\r\n    var options = options || {};\r\n    self.itemName = singleItemName;\r\n    self.name = singleItemName; //This is how a relationship references collection\r\n    self.plural = options.plural || singleItemName + 's'\r\n    self.dbDocumentType = options.dbDocumentType || singleItemName;\r\n    self.__db = db;\r\n    self.__proto = options.proto || function(){};\r\n    self.__items = {};\r\n    self.__itemsAsArray = [];\r\n    self.__parentRelationships = {};\r\n    self.__relationships = [];\r\n    self.__fieldNames = fieldNames.slice();\r\n    self.__fullFieldNames = fieldNames.slice();\r\n    self.__fullFieldNames.push('_id');\r\n    self.__fullFieldNames.push('_rev');\r\n  };\r\n  util.inheritPrototype(Collection, BaseContainer);\r\n  var def = Collection.prototype;\r\n\r\n  def.registerChildRelationship = function(relationship)    {var self = this;\r\n    self.__relationships.push(relationship);\r\n  };\r\n  \r\n  def.registerParentRelationship = function(relationship, foreignKey, alias)    {var self = this;\r\n    self.__parentRelationships[alias] = relationship;\r\n    self.__relationships.push(relationship);\r\n    self.__fullFieldNames.push(foreignKey);\r\n  };\r\n  \r\n  def.registerManyToManyRelationship = function(relationship)    {var self = this;\r\n    self.__relationships.push(relationship);\r\n  };\r\n\r\n  def.loadDocumentFromDb = function(doc)    {var self = this;\r\n    var newItem = new self.__proto();\r\n    util.copyFields(doc, newItem, self.__fullFieldNames);\r\n    newItem.type = self.itemName;\r\n    self.__items[doc._id] = newItem;\r\n    self.__itemsAsArray.push(newItem);\r\n    return newItem;\r\n  };\r\n\r\n  def.getAccessFunctionDefinitions = function()    {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        single = capitalize(self.itemName),\r\n        plural = capitalize(self.plural);\r\n    return [\r\n      buildFunc('new' + single, self.newItem, true),\r\n      buildFunc('get' + single, self.getItem, false),\r\n      buildFunc('find' + plural, self.findItems, false),\r\n      buildFunc('all' + plural, self.allItems, false),\r\n    ]\r\n  };\r\n\r\n  def.getItem = function(id)    {var self = this;\r\n    return self.__items[id];\r\n  };\r\n\r\n  def.allItems = function()    {var self = this;\r\n    return self.__itemsAsArray;\r\n  };\r\n\r\n  def.findItems = function(query)    {var self = this;\r\n    /*\r\n    query can be:\r\n      a function returning true or false\r\n      an object like {name: 'deirdre'} -- which returns items whose properties match.\r\n      an empty object {} -- which returns all items.\r\n    TODO: what about parent properties?\r\n    */\r\n    var test;\r\n    if (typeof query === 'function') {\r\n      test = query;\r\n    } else if (typeof query === 'object') {\r\n      test = function(item) {\r\n        for (prop in query) {\r\n          if (item[prop] !== query[prop]) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n    } else {\r\n      throw 'Invalid argument for \"find\", must be an object or a function.';\r\n    }\r\n    return util.filterIndex(self.__items, test);\r\n  };\r\n\r\n  def.newItem = function(data)    {var self = this;\r\n    var deferred = $q.defer();\r\n    var doc = {};\r\n    var relationshipsToLink = {};\r\n    util.copyFields(data, doc, self.__fieldNames);\r\n    doc.type = self.dbDocumentType;\r\n    for (var alias in self.__parentRelationships) {\r\n      var parentItem = data[alias];\r\n      if (data[alias]) {\r\n        doc[alias] = parentItem._id;\r\n        relationshipsToLink[alias] = parentItem;\r\n      }\r\n    }\r\n    self.__postAndLoad(doc).then(function (newItem) {\r\n      for (var alias in relationshipsToLink) { \r\n        self.__parentRelationships[alias].linkNewlyLoadedChildToParent(newItem, parentItem);\r\n      }\r\n      deferred.resolve(newItem);\r\n    });\r\n    return deferred.promise;\r\n  };\r\n\r\n  def.saveItem = function(item)    {var self = this;\r\n    var deferred = $q.defer();\r\n    var doc = {};\r\n    util.copyFields(item, doc, self.__fullFieldNames);\r\n    doc.type = self.dbDocumentType;\r\n    self.__db.put(doc).then(function (result) {\r\n      item._rev = result.rev;\r\n      deferred.resolve(item._rev);\r\n    });\r\n    return deferred.promise;\r\n  };\r\n\r\n  def.deleteItem = function(item)    {var self = this;\r\n    var childDeletions = self.__relationships.map(function(relationship) {\r\n      return relationship.respondToItemDeleted(item, self);\r\n    });\r\n    return $q.all(childDeletions).then(function() {\r\n      self.__db.remove(item).then(function (result) {\r\n        delete self.__items[item._id];\r\n        util.removeFromArray(self.__itemsAsArray, item);\r\n      }, util.promiseFailed);\r\n    }, util.promiseFailed);\r\n  };\r\n\r\n  return Collection;\r\n});\r\n","    \r\n/*\r\n  Left and right may be absent from register.\r\n  Both registers will always be equal and complimentary:\r\n  {\r\n     p1: {items: [t6]}\r\n     p2: {items: [t4, t6]}\r\n  }\r\n  {\r\n     t6: {items: [p1, p2]},\r\n     t4: {items: [p2]},\r\n  }\r\n*/\r\n    \r\nangular.module('SneakerJS').factory('ManyToManyRelationship', function($q, BaseContainer, util) {\r\n  \r\n  var ManyToManyRelationship = function(db, leftCollection, rightCollection, options)    {var self = this;\r\n    var options = options || {};\r\n    self.__rightCollection = rightCollection;\r\n    self.__leftCollection = leftCollection;\r\n    var defaultDbDocumentTypeName = ('lnk_' + leftCollection.itemName + '_' + rightCollection.itemName).toLowerCase();\r\n    self.__functionNameEnd = '';\r\n    if (options.qualifier) {\r\n      self.__functionNameEnd = 'As' + util.capitalizeFirstLetter(options.qualifier);\r\n      defaultDbDocumentTypeName += '_as_' + options.qualifier.toLowerCase();\r\n    }\r\n    self.dbDocumentType = options.dbDocumentType || defaultDbDocumentTypeName;\r\n    self.name = self.dbDocumentType;\r\n    self.__db = db;\r\n    self.__leftCollection = leftCollection;\r\n    self.__rightCollection = rightCollection;\r\n    self.__leftRights = {};\r\n    self.__rightLefts = {};\r\n    self.__docsForReuse = [];\r\n    rightCollection.registerManyToManyRelationship(self);\r\n    leftCollection.registerManyToManyRelationship(self);\r\n  };\r\n  util.inheritPrototype(ManyToManyRelationship, BaseContainer);\r\n  var def = ManyToManyRelationship.prototype;\r\n  \r\n  def.getAccessFunctionDefinitions = function()  {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        leftName = capitalize(self.__leftCollection.itemName),\r\n        leftPlural = capitalize(self.__leftCollection.plural),\r\n        rightName = capitalize(self.__rightCollection.itemName),\r\n        rightPlural = capitalize(self.__rightCollection.plural),\r\n        end = self.__functionNameEnd,\r\n        getLeftRightsFnName = 'get' + leftName + rightPlural + end,\r\n        getRightLeftsFnName = 'get' + rightName + leftPlural + end,\r\n        addLeftRightFnName = 'add' + leftName + rightName + end,\r\n        removeLeftRightFnName = 'remove' + leftName + rightName + end,\r\n        isLeftLinkedToRightFnName = 'is' + leftName + 'LinkedTo' + rightName + end;\r\n    return [\r\n      buildFunc(getLeftRightsFnName, self.getLeftRights, false),\r\n      buildFunc(getRightLeftsFnName, self.getRightLefts, false),\r\n      buildFunc(addLeftRightFnName, self.addLink, true),\r\n      buildFunc(removeLeftRightFnName, self.removeLink, true),\r\n      buildFunc(isLeftLinkedToRightFnName, self.isLinked, false)\r\n    ];\r\n  };\r\n  \r\n  def.loadDocumentFromDb = function(doc)  {var self = this;\r\n    if (doc.right && \r\n        doc.left && \r\n        self.__updateOneRegisterWithDocument(self.__leftRights, doc.left, doc.right, doc)\r\n        ){\r\n      self.__updateOneRegisterWithDocument(self.__rightLefts, doc.right, doc.left, doc);\r\n      return true;\r\n    } else {\r\n      self.__sendDocumentToReusePile(doc);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  def.__updateOneRegisterWithDocument = function(register, key, id, doc)  {var self = this;\r\n    var entry = register[key];\r\n    if (entry === undefined) {\r\n      var docs = {};\r\n      docs[id] = doc;\r\n      register[key] = {docs: docs, items: []};\r\n    } else {\r\n      if (entry.docs[id]) {\r\n        return false;\r\n      }\r\n      entry.docs[id] = doc;\r\n    }\r\n    return true;\r\n  };\r\n  \r\n  def.getLeftRights = function (leftItem)  {var self = this;\r\n    return self.__getInitialisedEntry(self.__leftRights, leftItem._id).items;\r\n  };\r\n  \r\n  def.getRightLefts = function (rightItem)  {var self = this;\r\n    return self.__getInitialisedEntry(self.__rightLefts, rightItem._id).items;\r\n  };\r\n  \r\n  //TODO: assert they are of correct type?\r\n  def.addLink = function (leftItem, rightItem)    {var self = this;\r\n    if (self.isLinked(leftItem, rightItem)) {\r\n      return $q.when();\r\n    } else {\r\n      var deferred = $q.defer();\r\n      self.__writeLinkToDatabase(leftItem, rightItem).then(function(){\r\n        //will have gone through loadDocumentFromDb succesfully.\r\n        var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id),\r\n            rightEntry = self.__getInitialisedEntry(self.__rightLefts, rightItem._id);\r\n        util.addUnique(leftEntry.items, rightItem);\r\n        util.addUnique(rightEntry.items, leftItem);\r\n        deferred.resolve()\r\n      });\r\n      return deferred.promise; \r\n    };\r\n  };\r\n  \r\n  def.removeLink = function (leftItem, rightItem)    {var self = this;\r\n    var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id);\r\n    var rightEntry = self.__getInitialisedEntry(self.__rightLefts, rightItem._id);\r\n    var doc1 = self.__removeFromEntry(leftEntry, rightItem);\r\n    var doc2 = self.__removeFromEntry(rightEntry, leftItem);\r\n    if (doc1 !== doc2) {\r\n      throw \"This is strange...\"\r\n    }\r\n    return self.__db.remove(doc1);\r\n  };\r\n  \r\n  def.__removeFromEntry = function(entry, item)  {var self = this;\r\n    var doc = entry.docs[item._id];\r\n    util.removeFromArray(entry.items, item);\r\n    delete entry.docs[item._id];\r\n    return doc;\r\n  }\r\n   \r\n  def.isLinked = function (leftItem, rightItem)  {var self = this;\r\n    var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id);\r\n    return util.arrayContains(leftEntry.items, rightItem);\r\n  };\r\n  \r\n  def.respondToItemDeleted = function (item, collection)     {var self = this;\r\n    var opposites, itemIsFromRight;\r\n    if (collection === self.__rightCollection) {\r\n      itemIsFromRight = true;\r\n      opposites = self.getRightLefts(item);\r\n    } else if (collection === self.__leftCollection) {\r\n      itemIsFromRight = false;\r\n      opposites = self.getLeftRights(item);\r\n    }\r\n    opposites = opposites.slice();\r\n    var operations = [];\r\n    angular.forEach(opposites, function(oppositeItem) {\r\n      if (itemIsFromRight) {\r\n        var leftItem = oppositeItem;\r\n        var rightItem = item;\r\n      } else {\r\n        var leftItem = item;\r\n        var rightItem = oppositeItem;\r\n      }\r\n      operations.push(self.removeLink(leftItem, rightItem));\r\n    });\r\n    return $q.all(operations);\r\n  };\r\n  \r\n  /*\r\n  Should only be called if sure that items are not linked. Will reuse a document if one is available.\r\n  */\r\n  def.__writeLinkToDatabase = function(leftItem, rightItem)  {var self = this;\r\n    var deferred = $q.defer(),\r\n        doc = self.__docsForReuse.pop();\r\n    function finish(succesfullyLoaded) {\r\n      if (succesfullyLoaded) {\r\n        deferred.resolve();\r\n      } else {\r\n        throw 'ManyToManyRelationship.__writeLinkToDatabase failed to load document. This should not have happened.'\r\n      }\r\n    }\r\n    if (doc) {\r\n      doc.left = leftItem._id;\r\n      doc.right = rightItem._id;\r\n      self.__db.put(doc).then(function (result) {\r\n        doc._rev = result.rev;\r\n        finish(self.loadDocumentFromDb(doc));        \r\n      });\r\n    } else {\r\n      doc = {left: leftItem._id, right:rightItem._id};\r\n      self.__postAndLoad(doc).then(function (result) {\r\n        finish(result);\r\n      });\r\n    }\r\n    return deferred.promise;\r\n  };\r\n  \r\n  def.__sendDocumentToReusePile = function(doc)  {var self = this;\r\n    self.__docsForReuse.push(doc);\r\n  };\r\n  \r\n  def.__getInitialisedEntry = function (register, id)  {var self = this;\r\n    var entry = register[id];\r\n    if (entry === undefined) {\r\n      entry = {docs: {}, items: []};\r\n      register[id] = entry;\r\n    } else {\r\n      if (entry.items.length !== Object.keys(entry.docs).length) {\r\n        var collection = (register === self.__leftRights)? self.__rightCollection : self.__leftCollection; \r\n        entry.items.length = 0;\r\n        angular.forEach(entry.docs, function(doc, id) {\r\n          //TODO: what if item doesn't exist?\r\n          var item = collection.getItem(id);\r\n          if (item) {\r\n            entry.items.push(item);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return entry;\r\n  };\r\n  \r\n  return ManyToManyRelationship;\r\n});","\r\nangular.module('SneakerJS').service('model', function($q, Collection, ParentChildRelationship, ManyToManyRelationship) {\r\n\r\n  var self = this,\r\n      __db,\r\n      __loadQuery,\r\n      __containers = {},\r\n      __dbDocumentTypeLoaders = {},\r\n      __lastPromiseInQueue = $q.when(),\r\n      __relationshipDefinitionFunctions = {};\r\n\r\n  self.initialize = function(db, query) {\r\n    __db = db;\r\n    __loadQuery = query || function() {\r\n      return __db.allDocs({\r\n        include_docs: true,\r\n        attachments: false\r\n      });\r\n    }\r\n  };\r\n\r\n  var __dataReady;\r\n  self.dataReady = function (){\r\n    if (__dataReady === undefined) {\r\n      __dataReady = $q.defer();\r\n      __initializeModel().then( function () {\r\n        __dataReady.resolve();\r\n      });\r\n    }\r\n    return __dataReady.promise;\r\n  };\r\n\r\n  self.printInfo = function (){\r\n    angular.forEach(__containers, function(container) {\r\n      angular.forEach(container.getAccessFunctionDefinitions(), function(accessFunc) {\r\n        console.log('model.' + accessFunc.ModelFunctionName);\r\n      });\r\n    });\r\n  };\r\n\r\n  /************* MODEL DEFINITION FUNCTIONS *************/\r\n\r\n  self.collection = function(singleItemName, fieldNames, options){\r\n    var container = new Collection(__db, singleItemName, fieldNames, options);\r\n    __registerContainer(container);\r\n    return container;\r\n  };\r\n\r\n  self.join = function(firstCollection, secondCollection, options){\r\n    var options = options || {},\r\n        container,\r\n        relationshipType = options.type || 'parentChild';\r\n    angular.forEach([firstCollection, secondCollection], function(name) {\r\n      if (__containers[name] === undefined) {\r\n        throw 'Failed to create join, container not found: \"' + name + '\" ';\r\n      }\r\n    });\r\n    if (relationshipType === 'parentChild') {\r\n      var parentCollection = __containers[firstCollection];\r\n      var childCollection = __containers[secondCollection];\r\n      container = new ParentChildRelationship(__db, parentCollection, childCollection, options);\r\n    } else if (relationshipType === 'manyToMany') {\r\n      var leftCollection = __containers[firstCollection];\r\n      var rightCollection = __containers[secondCollection];\r\n      container = new ManyToManyRelationship(__db, leftCollection, rightCollection, options);\r\n    } else {\r\n      throw '\"' + relationshipType + '\" is not a valid relationship type';\r\n    }\r\n    __registerContainer(container);\r\n    return container;\r\n  };\r\n\r\n  function __registerContainer(container) {\r\n    var name = container.name;\r\n    if (__containers[name] !== undefined) {\r\n      throw 'Trying to create two containers with the same name: ' + name + ' on model but it already exists.';\r\n    }\r\n    __containers[name] = container;\r\n    __registerDocumentTypeLoader(container);\r\n    __createAccessFunctions(container);\r\n  };\r\n\r\n  /************* COLLECTION ACCESS FUNCTIONALITY ************\r\n\r\n    __createAccessFunctions() creates methods like:\r\n\r\n      model.newTask({})\r\n      model.getProjectTasks(project)\r\n\r\n    Query functions (getX, findX) return directly. Data changing functions (all other prefixed) return promises.\r\n\r\n    Query data may be dirty while a promise is waiting to complete, so you need to do this:\r\n\r\n    model.newTask({}).then(function(){\r\n      angular.copy($scope.tasks, model.getProjectTasks($scope.project));\r\n    });\r\n\r\n    Data changing functions are queued internally, so you can do this.\r\n    model.newTask({});\r\n    model.newTask({});\r\n    model.newTask({}).then(function(){\r\n      angular.copy($scope.tasks, model.getProjectTasks($scope.project));\r\n    });\r\n\r\n  */\r\n  self.saveItem = function(item) {\r\n    return __containers[item.type].saveItem(item);\r\n  };\r\n\r\n  self.deleteItem = function(item) {\r\n    return __containers[item.type].deleteItem(item);\r\n  };\r\n\r\n  function __createAccessFunctions(container){\r\n    angular.forEach(container.getAccessFunctionDefinitions(), function(accessFunc) {\r\n      var func, fnName = accessFunc.ModelFunctionName;\r\n      if (accessFunc.queuedPromise) {\r\n        func = __getQueuedFunction(container, accessFunc.containerFunction);\r\n      } else {\r\n        func = __getNonQueuedFunction(container, accessFunc.containerFunction);\r\n      }\r\n      if (self[fnName] !== undefined) {\r\n        throw 'Container ' + container.name + ' trying to create function ' + fnName + ' on model but it already exists.';\r\n      }\r\n      self[fnName] = func;\r\n    });\r\n  };\r\n\r\n  function __getNonQueuedFunction(container, containerFunction){\r\n    return function() {\r\n      return containerFunction.apply(container, arguments);\r\n    }\r\n  };\r\n\r\n  function __getQueuedFunction(container, containerFunction){\r\n    return function() {\r\n      var originalArgs = arguments;\r\n      var deferred = $q.defer();\r\n      __lastPromiseInQueue.then( function() {\r\n        __lastPromiseInQueue = containerFunction.apply(container, originalArgs);\r\n        __lastPromiseInQueue.then(function(result) {\r\n          deferred.resolve(result);\r\n        });\r\n      });\r\n      return deferred.promise;\r\n    }\r\n  };\r\n\r\n  /************* INITIAL LOADING FUNCTIONALITY *************/\r\n\r\n  function __registerDocumentTypeLoader(container) {\r\n    /* If container has field 'dbDocumentType' then every document whose 'type' field matches that\r\n    will be passed to the container's loadDocumentFromDb() function at loading.\r\n    */\r\n    var dbDocumentType = container.dbDocumentType;\r\n    if (dbDocumentType !== undefined) {\r\n      if (dbDocumentType in __dbDocumentTypeLoaders) {\r\n        var claimedBy = __dbDocumentTypeLoaders[dbDocumentType];\r\n        throw 'More than one container attempting to register database document type: \"' + dbDocumentType + '\".';\r\n      } else {\r\n        __dbDocumentTypeLoaders[dbDocumentType] = container;\r\n      }\r\n    }\r\n  };\r\n\r\n  function __initializeModel(){\r\n    var defer = $q.defer();\r\n    var loadQuery = __loadQuery();\r\n    loadQuery.then(function (result) {\r\n      angular.forEach(result.rows, function(row){\r\n        __addDocumentToCollection(row.doc);\r\n      });\r\n      __postInitialLoading();\r\n      defer.resolve();\r\n    }).catch(function (err) {\r\n      console.log(err);\r\n    });\r\n    return defer.promise;\r\n  };\r\n\r\n  function __addDocumentToCollection(document){\r\n    var dbDocumentType = document.type;\r\n    if (dbDocumentType) {\r\n      var container = __dbDocumentTypeLoaders[dbDocumentType];\r\n      if (container) {\r\n        container.loadDocumentFromDb(document, dbDocumentType);\r\n      } else {\r\n        console.log(document);\r\n        console.log('Could not load document \\\"' + document._id + '\\\" as type was not recognised (' + dbDocumentType + ')');\r\n      }\r\n    } else {\r\n      console.log('Could not load document \\\"' + document._id + '\\\" as it has no \\\"type\\\" field.');\r\n    }\r\n  };\r\n\r\n  function __postInitialLoading() {\r\n    angular.forEach(__containers, function(container) {\r\n      container.postInitialLoading();\r\n    });\r\n  }\r\n\r\n});\r\n\r\n","\r\nangular.module('SneakerJS').factory('ParentChildRelationship', function($q, BaseContainer, ValueRegister, util) {\r\n\r\n  var ParentChildRelationship = function(db, parentCollection, childCollection, options)    {var self = this;\r\n    var options = options || {};\r\n    self.__db = db;\r\n    self.__parentCollection = parentCollection;\r\n    self.__childCollection = childCollection;\r\n    self.__childAlias = options.childAlias || childCollection.plural;\r\n    self.__parentAlias = options.parentAlias || parentCollection.itemName;\r\n    self.__parentDeleteInProgress = new ValueRegister();\r\n    self.__cascadeDelete = (options.cascadeDelete === undefined)? true : options.cascadeDelete;\r\n    self.__itemParent = {};\r\n    self.__itemChildren = {};\r\n    self.name = 'relationship_' + childCollection.itemName + '_as_' + self.__childAlias + '_' +\r\n          parentCollection.itemName + '_as_' + self.__parentAlias;\r\n    self.foreignKey = 'fk__' + self.__parentAlias;\r\n    parentCollection.registerChildRelationship(self);\r\n    childCollection.registerParentRelationship(self, self.foreignKey, self.__parentAlias);\r\n  };\r\n  util.inheritPrototype(ParentChildRelationship, BaseContainer);\r\n  var def = ParentChildRelationship.prototype;\r\n\r\n  def.getAccessFunctionDefinitions = function()  {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        childName = capitalize(self.__childCollection.itemName),\r\n        childAlias = capitalize(self.__childAlias),\r\n        parentName = capitalize(self.__parentCollection.itemName),\r\n        parentAlias = capitalize(self.__parentAlias);\r\n    return [\r\n      buildFunc('get' + childName + parentAlias, self.getParent, false),\r\n      buildFunc('get' + parentName + childAlias, self.getChildren, false),\r\n      buildFunc('set' + childName + parentAlias, self.setChildParent, true),\r\n    ];\r\n  };\r\n\r\n  def.postInitialLoading = function()  {var self = this;\r\n    var key = self.foreignKey;\r\n    angular.forEach(self.__parentCollection.__items, function(parentItem) {\r\n      self.__itemChildren[parentItem._id] = [];\r\n    });\r\n    angular.forEach(self.__childCollection.__items, function(childItem) {\r\n      var parentId = childItem[key];\r\n      if (parentId) {\r\n        var parentItem = self.__parentCollection.getItem(parentId);\r\n        self.linkNewlyLoadedChildToParent(childItem, parentItem, parentId);\r\n      }\r\n    });\r\n  };\r\n  \r\n  def.linkNewlyLoadedChildToParent = function(childItem, parentItem, parentId)    {var self = this;\r\n    var parentId = parentId || parentItem._id;\r\n    self.__itemParent[childItem._id] = parentItem;\r\n    var parentChildren = self.__itemChildren[parentId];\r\n    if (parentChildren === undefined) {\r\n      self.__itemChildren[parentId] = [childItem];\r\n    } else {\r\n      parentChildren.push(childItem);\r\n    }\r\n  };\r\n\r\n  def.getParent = function (childItem)    {var self = this;\r\n    return self.__itemParent[childItem._id] || null;\r\n  };\r\n\r\n  def.getChildren = function (parentItem)    {var self = this;\r\n    return self.__itemChildren[parentItem._id] || [];\r\n  };\r\n\r\n  def.setChildParent = function (childItem, parentItem)    {var self = this;\r\n    //TODO: assert they are of correct type?\r\n    var oldParent = self.__itemParent[childItem._id];\r\n    var parentItemId = parentItem? parentItem._id : null;\r\n    if (oldParent) {\r\n      util.removeFromArray(self.__itemChildren[oldParent._id], childItem);\r\n    }\r\n    if (parentItem) {\r\n      if (self.__itemChildren[parentItem._id] === undefined) {\r\n        self.__itemChildren[parentItem._id] = [childItem];\r\n      } else {\r\n        self.__itemChildren[parentItem._id].push(childItem);\r\n      }\r\n    }\r\n    self.__itemParent[childItem._id] = parentItem;\r\n    childItem[self.foreignKey] = parentItemId;\r\n    return self.__childCollection.saveItem(childItem);\r\n  };\r\n\r\n  def.respondToItemDeleted = function (item, collection)     {var self = this;\r\n    if (collection === self.__parentCollection) {\r\n      return self.__respondToParentDeleted(item);\r\n    } else if (collection === self.__childCollection) {\r\n      return self.__respondToChildDeleted(item);\r\n    }\r\n  };\r\n\r\n  def.__respondToParentDeleted = function (parentItem)     {var self = this;\r\n    var action = (self.__cascadeDelete)?\r\n        function(childItem) {return self.__childCollection.deleteItem(childItem)} :\r\n        function(childItem) {return self.setChildParent(childItem, null)};\r\n    var children = self.getChildren(parentItem).slice(); //slice() is imortant!\r\n    return $q.all(children.map(action)).then(function() {\r\n      delete self.__itemChildren[parentItem._id];\r\n      return $q.when(true);\r\n    }, util.promiseFailed);\r\n  };\r\n\r\n  def.__respondToChildDeleted = function (childItem)     {var self = this;\r\n    var parentItem = self.getParent(childItem);\r\n    if (parentItem) {\r\n      util.removeFromArray(self.__itemChildren[parentItem._id], childItem);\r\n    }\r\n    delete self.__itemParent[childItem._id];\r\n    return $q.when(true);\r\n  };\r\n\r\n  return ParentChildRelationship;\r\n});\r\n","\r\nangular.module('SneakerJS').factory('QueuedResponseDb', function($q, ValueRegister) {\r\n  /*\r\n  post put get remove\r\n  */\r\n  var QueuedResponseDb = function(db) {\r\n    var self = this;\r\n    self._db = db;\r\n    self.queue = {};\r\n    self._nextId = 0;\r\n    self._latestResolvedId = 1;\r\n    \r\n    self.wrapPromise = function(dbCall, data) {\r\n      var promiseId = self.nextId();\r\n      var hiddenPromise = self._db[dbCall](data);\r\n      var returnPromise = $q.defer();\r\n      self.queuePromise(promiseId, returnPromise);\r\n      hiddenPromise.then(function(response) {\r\n        self.promiseGotResolved(promiseId, response);\r\n      });\r\n      return returnPromise.promise;\r\n    };\r\n    angular.forEach(['post', 'put', 'get', 'remove'], function (dbCall) {\r\n      self[dbCall] = function(data) {\r\n        return self.wrapPromise(dbCall, data);\r\n      }\r\n    });\r\n  };\r\n  \r\n  QueuedResponseDb.prototype.nextId = function (){\r\n    this._nextId ++;\r\n    return this._nextId;\r\n  }\r\n  \r\n  QueuedResponseDb.prototype.queuePromise = function(promiseId, returnPromise) {\r\n    this.queue[promiseId] = {\r\n      returnPromise: returnPromise,\r\n      resolved: false\r\n    };\r\n  };\r\n  \r\n  QueuedResponseDb.prototype.promiseGotResolved = function(promiseId, result) {\r\n    var promise = this.queue[promiseId]\r\n    promise['result'] = result;\r\n    promise.resolved = true;\r\n    this.releasResolvedPromises();\r\n  };\r\n  \r\n  QueuedResponseDb.prototype.releasResolvedPromises = function() {\r\n    var stop = false; // encounteredUnresolvedPromiseOrReachedEndOfQueue\r\n    while (!stop) {\r\n      entry = this.queue[this._latestResolvedId]\r\n      if (entry && entry.resolved) {\r\n        entry.returnPromise.resolve(entry.result);\r\n        this._latestResolvedId ++;\r\n      } else {\r\n        stop = true;\r\n      }\r\n    }\r\n  }\r\n  \r\n  return QueuedResponseDb;\r\n});","\r\n\r\n\r\nangular.module('SneakerJS').service('util', function($q) {\r\n  var self = this;\r\n\r\n  self.capitalizeFirstLetter = function(str) {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  };\r\n\r\n  self.createAccessFunctionDefinition = function(name, fn, queuedPromise) {\r\n    return {\r\n      ModelFunctionName: name,\r\n      containerFunction: fn,\r\n      queuedPromise: queuedPromise\r\n    }\r\n  };\r\n\r\n  self.arrayContains = function(myArray, item) {\r\n    for (var i = 0, len = myArray.length; i < len; i++) {\r\n      if (item === myArray[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  self.addUnique = function(myArray, item) {\r\n    if(!self.arrayContains(myArray, item)){\r\n      myArray.push(item);\r\n    }\r\n  }\r\n\r\n  self.addAsItem = function(object, key, item) {\r\n    //Where object[key] = [items...]\r\n    if (object[key] === undefined) {\r\n      object[key] = [item];\r\n    } else {\r\n      object[key].push(item);\r\n    }\r\n  };\r\n\r\n  self.removeFromArray = function(myArray, item) {\r\n    var index = myArray.indexOf(item);\r\n    if (index > -1) {\r\n      myArray.splice(index, 1);\r\n    }\r\n  };\r\n\r\n  self.filterIndex = function(index, test) {\r\n    //accepts an object like array.\r\n    var filteredItems = [];\r\n    angular.forEach(index, function(item) {\r\n      if (test(item)) {\r\n        filteredItems.push(item);\r\n      }\r\n    });\r\n    return filteredItems;\r\n  };\r\n\r\n  self.inheritPrototype = function(Child, Parent) {\r\n    var childProto = Child.prototype;\r\n    var parentProto = Parent.prototype;\r\n    for (var prop in parentProto) {\r\n      if (typeof parentProto[prop] == 'function') {\r\n        childProto[prop] = parentProto[prop];\r\n      }\r\n    }\r\n  };\r\n\r\n  self.copyFields = function(source, target, fields) {\r\n    angular.forEach(fields, function(field) {\r\n      target[field] = source[field];\r\n    });\r\n  };\r\n\r\n  self.promiseFailed = function(error) {\r\n    console.log('Promise failed!');\r\n    console.log(error);\r\n  }\r\n\r\n});\r\n","\r\nangular.module('SneakerJS').factory('ValueRegister', function() {\r\n  //\r\n  var ValueRegister = function() {\r\n    this._register = {};\r\n  };\r\n  ValueRegister.prototype.set = function(key, value) {\r\n    this._register[key] = value;\r\n  };\r\n  ValueRegister.prototype.get = function(key) {\r\n    return this._register[key];\r\n  };\r\n  \r\n  return ValueRegister;\r\n});\r\n"],"sourceRoot":"/source/"}