{"version":3,"sources":["BaseContainer.js","Collection.js","Initialize.js","ManyToManyRelationship.js","Model.js","ParentChildRelationship.js","Singleton.js","util.js"],"names":["angular","module","factory","$q","BaseContainer","self","this","__db","def","prototype","postInitialLoading","clear","__postAndLoad","doc","defered","defer","post","then","result","ok","console","log","get","id","docFromDb","resolve","loadDocumentFromDb","promise","util","Collection","db","singleItemName","fieldNames","options","itemName","name","plural","dbDocumentType","__proto","proto","__items","__itemsAsArray","__parentRelationships","__relationships","__fieldNames","slice","__fullFieldNames","push","inheritPrototype","registerChildRelationship","relationship","registerParentRelationship","foreignKey","alias","registerManyToManyRelationship","newItem","copyFields","type","_id","getAccessFunctionDefinitions","capitalize","capitalizeFirstLetter","buildFunc","createAccessFunctionDefinition","single","getItem","findItems","allItems","query","test","item","prop","filterIndex","data","relationshipsToLink","parentItem","linkNewlyLoadedChildToParent","saveItem","put","_rev","rev","deleteItem","childDeletions","map","respondToItemDeleted","all","remove","removeFromArray","service","SneakerModel","target","dbWrapper","initialLoadQuery","apply","ManyToManyRelationship","leftCollection","rightCollection","__rightCollection","__leftCollection","defaultDbDocumentTypeName","toLowerCase","__functionNameEnd","qualifier","__leftRights","__rightLefts","__docsForReuse","leftName","leftPlural","rightName","rightPlural","end","getLeftRightsFnName","getRightLeftsFnName","addLeftRightFnName","removeLeftRightFnName","isLeftLinkedToRightFnName","getLeftRights","getRightLefts","addLink","removeLink","isLinked","right","left","__updateOneRegisterWithDocument","__sendDocumentToReusePile","register","key","entry","undefined","docs","items","leftItem","__getInitialisedEntry","rightItem","when","__writeLinkToDatabase","leftEntry","rightEntry","addUnique","doc1","__removeFromEntry","doc2","arrayContains","collection","opposites","itemIsFromRight","operations","forEach","oppositeItem","finish","succesfullyLoaded","deferred","pop","length","Object","keys","Singleton","ParentChildRelationship","__loadQuery","allDocs","include_docs","attachments","__containers","__dbDocumentTypeLoaders","__lastPromiseInQueue","__relationshipDefinitionFunctions","__dataReady","changeCount","dataReady","__initializeModel","reload","container","printInfo","accessFunc","ModelFunctionName","__registerContainer","singleton","join","firstCollection","secondCollection","relationshipType","parentCollection","childCollection","__registerDocumentTypeLoader","__createAccessFunctions","func","fnName","queuedPromise","__getQueuedFunction","containerFunction","__getNonQueuedFunction","arguments","originalArgs","rows","row","__addDocumentToCollection","__postInitialLoading","err","document","__parentCollection","__childCollection","__childAlias","childAlias","__parentAlias","parentAlias","__cascadeDelete","cascadeDelete","__itemParent","__itemChildren","childName","parentName","getParent","getChildren","setChildParent","childItem","parentId","parentChildren","oldParent","parentItemId","__respondToParentDeleted","__respondToChildDeleted","action","children","promiseFailed","__doc","getData","setData","copy","str","charAt","toUpperCase","fn","myArray","i","len","addAsItem","object","index","indexOf","splice","filteredItems","Child","Parent","childProto","parentProto","source","fields","field","error"],"mappings":"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","file":"sneakerjs.min.js","sourcesContent":["\r\nangular.module('SneakerJS').factory('BaseContainer', function($q) {\r\n  /*\r\n  A collection has an internal index of the objects in the database.\r\n  What it uses as keys and values is up to the derived class.\r\n  */\r\n  var BaseContainer = function()    {var self = this;\r\n    self.__db = null;\r\n  };\r\n  var def = BaseContainer.prototype;\r\n  \r\n  def.postInitialLoading = function() {\r\n    //override if container needs to do any post loading operations\r\n  };\r\n  \r\n  def.clear = function() {\r\n    //must implement to clear items\r\n  }\r\n  \r\n  def.__postAndLoad = function(doc)  {var self = this;\r\n    var defered = $q.defer();\r\n    self.__db.post(doc).then( function (result) {\r\n      if (result.ok) {\r\n        self.__db.get(result.id).then( function (docFromDb) {\r\n          defered.resolve(self.loadDocumentFromDb(docFromDb));\r\n        });\r\n      } else {\r\n        console.log(result);\r\n        throw \"Error fetching data\";\r\n      }\r\n    });\r\n    return defered.promise;\r\n  };\r\n  \r\n  return BaseContainer;\r\n});","\r\nangular.module('SneakerJS').factory('Collection', function(util, $q, BaseContainer) {\r\n\r\n  var Collection = function(db, singleItemName, fieldNames, options)    {var self = this;\r\n    var options = options || {};\r\n    self.itemName = singleItemName;\r\n    self.name = singleItemName; //This is how a relationship references collection\r\n    self.plural = options.plural || singleItemName + 's'\r\n    self.dbDocumentType = options.dbDocumentType || singleItemName;\r\n    self.__db = db;\r\n    self.__proto = options.proto || function(){};\r\n    self.__items = {};\r\n    self.__itemsAsArray = [];\r\n    self.__parentRelationships = {};\r\n    self.__relationships = [];\r\n    self.__fieldNames = fieldNames.slice();\r\n    self.__fullFieldNames = fieldNames.slice();\r\n    self.__fullFieldNames.push('_id');\r\n    self.__fullFieldNames.push('_rev');\r\n  };\r\n  util.inheritPrototype(Collection, BaseContainer);\r\n  var def = Collection.prototype;\r\n\r\n  def.registerChildRelationship = function(relationship)    {var self = this;\r\n    self.__relationships.push(relationship);\r\n  };\r\n\r\n  def.registerParentRelationship = function(relationship, foreignKey, alias)    {var self = this;\r\n    self.__parentRelationships[alias] = relationship;\r\n    self.__relationships.push(relationship);\r\n    self.__fullFieldNames.push(foreignKey);\r\n  };\r\n\r\n  def.registerManyToManyRelationship = function(relationship)    {var self = this;\r\n    self.__relationships.push(relationship);\r\n  };\r\n\r\n  def.loadDocumentFromDb = function(doc)    {var self = this;\r\n    var newItem = new self.__proto();\r\n    util.copyFields(doc, newItem, self.__fullFieldNames);\r\n    newItem.type = self.itemName;\r\n    self.__items[doc._id] = newItem;\r\n    self.__itemsAsArray.push(newItem);\r\n    return newItem;\r\n  };\r\n\r\n  def.clear = function() {var self = this;\r\n    self.__items = {};\r\n    self.__itemsAsArray = [];\r\n  };\r\n\r\n  def.getAccessFunctionDefinitions = function()    {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        single = capitalize(self.itemName),\r\n        plural = capitalize(self.plural);\r\n    return [\r\n      buildFunc('new' + single, self.newItem, true),\r\n      buildFunc('get' + single, self.getItem, false),\r\n      buildFunc('find' + plural, self.findItems, false),\r\n      buildFunc('all' + plural, self.allItems, false),\r\n    ]\r\n  };\r\n\r\n  def.getItem = function(id)    {var self = this;\r\n    return self.__items[id];\r\n  };\r\n\r\n  def.allItems = function()    {var self = this;\r\n    return self.__itemsAsArray;\r\n  };\r\n\r\n  def.findItems = function(query)    {var self = this;\r\n    /*\r\n    query can be:\r\n      a function returning true or false\r\n      an object like {name: 'deirdre'} -- which returns items whose properties match.\r\n      an empty object {} -- which returns all items.\r\n    TODO: what about parent properties?\r\n    */\r\n    var test;\r\n    if (typeof query === 'function') {\r\n      test = query;\r\n    } else if (typeof query === 'object') {\r\n      test = function(item) {\r\n        for (prop in query) {\r\n          if (item[prop] !== query[prop]) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n    } else {\r\n      throw 'Invalid argument for \"find\", must be an object or a function.';\r\n    }\r\n    return util.filterIndex(self.__items, test);\r\n  };\r\n\r\n  def.newItem = function(data)    {var self = this;\r\n    var doc = {};\r\n    var relationshipsToLink = {};\r\n    util.copyFields(data, doc, self.__fieldNames);\r\n    doc.type = self.dbDocumentType;\r\n    for (var alias in self.__parentRelationships) {\r\n      var parentItem = data[alias];\r\n      var foreignKey = self.__parentRelationships[alias].foreignKey;\r\n      if (data[alias]) {\r\n        doc[foreignKey] = parentItem._id;\r\n        relationshipsToLink[alias] = parentItem;\r\n      }\r\n    }\r\n    return self.__postAndLoad(doc).then(function (newItem) {\r\n      for (var alias in relationshipsToLink) {\r\n        self.__parentRelationships[alias].linkNewlyLoadedChildToParent(newItem, parentItem);\r\n      }\r\n      return newItem;\r\n    });\r\n  };\r\n\r\n  def.saveItem = function(item)    {var self = this;\r\n    var doc = {};\r\n    util.copyFields(item, doc, self.__fullFieldNames);\r\n    doc.type = self.dbDocumentType;\r\n    return self.__db.put(doc).then(function (result) {\r\n      item._rev = result.rev;\r\n      return item._rev;\r\n    });\r\n  };\r\n\r\n  def.deleteItem = function(item)    {var self = this;\r\n    var childDeletions = self.__relationships.map(function(relationship) {\r\n      return relationship.respondToItemDeleted(item, self);\r\n    });\r\n    return $q.all(childDeletions).then(function() {\r\n      return self.__db.remove(item).then(function (result) {\r\n        delete self.__items[item._id];\r\n        util.removeFromArray(self.__itemsAsArray, item);\r\n      });\r\n    });\r\n  };\r\n\r\n  return Collection;\r\n});\r\n","\r\nangular.module('SneakerJS', []);\r\n\r\nangular.module('SneakerJS').service('SneakerInitialize', function($q, SneakerModel) {\r\n  return function(target, dbWrapper, initialLoadQuery) {\r\n    SneakerModel.apply(target, [dbWrapper, initialLoadQuery]);\r\n    return target;\r\n  }\r\n});","    \r\n/*\r\n  Left and right may be absent from register.\r\n  Both registers will always be equal and complimentary:\r\n  {\r\n     p1: {items: [t6]}\r\n     p2: {items: [t4, t6]}\r\n  }\r\n  {\r\n     t6: {items: [p1, p2]},\r\n     t4: {items: [p2]},\r\n  }\r\n*/\r\n    \r\nangular.module('SneakerJS').factory('ManyToManyRelationship', function($q, BaseContainer, util) {\r\n  \r\n  var ManyToManyRelationship = function(db, leftCollection, rightCollection, options)    {var self = this;\r\n    var options = options || {};\r\n    self.__rightCollection = rightCollection;\r\n    self.__leftCollection = leftCollection;\r\n    var defaultDbDocumentTypeName = ('lnk_' + leftCollection.itemName + '_' + rightCollection.itemName).toLowerCase();\r\n    self.__functionNameEnd = '';\r\n    if (options.qualifier) {\r\n      self.__functionNameEnd = 'As' + util.capitalizeFirstLetter(options.qualifier);\r\n      defaultDbDocumentTypeName += '_as_' + options.qualifier.toLowerCase();\r\n    }\r\n    self.dbDocumentType = options.dbDocumentType || defaultDbDocumentTypeName;\r\n    self.name = self.dbDocumentType;\r\n    self.__db = db;\r\n    self.__leftCollection = leftCollection;\r\n    self.__rightCollection = rightCollection;\r\n    self.__leftRights = {};\r\n    self.__rightLefts = {};\r\n    self.__docsForReuse = [];\r\n    rightCollection.registerManyToManyRelationship(self);\r\n    leftCollection.registerManyToManyRelationship(self);\r\n  };\r\n  util.inheritPrototype(ManyToManyRelationship, BaseContainer);\r\n  var def = ManyToManyRelationship.prototype;\r\n  \r\n  def.getAccessFunctionDefinitions = function()  {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        leftName = capitalize(self.__leftCollection.itemName),\r\n        leftPlural = capitalize(self.__leftCollection.plural),\r\n        rightName = capitalize(self.__rightCollection.itemName),\r\n        rightPlural = capitalize(self.__rightCollection.plural),\r\n        end = self.__functionNameEnd,\r\n        getLeftRightsFnName = 'get' + leftName + rightPlural + end,\r\n        getRightLeftsFnName = 'get' + rightName + leftPlural + end,\r\n        addLeftRightFnName = 'add' + leftName + rightName + end,\r\n        removeLeftRightFnName = 'remove' + leftName + rightName + end,\r\n        isLeftLinkedToRightFnName = 'is' + leftName + 'LinkedTo' + rightName + end;\r\n    return [\r\n      buildFunc(getLeftRightsFnName, self.getLeftRights, false),\r\n      buildFunc(getRightLeftsFnName, self.getRightLefts, false),\r\n      buildFunc(addLeftRightFnName, self.addLink, true),\r\n      buildFunc(removeLeftRightFnName, self.removeLink, true),\r\n      buildFunc(isLeftLinkedToRightFnName, self.isLinked, false)\r\n    ];\r\n  };\r\n  \r\n  def.loadDocumentFromDb = function(doc)  {var self = this;\r\n    if (doc.right && \r\n        doc.left && \r\n        self.__updateOneRegisterWithDocument(self.__leftRights, doc.left, doc.right, doc)\r\n        ){\r\n      self.__updateOneRegisterWithDocument(self.__rightLefts, doc.right, doc.left, doc);\r\n      return true;\r\n    } else {\r\n      self.__sendDocumentToReusePile(doc);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  def.clear = function() {var self = this;\r\n    self.__leftRights = {};\r\n    self.__rightLefts = {};\r\n    self.__docsForReuse = [];\r\n  };\r\n  \r\n  def.__updateOneRegisterWithDocument = function(register, key, id, doc)  {var self = this;\r\n    var entry = register[key];\r\n    if (entry === undefined) {\r\n      var docs = {};\r\n      docs[id] = doc;\r\n      register[key] = {docs: docs, items: []};\r\n    } else {\r\n      if (entry.docs[id]) {\r\n        return false;\r\n      }\r\n      entry.docs[id] = doc;\r\n    }\r\n    return true;\r\n  };\r\n  \r\n  def.getLeftRights = function (leftItem)  {var self = this;\r\n    return self.__getInitialisedEntry(self.__leftRights, leftItem._id).items;\r\n  };\r\n  \r\n  def.getRightLefts = function (rightItem)  {var self = this;\r\n    return self.__getInitialisedEntry(self.__rightLefts, rightItem._id).items;\r\n  };\r\n  \r\n  //TODO: assert they are of correct type?\r\n  def.addLink = function (leftItem, rightItem)    {var self = this;\r\n    if (self.isLinked(leftItem, rightItem)) {\r\n      return $q.when();\r\n    } else {\r\n      return self.__writeLinkToDatabase(leftItem, rightItem).then(function(){\r\n        //will have gone through loadDocumentFromDb succesfully.\r\n        var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id),\r\n            rightEntry = self.__getInitialisedEntry(self.__rightLefts, rightItem._id);\r\n        util.addUnique(leftEntry.items, rightItem);\r\n        util.addUnique(rightEntry.items, leftItem);\r\n      });\r\n    };\r\n  };\r\n  \r\n  def.removeLink = function (leftItem, rightItem)    {var self = this;\r\n    var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id);\r\n    var rightEntry = self.__getInitialisedEntry(self.__rightLefts, rightItem._id);\r\n    var doc1 = self.__removeFromEntry(leftEntry, rightItem);\r\n    var doc2 = self.__removeFromEntry(rightEntry, leftItem);\r\n    if (doc1 !== doc2) {\r\n      throw \"This is strange...\"\r\n    }\r\n    return self.__db.remove(doc1);\r\n  };\r\n  \r\n  def.__removeFromEntry = function(entry, item)  {var self = this;\r\n    var doc = entry.docs[item._id];\r\n    util.removeFromArray(entry.items, item);\r\n    delete entry.docs[item._id];\r\n    return doc;\r\n  }\r\n   \r\n  def.isLinked = function (leftItem, rightItem)  {var self = this;\r\n    var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id);\r\n    return util.arrayContains(leftEntry.items, rightItem);\r\n  };\r\n  \r\n  def.respondToItemDeleted = function (item, collection)     {var self = this;\r\n    var opposites, itemIsFromRight;\r\n    if (collection === self.__rightCollection) {\r\n      itemIsFromRight = true;\r\n      opposites = self.getRightLefts(item);\r\n    } else if (collection === self.__leftCollection) {\r\n      itemIsFromRight = false;\r\n      opposites = self.getLeftRights(item);\r\n    }\r\n    opposites = opposites.slice();\r\n    var operations = [];\r\n    angular.forEach(opposites, function(oppositeItem) {\r\n      if (itemIsFromRight) {\r\n        var leftItem = oppositeItem;\r\n        var rightItem = item;\r\n      } else {\r\n        var leftItem = item;\r\n        var rightItem = oppositeItem;\r\n      }\r\n      operations.push(self.removeLink(leftItem, rightItem));\r\n    });\r\n    return $q.all(operations);\r\n  };\r\n  \r\n  /*\r\n  Should only be called if sure that items are not linked. Will reuse a document if one is available.\r\n  */\r\n  //TODO: tidy this mess not to have var deferred = $q.defer()\r\n  def.__writeLinkToDatabase = function(leftItem, rightItem)  {var self = this;\r\n    var deferred = $q.defer(),\r\n        doc = self.__docsForReuse.pop();\r\n    function finish(succesfullyLoaded) {\r\n      if (succesfullyLoaded) {\r\n        deferred.resolve();\r\n      } else {\r\n        throw 'ManyToManyRelationship.__writeLinkToDatabase failed to load document. This should not have happened.'\r\n      }\r\n    }\r\n    if (doc) {\r\n      doc.left = leftItem._id;\r\n      doc.right = rightItem._id;\r\n      self.__db.put(doc).then(function (result) {\r\n        doc._rev = result.rev;\r\n        finish(self.loadDocumentFromDb(doc));        \r\n      });\r\n    } else {\r\n      doc = {left: leftItem._id, right:rightItem._id, type:self.dbDocumentType};\r\n      self.__postAndLoad(doc).then(function (result) {\r\n        finish(result);\r\n      });\r\n    }\r\n    return deferred.promise;\r\n  };\r\n  \r\n  def.__sendDocumentToReusePile = function(doc)  {var self = this;\r\n    self.__docsForReuse.push(doc);\r\n  };\r\n  \r\n  def.__getInitialisedEntry = function (register, id)  {var self = this;\r\n    var entry = register[id];\r\n    if (entry === undefined) {\r\n      entry = {docs: {}, items: []};\r\n      register[id] = entry;\r\n    } else {\r\n      if (entry.items.length !== Object.keys(entry.docs).length) {\r\n        var collection = (register === self.__leftRights)? self.__rightCollection : self.__leftCollection; \r\n        entry.items.length = 0;\r\n        angular.forEach(entry.docs, function(doc, id) {\r\n          //TODO: what if item doesn't exist?\r\n          var item = collection.getItem(id);\r\n          if (item) {\r\n            entry.items.push(item);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return entry;\r\n  };\r\n  \r\n  return ManyToManyRelationship;\r\n});","\r\nangular.module('SneakerJS').factory('SneakerModel', function(\r\n    $q, Collection, Singleton, ParentChildRelationship, ManyToManyRelationship\r\n    ){\r\n  \r\n  var SneakerModel = function(dbWrapper, initialLoadQuery) {var self = this;\r\n    self.__db = dbWrapper;\r\n    self.__loadQuery = initialLoadQuery || function() {\r\n      return dbWrapper.allDocs({\r\n        include_docs: true,\r\n        attachments: false\r\n      });\r\n    };\r\n    self.__containers = {};\r\n    self.__dbDocumentTypeLoaders = {};\r\n    self.__lastPromiseInQueue = $q.when();\r\n    self.__relationshipDefinitionFunctions = {};\r\n    self.__dataReady = undefined;\r\n    self.changeCount = 0;\r\n\r\n    self.dataReady = function() {\r\n      if (self.__dataReady === undefined) {\r\n        self.__dataReady = self.__initializeModel();\r\n      }\r\n      return self.__dataReady;\r\n    };\r\n\r\n    self.reload = function() {\r\n      self.__dataReady = undefined;\r\n      angular.forEach(self.__containers, function(container) {\r\n        container.clear();\r\n      });\r\n      return self.dataReady();\r\n    };\r\n\r\n    self.printInfo = function() {\r\n      angular.forEach(self.__containers, function(container) {\r\n        angular.forEach(container.getAccessFunctionDefinitions(), function(accessFunc) {\r\n          console.log('model.' + accessFunc.ModelFunctionName);\r\n        });\r\n      });\r\n    };\r\n\r\n    /************* MODEL DEFINITION FUNCTIONS *************/\r\n\r\n    self.collection = function(singleItemName, fieldNames, options) {\r\n      var container = new Collection(self.__db, singleItemName, fieldNames, options);\r\n      self.__registerContainer(container);\r\n      return container;\r\n    };\r\n\r\n    self.singleton = function(name, data) {\r\n      var container = new Singleton(self.__db, name, data);\r\n      self.__registerContainer(container);\r\n      return container;\r\n    };\r\n\r\n    self.join = function(firstCollection, secondCollection, options) {\r\n      var options = options || {};\r\n      var container;\r\n      var relationshipType = options.type || 'parentChild';\r\n      angular.forEach([firstCollection, secondCollection], function(name) {\r\n        if (self.__containers[name] === undefined) {\r\n          throw 'Failed to create join, container not found: \"' + name + '\" ';\r\n        }\r\n      });\r\n      if (relationshipType === 'parentChild') {\r\n        var parentCollection = self.__containers[firstCollection];\r\n        var childCollection = self.__containers[secondCollection];\r\n        container = new ParentChildRelationship(self.__db, parentCollection, childCollection, options);\r\n      } else if (relationshipType.toLowerCase() === 'many-to-many') {\r\n        var leftCollection = self.__containers[firstCollection];\r\n        var rightCollection = self.__containers[secondCollection];\r\n        container = new ManyToManyRelationship(self.__db, leftCollection, rightCollection, options);\r\n      } else {\r\n        throw '\"' + relationshipType + '\" is not a valid relationship type';\r\n      }\r\n      self.__registerContainer(container);\r\n      return container;\r\n    };\r\n\r\n    self.__registerContainer = function(container) {\r\n      var name = container.name;\r\n      if (self.__containers[name] !== undefined) {\r\n        throw 'Trying to create containers with name: ' + name + ' on model but it already exists.';\r\n      }\r\n      self.__containers[name] = container;\r\n      self.__registerDocumentTypeLoader(container);\r\n      self.__createAccessFunctions(container);\r\n    };\r\n\r\n    /************* COLLECTION ACCESS FUNCTIONALITY ************\r\n\r\n      __createAccessFunctions() creates methods like:\r\n\r\n        model.newTask({})\r\n        model.getProjectTasks(project)\r\n\r\n      Query functions (getX, findX) return directly. Data changing functions (all other prefixed) return promises.\r\n\r\n      Query data may be dirty while a promise is waiting to complete, so you need to do this:\r\n\r\n      model.newTask({}).then(function(){\r\n        angular.copy($scope.tasks, model.getProjectTasks($scope.project));\r\n      });\r\n\r\n      Data changing functions are queued internally, so you can do this.\r\n      model.newTask({});\r\n      model.newTask({});\r\n      model.newTask({}).then(function(){\r\n        angular.copy($scope.tasks, model.getProjectTasks($scope.project));\r\n      });\r\n\r\n    */\r\n    self.saveItem = function(item) {\r\n      self.changeCount ++;\r\n      return $q.when(self.__containers[item.type].saveItem(item));\r\n    };\r\n\r\n    self.deleteItem = function(item) {\r\n      self.changeCount ++;\r\n      return $q.when(self.__containers[item.type].deleteItem(item));\r\n    };\r\n\r\n    self.__createAccessFunctions = function(container) {\r\n      angular.forEach(container.getAccessFunctionDefinitions(), function(accessFunc) {\r\n        var func, fnName = accessFunc.ModelFunctionName;\r\n        if (accessFunc.queuedPromise) {\r\n          func = self.__getQueuedFunction(container, accessFunc.containerFunction);\r\n        } else {\r\n          func = self.__getNonQueuedFunction(container, accessFunc.containerFunction);\r\n        }\r\n        if (self[fnName] !== undefined) {\r\n          throw 'Container ' + container.name + ' trying to create function ' +\r\n                  fnName + ' on model but it already exists.';\r\n        }\r\n        self[fnName] = func;\r\n      });\r\n    };\r\n\r\n    self.__getNonQueuedFunction = function(container, containerFunction) {\r\n      return function() {\r\n        return containerFunction.apply(container, arguments);\r\n      }\r\n    };\r\n\r\n    self.__getQueuedFunction = function(container, containerFunction) {\r\n      /*This returns the function which actually gets called on e.g. mode.newPerson()\r\n      Keep the the $q.defer() so it wraps it in a $q promise.\r\n      */\r\n      return function() {\r\n        var originalArgs = arguments;\r\n        var deferred = $q.defer();\r\n        self.__lastPromiseInQueue.then( function() {\r\n          self.__lastPromiseInQueue = containerFunction.apply(container, originalArgs);\r\n          self.__lastPromiseInQueue.then(function(result) {\r\n            self.changeCount ++;\r\n            deferred.resolve(result);\r\n          });\r\n        });\r\n        return deferred.promise;\r\n      }\r\n    };\r\n\r\n    /************* INITIAL LOADING FUNCTIONALITY *************/\r\n\r\n    self.__registerDocumentTypeLoader = function(container) {\r\n      /* If container has field 'dbDocumentType' then every document whose 'type' field matches that\r\n      will be passed to the container's loadDocumentFromDb() function at loading.\r\n      */\r\n      var dbDocumentType = container.dbDocumentType;\r\n      if (dbDocumentType !== undefined) {\r\n        if (dbDocumentType in self.__dbDocumentTypeLoaders) {\r\n          var claimedBy = self.__dbDocumentTypeLoaders[dbDocumentType];\r\n          throw 'More than one container attempting to register database document type: \"' + dbDocumentType + '\".';\r\n        } else {\r\n          self.__dbDocumentTypeLoaders[dbDocumentType] = container;\r\n        }\r\n      }\r\n    };\r\n\r\n    self.__initializeModel = function() {\r\n      return self.__loadQuery().then(function (result) {\r\n        angular.forEach(result.rows, function(row){\r\n          self.__addDocumentToCollection(row.doc);\r\n        });\r\n        self.__postInitialLoading();\r\n        return result.rows.length;\r\n      }).catch(function (err) {\r\n        console.log(err);\r\n      });\r\n    };\r\n\r\n    self.__addDocumentToCollection = function(document) {\r\n      var dbDocumentType = document.type;\r\n      if (dbDocumentType) {\r\n        var container = self.__dbDocumentTypeLoaders[dbDocumentType];\r\n        if (container) {\r\n          container.loadDocumentFromDb(document, dbDocumentType);\r\n        } else {\r\n          console.log(document);\r\n          console.log('Could not load document \\\"' + document._id + '\\\" as type was not recognised (' + dbDocumentType + ')');\r\n        }\r\n      } else {\r\n        console.log('Could not load document \\\"' + document._id + '\\\" as it has no \\\"type\\\" field.');\r\n      }\r\n    };\r\n\r\n    self.__postInitialLoading = function() {\r\n      angular.forEach(self.__containers, function(container) {\r\n        container.postInitialLoading();\r\n      });\r\n    };\r\n  \r\n  };\r\n  return SneakerModel;\r\n  \r\n});","\r\nangular.module('SneakerJS').factory('ParentChildRelationship', function($q, BaseContainer, util) {\r\n\r\n  var ParentChildRelationship = function(db, parentCollection, childCollection, options)    {var self = this;\r\n    var options = options || {};\r\n    self.__db = db;\r\n    self.__parentCollection = parentCollection;\r\n    self.__childCollection = childCollection;\r\n    self.__childAlias = options.childAlias || childCollection.plural;\r\n    self.__parentAlias = options.parentAlias || parentCollection.itemName;\r\n    self.__cascadeDelete = (options.cascadeDelete === undefined)? true : options.cascadeDelete;\r\n    self.__itemParent = {};\r\n    self.__itemChildren = {};\r\n    self.name = 'relationship_' + childCollection.itemName + '_as_' + self.__childAlias + '_' +\r\n          parentCollection.itemName + '_as_' + self.__parentAlias;\r\n    self.foreignKey = 'fk__' + self.__parentAlias;\r\n    parentCollection.registerChildRelationship(self);\r\n    childCollection.registerParentRelationship(self, self.foreignKey, self.__parentAlias);\r\n  };\r\n  util.inheritPrototype(ParentChildRelationship, BaseContainer);\r\n  var def = ParentChildRelationship.prototype;\r\n\r\n  def.getAccessFunctionDefinitions = function()  {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        childName = capitalize(self.__childCollection.itemName),\r\n        childAlias = capitalize(self.__childAlias),\r\n        parentName = capitalize(self.__parentCollection.itemName),\r\n        parentAlias = capitalize(self.__parentAlias);\r\n    return [\r\n      buildFunc('get' + childName + parentAlias, self.getParent, false),\r\n      buildFunc('get' + parentName + childAlias, self.getChildren, false),\r\n      buildFunc('set' + childName + parentAlias, self.setChildParent, true),\r\n    ];\r\n  };\r\n\r\n  def.postInitialLoading = function()  {var self = this;\r\n    var key = self.foreignKey;\r\n    angular.forEach(self.__parentCollection.__items, function(parentItem) {\r\n      self.__itemChildren[parentItem._id] = [];\r\n    });\r\n    angular.forEach(self.__childCollection.__items, function(childItem) {\r\n      var parentId = childItem[key];\r\n      if (parentId) {\r\n        var parentItem = self.__parentCollection.getItem(parentId);\r\n        self.linkNewlyLoadedChildToParent(childItem, parentItem, parentId);\r\n      }\r\n    });\r\n  };\r\n  \r\n  def.clear = function() {var self = this;\r\n    self.__itemParent = {};\r\n    self.__itemChildren = {};\r\n  };\r\n  \r\n  def.linkNewlyLoadedChildToParent = function(childItem, parentItem, parentId)    {var self = this;\r\n    var parentId = parentId || parentItem._id;\r\n    self.__itemParent[childItem._id] = parentItem;\r\n    var parentChildren = self.__itemChildren[parentId];\r\n    if (parentChildren === undefined) {\r\n      self.__itemChildren[parentId] = [childItem];\r\n    } else {\r\n      parentChildren.push(childItem);\r\n    }\r\n  };\r\n\r\n  def.getParent = function (childItem)    {var self = this;\r\n    return self.__itemParent[childItem._id] || null;\r\n  };\r\n\r\n  def.getChildren = function (parentItem)    {var self = this;\r\n    return self.__itemChildren[parentItem._id] || [];\r\n  };\r\n\r\n  def.setChildParent = function (childItem, parentItem)    {var self = this;\r\n    //TODO: assert they are of correct type?\r\n    var oldParent = self.__itemParent[childItem._id];\r\n    var parentItemId = parentItem? parentItem._id : null;\r\n    if (oldParent) {\r\n      util.removeFromArray(self.__itemChildren[oldParent._id], childItem);\r\n    }\r\n    if (parentItem) {\r\n      if (self.__itemChildren[parentItem._id] === undefined) {\r\n        self.__itemChildren[parentItem._id] = [childItem];\r\n      } else {\r\n        self.__itemChildren[parentItem._id].push(childItem);\r\n      }\r\n    }\r\n    self.__itemParent[childItem._id] = parentItem;\r\n    childItem[self.foreignKey] = parentItemId;\r\n    return self.__childCollection.saveItem(childItem);\r\n  };\r\n\r\n  def.respondToItemDeleted = function (item, collection)     {var self = this;\r\n    if (collection === self.__parentCollection) {\r\n      return self.__respondToParentDeleted(item);\r\n    } else if (collection === self.__childCollection) {\r\n      return self.__respondToChildDeleted(item);\r\n    }\r\n  };\r\n\r\n  def.__respondToParentDeleted = function (parentItem)     {var self = this;\r\n    var action = (self.__cascadeDelete)?\r\n        function(childItem) {return self.__childCollection.deleteItem(childItem)} :\r\n        function(childItem) {return self.setChildParent(childItem, null)};\r\n    var children = self.getChildren(parentItem).slice(); //slice() is imortant!\r\n    return $q.all(children.map(action)).then(function() {\r\n      delete self.__itemChildren[parentItem._id];\r\n      return $q.when(true);\r\n    }, util.promiseFailed);\r\n  };\r\n\r\n  def.__respondToChildDeleted = function (childItem)     {var self = this;\r\n    var parentItem = self.getParent(childItem);\r\n    if (parentItem) {\r\n      util.removeFromArray(self.__itemChildren[parentItem._id], childItem);\r\n    }\r\n    delete self.__itemParent[childItem._id];\r\n    return $q.when(true);\r\n  };\r\n\r\n  return ParentChildRelationship;\r\n});\r\n","\r\nangular.module('SneakerJS').factory('Singleton', function(util, BaseContainer) {\r\n\r\n  var Singleton = function(db, name)    {var self = this;\r\n    self.name = name;\r\n    self.dbDocumentType = 'singleton__' + name;\r\n    self.__db = db;\r\n    self.__doc = null;\r\n  };\r\n  util.inheritPrototype(Singleton, BaseContainer);\r\n  var def = Singleton.prototype;\r\n  \r\n  def.loadDocumentFromDb = function(doc)    {var self = this;\r\n    if (self.__doc !== null) {\r\n      throw 'found singleton of type ' + self.name + ' more than once in db';\r\n    }\r\n    if (doc._id !== self.dbDocumentType) {\r\n      throw 'Expected singleton type ' + self.name + ' to have _id: ' + self.dbDocumentType;\r\n    }\r\n    self.__doc = doc;\r\n    return self.__doc.data;\r\n  };\r\n  \r\n  def.clear = function() {var self = this;\r\n    self.__doc = null;\r\n  };\r\n\r\n  def.getAccessFunctionDefinitions = function()    {var self = this;\r\n    return [\r\n      util.createAccessFunctionDefinition('get' + util.capitalizeFirstLetter(self.name), self.getData, false),\r\n      util.createAccessFunctionDefinition('set' + util.capitalizeFirstLetter(self.name), self.setData, false)\r\n    ]\r\n  };\r\n  \r\n  def.getData = function() {var self = this;\r\n    return (self.__doc)? self.__doc.data : {};\r\n  };\r\n  \r\n  def.setData = function(data) {var self = this;\r\n    if (!self.__doc){\r\n      self.__doc = {\r\n        type: self.dbDocumentType,\r\n        _id: self.dbDocumentType,\r\n        data: {}\r\n      }\r\n    }\r\n    angular.copy(data, self.__doc.data);\r\n    return self.__db.put(self.__doc).then(function (result) {\r\n      self.__doc._rev = result.rev;\r\n      return result.rev;\r\n    });\r\n  };\r\n  \r\n  return Singleton; \r\n});","\r\n\r\n\r\nangular.module('SneakerJS').service('util', function($q) {\r\n  var self = this;\r\n\r\n  self.capitalizeFirstLetter = function(str) {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  };\r\n\r\n  self.createAccessFunctionDefinition = function(name, fn, queuedPromise) {\r\n    return {\r\n      ModelFunctionName: name,\r\n      containerFunction: fn,\r\n      queuedPromise: queuedPromise\r\n    }\r\n  };\r\n\r\n  self.arrayContains = function(myArray, item) {\r\n    for (var i = 0, len = myArray.length; i < len; i++) {\r\n      if (item === myArray[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  self.addUnique = function(myArray, item) {\r\n    if(!self.arrayContains(myArray, item)){\r\n      myArray.push(item);\r\n    }\r\n  }\r\n\r\n  self.addAsItem = function(object, key, item) {\r\n    //Where object[key] = [items...]\r\n    if (object[key] === undefined) {\r\n      object[key] = [item];\r\n    } else {\r\n      object[key].push(item);\r\n    }\r\n  };\r\n\r\n  self.removeFromArray = function(myArray, item) {\r\n    var index = myArray.indexOf(item);\r\n    if (index > -1) {\r\n      myArray.splice(index, 1);\r\n    }\r\n  };\r\n\r\n  self.filterIndex = function(index, test) {\r\n    //accepts an object like array.\r\n    var filteredItems = [];\r\n    angular.forEach(index, function(item) {\r\n      if (test(item)) {\r\n        filteredItems.push(item);\r\n      }\r\n    });\r\n    return filteredItems;\r\n  };\r\n\r\n  self.inheritPrototype = function(Child, Parent) {\r\n    var childProto = Child.prototype;\r\n    var parentProto = Parent.prototype;\r\n    for (var prop in parentProto) {\r\n      if (typeof parentProto[prop] == 'function') {\r\n        childProto[prop] = parentProto[prop];\r\n      }\r\n    }\r\n  };\r\n\r\n  self.copyFields = function(source, target, fields) {\r\n    angular.forEach(fields, function(field) {\r\n      target[field] = source[field];\r\n    });\r\n  };\r\n\r\n  self.promiseFailed = function(error) {\r\n    console.log('Promise failed!');\r\n    console.log(error);\r\n  }\r\n\r\n});\r\n"],"sourceRoot":"/source/"}