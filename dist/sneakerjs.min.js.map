{"version":3,"sources":["BaseContainer.js","Collection.js","ManyToManyRelationship.js","Model.js","ParentChildRelationship.js","Singleton.js","util.js"],"names":["angular","module","factory","$q","SnjsBaseContainer","self","this","__db","def","prototype","postInitialLoading","clear","__postAndLoad","doc","defered","defer","post","then","result","ok","console","log","get","id","docFromDb","resolve","loadDocumentFromDb","promise","SnjsUtil","util","SnjsCollection","db","singleItemName","fieldNames","options","itemName","name","plural","dbDocumentType","__proto","proto","__items","__itemsAsArray","__parentRelationships","__relationships","__fieldNames","slice","__fullFieldNames","push","inheritPrototype","registerChildRelationship","relationship","registerParentRelationship","foreignKey","alias","registerManyToManyRelationship","newItem","copyFields","type","_id","getAccessFunctionDefinitions","capitalize","capitalizeFirstLetter","buildFunc","createAccessFunctionDefinition","single","getItem","findItems","allItems","query","test","item","prop","filterIndex","data","relationshipsToLink","parentItem","linkNewlyLoadedChildToParent","saveItem","put","_rev","rev","deleteItem","childDeletions","map","respondToItemDeleted","all","remove","removeFromArray","SnjsManyToManyRelationship","leftCollection","rightCollection","__rightCollection","__leftCollection","defaultDbDocumentTypeName","toLowerCase","__functionNameEnd","qualifier","__leftRights","__rightLefts","__docsForReuse","leftName","leftPlural","rightName","rightPlural","end","getLeftRightsFnName","getRightLeftsFnName","addLeftRightFnName","removeLeftRightFnName","isLeftLinkedToRightFnName","getLeftRights","getRightLefts","addLink","removeLink","isLinked","right","left","__updateOneRegisterWithDocument","__sendDocumentToReusePile","register","key","entry","undefined","docs","items","leftItem","__getInitialisedEntry","rightItem","when","__writeLinkToDatabase","leftEntry","rightEntry","addUnique","doc1","__removeFromEntry","doc2","arrayContains","collection","opposites","itemIsFromRight","operations","forEach","oppositeItem","finish","succesfullyLoaded","deferred","pop","length","Object","keys","SnjsSingleton","SnjsParentChildRelationship","SneakerModel","dbWrapper","initialLoadQuery","__loadQuery","allDocs","include_docs","attachments","__containers","__dbDocumentTypeLoaders","__lastPromiseInQueue","__relationshipDefinitionFunctions","__dataReady","changeCount","dataReady","__initializeModel","reload","container","printInfo","accessFunc","ModelFunctionName","__registerContainer","singleton","join","firstCollection","secondCollection","relationshipType","parentCollection","childCollection","parentChild","parentCollectionName","childCollectionName","__ensureCollectionsExist","manyToMany","leftCollectionName","rightCollectionName","collectionNames","__registerDocumentTypeLoader","__createAccessFunctions","func","fnName","queuedPromise","__getQueuedFunction","containerFunction","__getNonQueuedFunction","apply","arguments","originalArgs","rows","row","__addDocumentToCollection","__postInitialLoading","err","document","__parentCollection","__childCollection","__childAlias","childAlias","__parentAlias","parentAlias","__cascadeDelete","cascadeDelete","__itemParent","__itemChildren","childName","parentName","getParent","getChildren","setChildParent","childItem","parentId","parentChildren","oldParent","parentItemId","__respondToParentDeleted","__respondToChildDeleted","action","children","promiseFailed","__doc","getData","setData","copy","service","str","charAt","toUpperCase","fn","myArray","i","len","addAsItem","object","index","indexOf","splice","filteredItems","Child","Parent","childProto","parentProto","source","target","fields","field","error"],"mappings":"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","file":"sneakerjs.min.js","sourcesContent":["\r\nangular.module('SneakerJS').factory('SnjsBaseContainer', function($q) {\r\n  /*\r\n  A collection has an internal index of the objects in the database.\r\n  What it uses as keys and values is up to the derived class.\r\n  */\r\n  var SnjsBaseContainer = function()    {var self = this;\r\n    self.__db = null;\r\n  };\r\n  var def = SnjsBaseContainer.prototype;\r\n  \r\n  def.postInitialLoading = function() {\r\n    //override if container needs to do any post loading operations\r\n  };\r\n  \r\n  def.clear = function() {\r\n    //must implement to clear items\r\n  }\r\n  \r\n  def.__postAndLoad = function(doc)  {var self = this;\r\n    var defered = $q.defer();\r\n    self.__db.post(doc).then( function (result) {\r\n      if (result.ok) {\r\n        self.__db.get(result.id).then( function (docFromDb) {\r\n          defered.resolve(self.loadDocumentFromDb(docFromDb));\r\n        });\r\n      } else {\r\n        console.log(result);\r\n        throw \"Error fetching data\";\r\n      }\r\n    });\r\n    return defered.promise;\r\n  };\r\n  \r\n  return SnjsBaseContainer;\r\n});","\r\nangular.module('SneakerJS').factory('SnjsCollection', function(SnjsUtil, $q, SnjsBaseContainer) {\r\n  \r\n  var util = SnjsUtil;\r\n  var SnjsCollection = function(db, singleItemName, fieldNames, options)    {var self = this;\r\n    var options = options || {};\r\n    self.itemName = singleItemName;\r\n    self.name = singleItemName; //This is how a relationship references collection\r\n    self.plural = options.plural || singleItemName + 's'\r\n    self.dbDocumentType = options.dbDocumentType || singleItemName;\r\n    self.__db = db;\r\n    self.__proto = options.proto || function(){};\r\n    self.__items = {};\r\n    self.__itemsAsArray = [];\r\n    self.__parentRelationships = {};\r\n    self.__relationships = [];\r\n    self.__fieldNames = fieldNames.slice();\r\n    self.__fullFieldNames = fieldNames.slice();\r\n    self.__fullFieldNames.push('_id');\r\n    self.__fullFieldNames.push('_rev');\r\n  };\r\n  util.inheritPrototype(SnjsCollection, SnjsBaseContainer);\r\n  var def = SnjsCollection.prototype;\r\n\r\n  def.registerChildRelationship = function(relationship)    {var self = this;\r\n    self.__relationships.push(relationship);\r\n  };\r\n\r\n  def.registerParentRelationship = function(relationship, foreignKey, alias)    {var self = this;\r\n    self.__parentRelationships[alias] = relationship;\r\n    self.__relationships.push(relationship);\r\n    self.__fullFieldNames.push(foreignKey);\r\n  };\r\n\r\n  def.registerManyToManyRelationship = function(relationship)    {var self = this;\r\n    self.__relationships.push(relationship);\r\n  };\r\n\r\n  def.loadDocumentFromDb = function(doc)    {var self = this;\r\n    var newItem = new self.__proto();\r\n    util.copyFields(doc, newItem, self.__fullFieldNames);\r\n    newItem.type = self.itemName;\r\n    self.__items[doc._id] = newItem;\r\n    self.__itemsAsArray.push(newItem);\r\n    return newItem;\r\n  };\r\n\r\n  def.clear = function() {var self = this;\r\n    self.__items = {};\r\n    self.__itemsAsArray = [];\r\n  };\r\n\r\n  def.getAccessFunctionDefinitions = function()    {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        single = capitalize(self.itemName),\r\n        plural = capitalize(self.plural);\r\n    return [\r\n      buildFunc('new' + single, self.newItem, true),\r\n      buildFunc('get' + single, self.getItem, false),\r\n      buildFunc('find' + plural, self.findItems, false),\r\n      buildFunc('all' + plural, self.allItems, false),\r\n    ]\r\n  };\r\n\r\n  def.getItem = function(id)    {var self = this;\r\n    return self.__items[id];\r\n  };\r\n\r\n  def.allItems = function()    {var self = this;\r\n    return self.__itemsAsArray;\r\n  };\r\n\r\n  def.findItems = function(query)    {var self = this;\r\n    /*\r\n    query can be:\r\n      a function returning true or false\r\n      an object like {name: 'deirdre'} -- which returns items whose properties match.\r\n      an empty object {} -- which returns all items.\r\n    TODO: what about parent properties?\r\n    */\r\n    var test;\r\n    if (typeof query === 'function') {\r\n      test = query;\r\n    } else if (typeof query === 'object') {\r\n      test = function(item) {\r\n        for (prop in query) {\r\n          if (item[prop] !== query[prop]) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n    } else {\r\n      throw 'Invalid argument for \"find\", must be an object or a function.';\r\n    }\r\n    return util.filterIndex(self.__items, test);\r\n  };\r\n\r\n  def.newItem = function(data)    {var self = this;\r\n    var doc = {};\r\n    var relationshipsToLink = {};\r\n    util.copyFields(data, doc, self.__fieldNames);\r\n    doc.type = self.dbDocumentType;\r\n    for (var alias in self.__parentRelationships) {\r\n      var parentItem = data[alias];\r\n      var foreignKey = self.__parentRelationships[alias].foreignKey;\r\n      if (data[alias]) {\r\n        doc[foreignKey] = parentItem._id;\r\n        relationshipsToLink[alias] = parentItem;\r\n      }\r\n    }\r\n    return self.__postAndLoad(doc).then(function (newItem) {\r\n      for (var alias in relationshipsToLink) {\r\n        self.__parentRelationships[alias].linkNewlyLoadedChildToParent(newItem, parentItem);\r\n      }\r\n      return newItem;\r\n    });\r\n  };\r\n\r\n  def.saveItem = function(item)    {var self = this;\r\n    var doc = {};\r\n    util.copyFields(item, doc, self.__fullFieldNames);\r\n    doc.type = self.dbDocumentType;\r\n    return self.__db.put(doc).then(function (result) {\r\n      item._rev = result.rev;\r\n      return item._rev;\r\n    });\r\n  };\r\n\r\n  def.deleteItem = function(item)    {var self = this;\r\n    var childDeletions = self.__relationships.map(function(relationship) {\r\n      return relationship.respondToItemDeleted(item, self);\r\n    });\r\n    return $q.all(childDeletions).then(function() {\r\n      return self.__db.remove(item).then(function (result) {\r\n        delete self.__items[item._id];\r\n        util.removeFromArray(self.__itemsAsArray, item);\r\n      });\r\n    });\r\n  };\r\n\r\n  return SnjsCollection;\r\n});\r\n","    \r\n/*\r\n  Left and right may be absent from register.\r\n  Both registers will always be equal and complimentary:\r\n  {\r\n     p1: {items: [t6]}\r\n     p2: {items: [t4, t6]}\r\n  }\r\n  {\r\n     t6: {items: [p1, p2]},\r\n     t4: {items: [p2]},\r\n  }\r\n*/\r\n    \r\nangular.module('SneakerJS').factory('SnjsManyToManyRelationship', function($q, SnjsBaseContainer, SnjsUtil) {\r\n  \r\n  var util = SnjsUtil;\r\n  var SnjsManyToManyRelationship = function(db, leftCollection, rightCollection, options)    {var self = this;\r\n    var options = options || {};\r\n    self.__rightCollection = rightCollection;\r\n    self.__leftCollection = leftCollection;\r\n    var defaultDbDocumentTypeName = ('lnk_' + leftCollection.itemName + '_' + rightCollection.itemName).toLowerCase();\r\n    self.__functionNameEnd = '';\r\n    if (options.qualifier) {\r\n      self.__functionNameEnd = 'As' + util.capitalizeFirstLetter(options.qualifier);\r\n      defaultDbDocumentTypeName += '_as_' + options.qualifier.toLowerCase();\r\n    }\r\n    self.dbDocumentType = options.dbDocumentType || defaultDbDocumentTypeName;\r\n    self.name = self.dbDocumentType;\r\n    self.__db = db;\r\n    self.__leftCollection = leftCollection;\r\n    self.__rightCollection = rightCollection;\r\n    self.__leftRights = {};\r\n    self.__rightLefts = {};\r\n    self.__docsForReuse = [];\r\n    rightCollection.registerManyToManyRelationship(self);\r\n    leftCollection.registerManyToManyRelationship(self);\r\n  };\r\n  util.inheritPrototype(SnjsManyToManyRelationship, SnjsBaseContainer);\r\n  var def = SnjsManyToManyRelationship.prototype;\r\n  \r\n  def.getAccessFunctionDefinitions = function()  {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        leftName = capitalize(self.__leftCollection.itemName),\r\n        leftPlural = capitalize(self.__leftCollection.plural),\r\n        rightName = capitalize(self.__rightCollection.itemName),\r\n        rightPlural = capitalize(self.__rightCollection.plural),\r\n        end = self.__functionNameEnd,\r\n        getLeftRightsFnName = 'get' + leftName + rightPlural + end,\r\n        getRightLeftsFnName = 'get' + rightName + leftPlural + end,\r\n        addLeftRightFnName = 'add' + leftName + rightName + end,\r\n        removeLeftRightFnName = 'remove' + leftName + rightName + end,\r\n        isLeftLinkedToRightFnName = 'is' + leftName + 'LinkedTo' + rightName + end;\r\n    return [\r\n      buildFunc(getLeftRightsFnName, self.getLeftRights, false),\r\n      buildFunc(getRightLeftsFnName, self.getRightLefts, false),\r\n      buildFunc(addLeftRightFnName, self.addLink, true),\r\n      buildFunc(removeLeftRightFnName, self.removeLink, true),\r\n      buildFunc(isLeftLinkedToRightFnName, self.isLinked, false)\r\n    ];\r\n  };\r\n  \r\n  def.loadDocumentFromDb = function(doc)  {var self = this;\r\n    if (doc.right && \r\n        doc.left && \r\n        self.__updateOneRegisterWithDocument(self.__leftRights, doc.left, doc.right, doc)\r\n        ){\r\n      self.__updateOneRegisterWithDocument(self.__rightLefts, doc.right, doc.left, doc);\r\n      return true;\r\n    } else {\r\n      self.__sendDocumentToReusePile(doc);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  def.clear = function() {var self = this;\r\n    self.__leftRights = {};\r\n    self.__rightLefts = {};\r\n    self.__docsForReuse = [];\r\n  };\r\n  \r\n  def.__updateOneRegisterWithDocument = function(register, key, id, doc)  {var self = this;\r\n    var entry = register[key];\r\n    if (entry === undefined) {\r\n      var docs = {};\r\n      docs[id] = doc;\r\n      register[key] = {docs: docs, items: []};\r\n    } else {\r\n      if (entry.docs[id]) {\r\n        return false;\r\n      }\r\n      entry.docs[id] = doc;\r\n    }\r\n    return true;\r\n  };\r\n  \r\n  def.getLeftRights = function (leftItem)  {var self = this;\r\n    return self.__getInitialisedEntry(self.__leftRights, leftItem._id).items;\r\n  };\r\n  \r\n  def.getRightLefts = function (rightItem)  {var self = this;\r\n    return self.__getInitialisedEntry(self.__rightLefts, rightItem._id).items;\r\n  };\r\n  \r\n  //TODO: assert they are of correct type?\r\n  def.addLink = function (leftItem, rightItem)    {var self = this;\r\n    if (self.isLinked(leftItem, rightItem)) {\r\n      return $q.when();\r\n    } else {\r\n      return self.__writeLinkToDatabase(leftItem, rightItem).then(function(){\r\n        //will have gone through loadDocumentFromDb succesfully.\r\n        var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id),\r\n            rightEntry = self.__getInitialisedEntry(self.__rightLefts, rightItem._id);\r\n        util.addUnique(leftEntry.items, rightItem);\r\n        util.addUnique(rightEntry.items, leftItem);\r\n      });\r\n    };\r\n  };\r\n  \r\n  def.removeLink = function (leftItem, rightItem)    {var self = this;\r\n    var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id);\r\n    var rightEntry = self.__getInitialisedEntry(self.__rightLefts, rightItem._id);\r\n    var doc1 = self.__removeFromEntry(leftEntry, rightItem);\r\n    var doc2 = self.__removeFromEntry(rightEntry, leftItem);\r\n    if (doc1 !== doc2) {\r\n      throw \"This is strange...\"\r\n    }\r\n    return self.__db.remove(doc1);\r\n  };\r\n  \r\n  def.__removeFromEntry = function(entry, item)  {var self = this;\r\n    var doc = entry.docs[item._id];\r\n    util.removeFromArray(entry.items, item);\r\n    delete entry.docs[item._id];\r\n    return doc;\r\n  }\r\n   \r\n  def.isLinked = function (leftItem, rightItem)  {var self = this;\r\n    var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id);\r\n    return util.arrayContains(leftEntry.items, rightItem);\r\n  };\r\n  \r\n  def.respondToItemDeleted = function (item, collection)     {var self = this;\r\n    var opposites, itemIsFromRight;\r\n    if (collection === self.__rightCollection) {\r\n      itemIsFromRight = true;\r\n      opposites = self.getRightLefts(item);\r\n    } else if (collection === self.__leftCollection) {\r\n      itemIsFromRight = false;\r\n      opposites = self.getLeftRights(item);\r\n    }\r\n    opposites = opposites.slice();\r\n    var operations = [];\r\n    angular.forEach(opposites, function(oppositeItem) {\r\n      if (itemIsFromRight) {\r\n        var leftItem = oppositeItem;\r\n        var rightItem = item;\r\n      } else {\r\n        var leftItem = item;\r\n        var rightItem = oppositeItem;\r\n      }\r\n      operations.push(self.removeLink(leftItem, rightItem));\r\n    });\r\n    return $q.all(operations);\r\n  };\r\n  \r\n  /*\r\n  Should only be called if sure that items are not linked. Will reuse a document if one is available.\r\n  */\r\n  //TODO: tidy this mess not to have var deferred = $q.defer()\r\n  def.__writeLinkToDatabase = function(leftItem, rightItem)  {var self = this;\r\n    var deferred = $q.defer(),\r\n        doc = self.__docsForReuse.pop();\r\n    function finish(succesfullyLoaded) {\r\n      if (succesfullyLoaded) {\r\n        deferred.resolve();\r\n      } else {\r\n        throw 'SnjsManyToManyRelationship.__writeLinkToDatabase failed to load document. This should not have happened.'\r\n      }\r\n    }\r\n    if (doc) {\r\n      doc.left = leftItem._id;\r\n      doc.right = rightItem._id;\r\n      self.__db.put(doc).then(function (result) {\r\n        doc._rev = result.rev;\r\n        finish(self.loadDocumentFromDb(doc));        \r\n      });\r\n    } else {\r\n      doc = {left: leftItem._id, right:rightItem._id, type:self.dbDocumentType};\r\n      self.__postAndLoad(doc).then(function (result) {\r\n        finish(result);\r\n      });\r\n    }\r\n    return deferred.promise;\r\n  };\r\n  \r\n  def.__sendDocumentToReusePile = function(doc)  {var self = this;\r\n    self.__docsForReuse.push(doc);\r\n  };\r\n  \r\n  def.__getInitialisedEntry = function (register, id)  {var self = this;\r\n    var entry = register[id];\r\n    if (entry === undefined) {\r\n      entry = {docs: {}, items: []};\r\n      register[id] = entry;\r\n    } else {\r\n      if (entry.items.length !== Object.keys(entry.docs).length) {\r\n        var collection = (register === self.__leftRights)? self.__rightCollection : self.__leftCollection; \r\n        entry.items.length = 0;\r\n        angular.forEach(entry.docs, function(doc, id) {\r\n          //TODO: what if item doesn't exist?\r\n          var item = collection.getItem(id);\r\n          if (item) {\r\n            entry.items.push(item);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return entry;\r\n  };\r\n  \r\n  return SnjsManyToManyRelationship;\r\n});","\r\nangular.module('SneakerJS').factory('SneakerModel', function($q, SnjsCollection, \r\n    SnjsSingleton, SnjsParentChildRelationship, SnjsManyToManyRelationship){\r\n  \r\n  var SneakerModel = function(dbWrapper, initialLoadQuery) {var self = this;\r\n    self.__db = dbWrapper;\r\n    self.__loadQuery = initialLoadQuery || function() {\r\n      return dbWrapper.allDocs({\r\n        include_docs: true,\r\n        attachments: false\r\n      });\r\n    };\r\n    self.__containers = {};\r\n    self.__dbDocumentTypeLoaders = {};\r\n    self.__lastPromiseInQueue = $q.when();\r\n    self.__relationshipDefinitionFunctions = {};\r\n    self.__dataReady = undefined;\r\n    self.changeCount = 0;\r\n\r\n    self.dataReady = function() {\r\n      if (self.__dataReady === undefined) {\r\n        self.__dataReady = self.__initializeModel();\r\n      }\r\n      return self.__dataReady;\r\n    };\r\n\r\n    self.reload = function() {\r\n      self.__dataReady = undefined;\r\n      angular.forEach(self.__containers, function(container) {\r\n        container.clear();\r\n      });\r\n      return self.dataReady();\r\n    };\r\n\r\n    self.printInfo = function() {\r\n      angular.forEach(self.__containers, function(container) {\r\n        angular.forEach(container.getAccessFunctionDefinitions(), function(accessFunc) {\r\n          console.log('model.' + accessFunc.ModelFunctionName);\r\n        });\r\n      });\r\n    };\r\n\r\n    /************* MODEL DEFINITION FUNCTIONS *************/\r\n\r\n    self.collection = function(singleItemName, fieldNames, options) {\r\n      var container = new SnjsCollection(self.__db, singleItemName, fieldNames, options);\r\n      self.__registerContainer(container);\r\n      return container;\r\n    };\r\n\r\n    self.singleton = function(name, data) {\r\n      var container = new SnjsSingleton(self.__db, name, data);\r\n      self.__registerContainer(container);\r\n      return container;\r\n    };\r\n\r\n    self.join = function(firstCollection, secondCollection, options) {\r\n      var options = options || {};\r\n      var container;\r\n      var relationshipType = options.type || 'parentChild';\r\n      angular.forEach([firstCollection, secondCollection], function(name) {\r\n        if (self.__containers[name] === undefined) {\r\n          throw 'Failed to create join, container not found: \"' + name + '\" ';\r\n        }\r\n      });\r\n      if (relationshipType === 'parentChild') {\r\n        var parentCollection = self.__containers[firstCollection];\r\n        var childCollection = self.__containers[secondCollection];\r\n        container = new SnjsParentChildRelationship(self.__db, parentCollection, childCollection, options);\r\n      } else if (relationshipType.toLowerCase() === 'many-to-many') {\r\n        var leftCollection = self.__containers[firstCollection];\r\n        var rightCollection = self.__containers[secondCollection];\r\n        container = new SnjsManyToManyRelationship(self.__db, leftCollection, rightCollection, options);\r\n      } else {\r\n        throw '\"' + relationshipType + '\" is not a valid relationship type';\r\n      }\r\n      return self.__registerContainer(container);\r\n    };\r\n    \r\n    self.parentChild = function(parentCollectionName, childCollectionName, options) {\r\n      self.__ensureCollectionsExist([parentCollectionName, childCollectionName]);\r\n      var parentCollection = self.__containers[parentCollectionName];\r\n      var childCollection = self.__containers[childCollectionName];\r\n      var container = new SnjsParentChildRelationship(self.__db, parentCollection, childCollection, options);\r\n      return self.__registerContainer(container);\r\n    };\r\n    \r\n    self.manyToMany = function(leftCollectionName, rightCollectionName, options) {\r\n      self.__ensureCollectionsExist([leftCollectionName, rightCollectionName]);\r\n      var leftCollection = self.__containers[leftCollectionName];\r\n      var rightCollection = self.__containers[rightCollectionName];\r\n      container = new SnjsManyToManyRelationship(self.__db, leftCollection, rightCollection, options);\r\n      return self.__registerContainer(container);\r\n    };\r\n\r\n    self.__ensureCollectionsExist = function(collectionNames) {\r\n      angular.forEach(collectionNames, function(name) {\r\n        if (self.__containers[name] === undefined) {\r\n          throw 'Failed to create relationship, container not found: \"' + name + '\" ';\r\n        }\r\n      });\r\n    };\r\n    \r\n    self.__registerContainer = function(container) {\r\n      var name = container.name;\r\n      if (self.__containers[name] !== undefined) {\r\n        throw 'Trying to create containers with name: ' + name + ' on model but it already exists.';\r\n      }\r\n      self.__containers[name] = container;\r\n      self.__registerDocumentTypeLoader(container);\r\n      self.__createAccessFunctions(container);\r\n      return container;\r\n    };\r\n\r\n    /************* COLLECTION ACCESS FUNCTIONALITY ************\r\n\r\n      __createAccessFunctions() creates methods like:\r\n\r\n        model.newTask({})\r\n        model.getProjectTasks(project)\r\n\r\n      Query functions (getX, findX) return directly. Data changing functions (all other prefixed) return promises.\r\n\r\n      Query data may be dirty while a promise is waiting to complete, so you need to do this:\r\n\r\n      model.newTask({}).then(function(){\r\n        angular.copy($scope.tasks, model.getProjectTasks($scope.project));\r\n      });\r\n\r\n      Data changing functions are queued internally, so you can do this.\r\n      model.newTask({});\r\n      model.newTask({});\r\n      model.newTask({}).then(function(){\r\n        angular.copy($scope.tasks, model.getProjectTasks($scope.project));\r\n      });\r\n\r\n    */\r\n    self.saveItem = function(item) {\r\n      self.changeCount ++;\r\n      return $q.when(self.__containers[item.type].saveItem(item));\r\n    };\r\n\r\n    self.deleteItem = function(item) {\r\n      self.changeCount ++;\r\n      return $q.when(self.__containers[item.type].deleteItem(item));\r\n    };\r\n\r\n    self.__createAccessFunctions = function(container) {\r\n      angular.forEach(container.getAccessFunctionDefinitions(), function(accessFunc) {\r\n        var func, fnName = accessFunc.ModelFunctionName;\r\n        if (accessFunc.queuedPromise) {\r\n          func = self.__getQueuedFunction(container, accessFunc.containerFunction);\r\n        } else {\r\n          func = self.__getNonQueuedFunction(container, accessFunc.containerFunction);\r\n        }\r\n        if (self[fnName] !== undefined) {\r\n          throw 'Container ' + container.name + ' trying to create function ' +\r\n                  fnName + ' on model but it already exists.';\r\n        }\r\n        self[fnName] = func;\r\n      });\r\n    };\r\n\r\n    self.__getNonQueuedFunction = function(container, containerFunction) {\r\n      return function() {\r\n        return containerFunction.apply(container, arguments);\r\n      }\r\n    };\r\n\r\n    self.__getQueuedFunction = function(container, containerFunction) {\r\n      /*This returns the function which actually gets called on e.g. mode.newPerson()\r\n      Keep the the $q.defer() so it wraps it in a $q promise.\r\n      */\r\n      return function() {\r\n        var originalArgs = arguments;\r\n        var deferred = $q.defer();\r\n        self.__lastPromiseInQueue.then( function() {\r\n          self.__lastPromiseInQueue = containerFunction.apply(container, originalArgs);\r\n          self.__lastPromiseInQueue.then(function(result) {\r\n            self.changeCount ++;\r\n            deferred.resolve(result);\r\n          });\r\n        });\r\n        return deferred.promise;\r\n      }\r\n    };\r\n\r\n    /************* INITIAL LOADING FUNCTIONALITY *************/\r\n\r\n    self.__registerDocumentTypeLoader = function(container) {\r\n      /* If container has field 'dbDocumentType' then every document whose 'type' field matches that\r\n      will be passed to the container's loadDocumentFromDb() function at loading.\r\n      */\r\n      var dbDocumentType = container.dbDocumentType;\r\n      if (dbDocumentType !== undefined) {\r\n        if (dbDocumentType in self.__dbDocumentTypeLoaders) {\r\n          var claimedBy = self.__dbDocumentTypeLoaders[dbDocumentType];\r\n          throw 'More than one container attempting to register database document type: \"' + dbDocumentType + '\".';\r\n        } else {\r\n          self.__dbDocumentTypeLoaders[dbDocumentType] = container;\r\n        }\r\n      }\r\n    };\r\n\r\n    self.__initializeModel = function() {\r\n      return self.__loadQuery().then(function (result) {\r\n        angular.forEach(result.rows, function(row){\r\n          self.__addDocumentToCollection(row.doc);\r\n        });\r\n        self.__postInitialLoading();\r\n        return result.rows.length;\r\n      }).catch(function (err) {\r\n        console.log(err);\r\n      });\r\n    };\r\n\r\n    self.__addDocumentToCollection = function(document) {\r\n      var dbDocumentType = document.type;\r\n      if (dbDocumentType) {\r\n        var container = self.__dbDocumentTypeLoaders[dbDocumentType];\r\n        if (container) {\r\n          container.loadDocumentFromDb(document, dbDocumentType);\r\n        } else {\r\n          console.log(document);\r\n          console.log('Could not load document \\\"' + document._id + '\\\" as type was not recognised (' + dbDocumentType + ')');\r\n        }\r\n      } else {\r\n        console.log('Could not load document \\\"' + document._id + '\\\" as it has no \\\"type\\\" field.');\r\n      }\r\n    };\r\n\r\n    self.__postInitialLoading = function() {\r\n      angular.forEach(self.__containers, function(container) {\r\n        container.postInitialLoading();\r\n      });\r\n    };\r\n  \r\n  };\r\n  return SneakerModel;\r\n  \r\n});","\r\nangular.module('SneakerJS').factory('SnjsParentChildRelationship', function($q, SnjsBaseContainer, SnjsUtil) {\r\n\r\n  var util = SnjsUtil;\r\n  var SnjsParentChildRelationship = function(db, parentCollection, childCollection, options)    {var self = this;\r\n    var options = options || {};\r\n    self.__db = db;\r\n    self.__parentCollection = parentCollection;\r\n    self.__childCollection = childCollection;\r\n    self.__childAlias = options.childAlias || childCollection.plural;\r\n    self.__parentAlias = options.parentAlias || parentCollection.itemName;\r\n    self.__cascadeDelete = (options.cascadeDelete === undefined)? true : options.cascadeDelete;\r\n    self.__itemParent = {};\r\n    self.__itemChildren = {};\r\n    self.name = 'relationship_' + childCollection.itemName + '_as_' + self.__childAlias + '_' +\r\n          parentCollection.itemName + '_as_' + self.__parentAlias;\r\n    self.foreignKey = 'fk__' + self.__parentAlias;\r\n    parentCollection.registerChildRelationship(self);\r\n    childCollection.registerParentRelationship(self, self.foreignKey, self.__parentAlias);\r\n  };\r\n  util.inheritPrototype(SnjsParentChildRelationship, SnjsBaseContainer);\r\n  var def = SnjsParentChildRelationship.prototype;\r\n\r\n  def.getAccessFunctionDefinitions = function()  {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        childName = capitalize(self.__childCollection.itemName),\r\n        childAlias = capitalize(self.__childAlias),\r\n        parentName = capitalize(self.__parentCollection.itemName),\r\n        parentAlias = capitalize(self.__parentAlias);\r\n    return [\r\n      buildFunc('get' + childName + parentAlias, self.getParent, false),\r\n      buildFunc('get' + parentName + childAlias, self.getChildren, false),\r\n      buildFunc('set' + childName + parentAlias, self.setChildParent, true),\r\n    ];\r\n  };\r\n\r\n  def.postInitialLoading = function()  {var self = this;\r\n    var key = self.foreignKey;\r\n    angular.forEach(self.__parentCollection.__items, function(parentItem) {\r\n      self.__itemChildren[parentItem._id] = [];\r\n    });\r\n    angular.forEach(self.__childCollection.__items, function(childItem) {\r\n      var parentId = childItem[key];\r\n      if (parentId) {\r\n        var parentItem = self.__parentCollection.getItem(parentId);\r\n        self.linkNewlyLoadedChildToParent(childItem, parentItem, parentId);\r\n      }\r\n    });\r\n  };\r\n  \r\n  def.clear = function() {var self = this;\r\n    self.__itemParent = {};\r\n    self.__itemChildren = {};\r\n  };\r\n  \r\n  def.linkNewlyLoadedChildToParent = function(childItem, parentItem, parentId)    {var self = this;\r\n    var parentId = parentId || parentItem._id;\r\n    self.__itemParent[childItem._id] = parentItem;\r\n    var parentChildren = self.__itemChildren[parentId];\r\n    if (parentChildren === undefined) {\r\n      self.__itemChildren[parentId] = [childItem];\r\n    } else {\r\n      parentChildren.push(childItem);\r\n    }\r\n  };\r\n\r\n  def.getParent = function (childItem)    {var self = this;\r\n    return self.__itemParent[childItem._id] || null;\r\n  };\r\n\r\n  def.getChildren = function (parentItem)    {var self = this;\r\n    return self.__itemChildren[parentItem._id] || [];\r\n  };\r\n\r\n  def.setChildParent = function (childItem, parentItem)    {var self = this;\r\n    //TODO: assert they are of correct type?\r\n    var oldParent = self.__itemParent[childItem._id];\r\n    var parentItemId = parentItem? parentItem._id : null;\r\n    if (oldParent) {\r\n      util.removeFromArray(self.__itemChildren[oldParent._id], childItem);\r\n    }\r\n    if (parentItem) {\r\n      if (self.__itemChildren[parentItem._id] === undefined) {\r\n        self.__itemChildren[parentItem._id] = [childItem];\r\n      } else {\r\n        self.__itemChildren[parentItem._id].push(childItem);\r\n      }\r\n    }\r\n    self.__itemParent[childItem._id] = parentItem;\r\n    childItem[self.foreignKey] = parentItemId;\r\n    return self.__childCollection.saveItem(childItem);\r\n  };\r\n\r\n  def.respondToItemDeleted = function (item, collection)     {var self = this;\r\n    if (collection === self.__parentCollection) {\r\n      return self.__respondToParentDeleted(item);\r\n    } else if (collection === self.__childCollection) {\r\n      return self.__respondToChildDeleted(item);\r\n    }\r\n  };\r\n\r\n  def.__respondToParentDeleted = function (parentItem)     {var self = this;\r\n    var action = (self.__cascadeDelete)?\r\n        function(childItem) {return self.__childCollection.deleteItem(childItem)} :\r\n        function(childItem) {return self.setChildParent(childItem, null)};\r\n    var children = self.getChildren(parentItem).slice(); //slice() is imortant!\r\n    return $q.all(children.map(action)).then(function() {\r\n      delete self.__itemChildren[parentItem._id];\r\n      return $q.when(true);\r\n    }, util.promiseFailed);\r\n  };\r\n\r\n  def.__respondToChildDeleted = function (childItem)     {var self = this;\r\n    var parentItem = self.getParent(childItem);\r\n    if (parentItem) {\r\n      util.removeFromArray(self.__itemChildren[parentItem._id], childItem);\r\n    }\r\n    delete self.__itemParent[childItem._id];\r\n    return $q.when(true);\r\n  };\r\n\r\n  return SnjsParentChildRelationship;\r\n});\r\n","\r\nangular.module('SneakerJS').factory('SnjsSingleton', function(SnjsUtil, SnjsBaseContainer) {\r\n  \r\n  var util = SnjsUtil;\r\n  var SnjsSingleton = function(db, name)    {var self = this;\r\n    self.name = name;\r\n    self.dbDocumentType = 'singleton__' + name;\r\n    self.__db = db;\r\n    self.__doc = null;\r\n  };\r\n  util.inheritPrototype(SnjsSingleton, SnjsBaseContainer);\r\n  var def = SnjsSingleton.prototype;\r\n  \r\n  def.loadDocumentFromDb = function(doc)    {var self = this;\r\n    if (self.__doc !== null) {\r\n      throw 'found singleton of type ' + self.name + ' more than once in db';\r\n    }\r\n    if (doc._id !== self.dbDocumentType) {\r\n      throw 'Expected singleton type ' + self.name + ' to have _id: ' + self.dbDocumentType;\r\n    }\r\n    self.__doc = doc;\r\n    return self.__doc.data;\r\n  };\r\n  \r\n  def.clear = function() {var self = this;\r\n    self.__doc = null;\r\n  };\r\n\r\n  def.getAccessFunctionDefinitions = function()    {var self = this;\r\n    return [\r\n      util.createAccessFunctionDefinition('get' + util.capitalizeFirstLetter(self.name), self.getData, false),\r\n      util.createAccessFunctionDefinition('set' + util.capitalizeFirstLetter(self.name), self.setData, false)\r\n    ]\r\n  };\r\n  \r\n  def.getData = function() {var self = this;\r\n    return (self.__doc)? self.__doc.data : {};\r\n  };\r\n  \r\n  def.setData = function(data) {var self = this;\r\n    if (!self.__doc){\r\n      self.__doc = {\r\n        type: self.dbDocumentType,\r\n        _id: self.dbDocumentType,\r\n        data: {}\r\n      }\r\n    }\r\n    angular.copy(data, self.__doc.data);\r\n    return self.__db.put(self.__doc).then(function (result) {\r\n      self.__doc._rev = result.rev;\r\n      return result.rev;\r\n    });\r\n  };\r\n  \r\n  return SnjsSingleton; \r\n});","\r\nangular.module('SneakerJS').service('SnjsUtil', function($q) {\r\n  var self = this;\r\n\r\n  self.capitalizeFirstLetter = function(str) {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  };\r\n\r\n  self.createAccessFunctionDefinition = function(name, fn, queuedPromise) {\r\n    return {\r\n      ModelFunctionName: name,\r\n      containerFunction: fn,\r\n      queuedPromise: queuedPromise\r\n    }\r\n  };\r\n\r\n  self.arrayContains = function(myArray, item) {\r\n    for (var i = 0, len = myArray.length; i < len; i++) {\r\n      if (item === myArray[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  self.addUnique = function(myArray, item) {\r\n    if(!self.arrayContains(myArray, item)){\r\n      myArray.push(item);\r\n    }\r\n  }\r\n\r\n  self.addAsItem = function(object, key, item) {\r\n    //Where object[key] = [items...]\r\n    if (object[key] === undefined) {\r\n      object[key] = [item];\r\n    } else {\r\n      object[key].push(item);\r\n    }\r\n  };\r\n\r\n  self.removeFromArray = function(myArray, item) {\r\n    var index = myArray.indexOf(item);\r\n    if (index > -1) {\r\n      myArray.splice(index, 1);\r\n    }\r\n  };\r\n\r\n  self.filterIndex = function(index, test) {\r\n    //accepts an object like array.\r\n    var filteredItems = [];\r\n    angular.forEach(index, function(item) {\r\n      if (test(item)) {\r\n        filteredItems.push(item);\r\n      }\r\n    });\r\n    return filteredItems;\r\n  };\r\n\r\n  self.inheritPrototype = function(Child, Parent) {\r\n    var childProto = Child.prototype;\r\n    var parentProto = Parent.prototype;\r\n    for (var prop in parentProto) {\r\n      if (typeof parentProto[prop] == 'function') {\r\n        childProto[prop] = parentProto[prop];\r\n      }\r\n    }\r\n  };\r\n\r\n  self.copyFields = function(source, target, fields) {\r\n    angular.forEach(fields, function(field) {\r\n      target[field] = source[field];\r\n    });\r\n  };\r\n\r\n  self.promiseFailed = function(error) {\r\n    console.log('Promise failed!');\r\n    console.log(error);\r\n  }\r\n\r\n});\r\n"],"sourceRoot":"/source/"}