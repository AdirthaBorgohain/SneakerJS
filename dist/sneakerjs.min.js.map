{"version":3,"sources":["model.js","BaseContainer.js","Collection.js","ManyToManyRelationship.js","ParentChildRelationship.js","Singleton.js","util.js"],"names":["angular","module","service","$q","$rootScope","Collection","Singleton","ParentChildRelationship","ManyToManyRelationship","__registerContainer","container","name","undefined","__containers","__registerDocumentTypeLoader","__createAccessFunctions","forEach","getAccessFunctionDefinitions","accessFunc","func","fnName","ModelFunctionName","queuedPromise","__getQueuedFunction","containerFunction","__getNonQueuedFunction","self","apply","arguments","originalArgs","deferred","defer","__lastPromiseInQueue","then","result","changeCount","resolve","promise","dbDocumentType","__dbDocumentTypeLoaders","__initializeModel","__loadQuery","rows","row","__addDocumentToCollection","doc","__postInitialLoading","length","err","console","log","document","type","loadDocumentFromDb","_id","postInitialLoading","__db","this","when","$watch","initialize","db","query","allDocs","include_docs","attachments","__dataReady","dataReady","reload","clear","printInfo","collection","singleItemName","fieldNames","options","singleton","data","join","firstCollection","secondCollection","relationshipType","parentCollection","childCollection","toLowerCase","leftCollection","rightCollection","saveItem","item","deleteItem","factory","BaseContainer","def","prototype","__postAndLoad","defered","post","ok","get","id","docFromDb","util","itemName","plural","__proto","proto","__items","__itemsAsArray","__parentRelationships","__relationships","__fieldNames","slice","__fullFieldNames","push","inheritPrototype","registerChildRelationship","relationship","registerParentRelationship","foreignKey","alias","registerManyToManyRelationship","newItem","copyFields","capitalize","capitalizeFirstLetter","buildFunc","createAccessFunctionDefinition","single","getItem","findItems","allItems","test","prop","filterIndex","relationshipsToLink","parentItem","linkNewlyLoadedChildToParent","put","_rev","rev","childDeletions","map","respondToItemDeleted","all","remove","removeFromArray","promiseFailed","__rightCollection","__leftCollection","defaultDbDocumentTypeName","__functionNameEnd","qualifier","__leftRights","__rightLefts","__docsForReuse","leftName","leftPlural","rightName","rightPlural","end","getLeftRightsFnName","getRightLeftsFnName","addLeftRightFnName","removeLeftRightFnName","isLeftLinkedToRightFnName","getLeftRights","getRightLefts","addLink","removeLink","isLinked","right","left","__updateOneRegisterWithDocument","__sendDocumentToReusePile","register","key","entry","docs","items","leftItem","__getInitialisedEntry","rightItem","__writeLinkToDatabase","leftEntry","rightEntry","addUnique","doc1","__removeFromEntry","doc2","arrayContains","opposites","itemIsFromRight","operations","oppositeItem","finish","succesfullyLoaded","pop","Object","keys","__parentCollection","__childCollection","__childAlias","childAlias","__parentAlias","parentAlias","__cascadeDelete","cascadeDelete","__itemParent","__itemChildren","childName","parentName","getParent","getChildren","setChildParent","childItem","parentId","parentChildren","oldParent","parentItemId","__respondToParentDeleted","__respondToChildDeleted","action","children","__doc","getData","setData","copy","str","charAt","toUpperCase","fn","myArray","i","len","addAsItem","object","index","indexOf","splice","filteredItems","Child","Parent","childProto","parentProto","source","target","fields","field","error"],"mappings":"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","file":"sneakerjs.min.js","sourcesContent":["angular.module('SneakerJS', []);\r\n\r\nangular.module('SneakerJS').service('model', function($q, $rootScope,\r\n    Collection, Singleton, ParentChildRelationship, ManyToManyRelationship) {\r\n  var __db, __loadQuery;\r\n  var self = this;\r\n  var __containers = {};\r\n  var __dbDocumentTypeLoaders = {};\r\n  var __lastPromiseInQueue = $q.when();\r\n  var __relationshipDefinitionFunctions = {};\r\n  self.changeCount = 0;\r\n  $rootScope.$watch(self.changeCount, function() {\r\n\r\n  });\r\n\r\n  self.initialize = function(db, query) {\r\n    __db = db;\r\n    __loadQuery = query || function() {\r\n      return __db.allDocs({\r\n        include_docs: true,\r\n        attachments: false\r\n      });\r\n    }\r\n  };\r\n\r\n  var __dataReady;\r\n  self.dataReady = function (){\r\n    if (__dataReady === undefined) {\r\n      __dataReady = __initializeModel();\r\n    }\r\n    return __dataReady;\r\n  };\r\n\r\n  self.reload = function (){\r\n    __dataReady = undefined;\r\n    angular.forEach(__containers, function(container) {\r\n      container.clear();\r\n    });\r\n    return self.dataReady();\r\n  };\r\n\r\n  self.printInfo = function (){\r\n    angular.forEach(__containers, function(container) {\r\n      angular.forEach(container.getAccessFunctionDefinitions(), function(accessFunc) {\r\n        console.log('model.' + accessFunc.ModelFunctionName);\r\n      });\r\n    });\r\n  };\r\n\r\n  /************* MODEL DEFINITION FUNCTIONS *************/\r\n\r\n  self.collection = function(singleItemName, fieldNames, options){\r\n    var container = new Collection(__db, singleItemName, fieldNames, options);\r\n    __registerContainer(container);\r\n    return container;\r\n  };\r\n\r\n  self.singleton = function(name, data){\r\n    var container = new Singleton(__db, name, data);\r\n    __registerContainer(container);\r\n    return container;\r\n  };\r\n\r\n  self.join = function(firstCollection, secondCollection, options){\r\n    var options = options || {};\r\n    var container;\r\n    var relationshipType = options.type || 'parentChild';\r\n    angular.forEach([firstCollection, secondCollection], function(name) {\r\n      if (__containers[name] === undefined) {\r\n        throw 'Failed to create join, container not found: \"' + name + '\" ';\r\n      }\r\n    });\r\n    if (relationshipType === 'parentChild') {\r\n      var parentCollection = __containers[firstCollection];\r\n      var childCollection = __containers[secondCollection];\r\n      container = new ParentChildRelationship(__db, parentCollection, childCollection, options);\r\n    } else if (relationshipType.toLowerCase() === 'many-to-many') {\r\n      var leftCollection = __containers[firstCollection];\r\n      var rightCollection = __containers[secondCollection];\r\n      container = new ManyToManyRelationship(__db, leftCollection, rightCollection, options);\r\n    } else {\r\n      throw '\"' + relationshipType + '\" is not a valid relationship type';\r\n    }\r\n    __registerContainer(container);\r\n    return container;\r\n  };\r\n\r\n  function __registerContainer(container) {\r\n    var name = container.name;\r\n    if (__containers[name] !== undefined) {\r\n      throw 'Trying to create containers with name: ' + name + ' on model but it already exists.';\r\n    }\r\n    __containers[name] = container;\r\n    __registerDocumentTypeLoader(container);\r\n    __createAccessFunctions(container);\r\n  };\r\n\r\n  /************* COLLECTION ACCESS FUNCTIONALITY ************\r\n\r\n    __createAccessFunctions() creates methods like:\r\n\r\n      model.newTask({})\r\n      model.getProjectTasks(project)\r\n\r\n    Query functions (getX, findX) return directly. Data changing functions (all other prefixed) return promises.\r\n\r\n    Query data may be dirty while a promise is waiting to complete, so you need to do this:\r\n\r\n    model.newTask({}).then(function(){\r\n      angular.copy($scope.tasks, model.getProjectTasks($scope.project));\r\n    });\r\n\r\n    Data changing functions are queued internally, so you can do this.\r\n    model.newTask({});\r\n    model.newTask({});\r\n    model.newTask({}).then(function(){\r\n      angular.copy($scope.tasks, model.getProjectTasks($scope.project));\r\n    });\r\n\r\n  */\r\n  self.saveItem = function(item) {\r\n    self.changeCount ++;\r\n    return __containers[item.type].saveItem(item);\r\n  };\r\n\r\n  self.deleteItem = function(item) {\r\n    self.changeCount ++;\r\n    return __containers[item.type].deleteItem(item);\r\n  };\r\n\r\n  function __createAccessFunctions(container){\r\n    angular.forEach(container.getAccessFunctionDefinitions(), function(accessFunc) {\r\n      var func, fnName = accessFunc.ModelFunctionName;\r\n      if (accessFunc.queuedPromise) {\r\n        func = __getQueuedFunction(container, accessFunc.containerFunction);\r\n      } else {\r\n        func = __getNonQueuedFunction(container, accessFunc.containerFunction);\r\n      }\r\n      if (self[fnName] !== undefined) {\r\n        throw 'Container ' + container.name + ' trying to create function ' + fnName + ' on model but it already exists.';\r\n      }\r\n      self[fnName] = func;\r\n    });\r\n  };\r\n\r\n  function __getNonQueuedFunction(container, containerFunction){\r\n    return function() {\r\n      return containerFunction.apply(container, arguments);\r\n    }\r\n  };\r\n\r\n  function safeApply(fn) {\r\n    ($rootScope.$$phase) ? fn() : $rootScope.$apply(fn);\r\n  }\r\n\r\n  function __getQueuedFunction(container, containerFunction){\r\n    return function() {\r\n      var originalArgs = arguments;\r\n      var deferred = $q.defer();\r\n      __lastPromiseInQueue.then( function() {\r\n        __lastPromiseInQueue = containerFunction.apply(container, originalArgs);\r\n        __lastPromiseInQueue.then(function(result) {\r\n          self.changeCount ++;\r\n          deferred.resolve(result);\r\n        });\r\n      });\r\n      return deferred.promise;\r\n    }\r\n  };\r\n\r\n  /************* INITIAL LOADING FUNCTIONALITY *************/\r\n\r\n  function __registerDocumentTypeLoader(container) {\r\n    /* If container has field 'dbDocumentType' then every document whose 'type' field matches that\r\n    will be passed to the container's loadDocumentFromDb() function at loading.\r\n    */\r\n    var dbDocumentType = container.dbDocumentType;\r\n    if (dbDocumentType !== undefined) {\r\n      if (dbDocumentType in __dbDocumentTypeLoaders) {\r\n        var claimedBy = __dbDocumentTypeLoaders[dbDocumentType];\r\n        throw 'More than one container attempting to register database document type: \"' + dbDocumentType + '\".';\r\n      } else {\r\n        __dbDocumentTypeLoaders[dbDocumentType] = container;\r\n      }\r\n    }\r\n  };\r\n\r\n  function __initializeModel() {\r\n    return __loadQuery().then(function (result) {\r\n      angular.forEach(result.rows, function(row){\r\n        __addDocumentToCollection(row.doc);\r\n      });\r\n      __postInitialLoading();\r\n      return result.rows.length;\r\n    }).catch(function (err) {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  function __addDocumentToCollection(document){\r\n    var dbDocumentType = document.type;\r\n    if (dbDocumentType) {\r\n      var container = __dbDocumentTypeLoaders[dbDocumentType];\r\n      if (container) {\r\n        container.loadDocumentFromDb(document, dbDocumentType);\r\n      } else {\r\n        console.log(document);\r\n        console.log('Could not load document \\\"' + document._id + '\\\" as type was not recognised (' + dbDocumentType + ')');\r\n      }\r\n    } else {\r\n      console.log('Could not load document \\\"' + document._id + '\\\" as it has no \\\"type\\\" field.');\r\n    }\r\n  };\r\n\r\n  function __postInitialLoading() {\r\n    angular.forEach(__containers, function(container) {\r\n      container.postInitialLoading();\r\n    });\r\n  }\r\n\r\n});\r\n","\r\nangular.module('SneakerJS').factory('BaseContainer', function($q) {\r\n  /*\r\n  A collection has an internal index of the objects in the database.\r\n  What it uses as keys and values is up to the derived class.\r\n  */\r\n  var BaseContainer = function()    {var self = this;\r\n    self.__db = null;\r\n  };\r\n  var def = BaseContainer.prototype;\r\n  \r\n  def.postInitialLoading = function() {\r\n    //override if container needs to do any post loading operations\r\n  };\r\n  \r\n  def.clear = function() {\r\n    //must implement to clear items\r\n  }\r\n  \r\n  def.__postAndLoad = function(doc)  {var self = this;\r\n    var defered = $q.defer();\r\n    self.__db.post(doc).then( function (result) {\r\n      if (result.ok) {\r\n        self.__db.get(result.id).then( function (docFromDb) {\r\n          defered.resolve(self.loadDocumentFromDb(docFromDb));\r\n        });\r\n      } else {\r\n        console.log(result);\r\n        throw \"Error fetching data\";\r\n      }\r\n    });\r\n    return defered.promise;\r\n  };\r\n  \r\n  return BaseContainer;\r\n});","\r\nangular.module('SneakerJS').factory('Collection', function(util, $q, BaseContainer) {\r\n\r\n  var Collection = function(db, singleItemName, fieldNames, options)    {var self = this;\r\n    var options = options || {};\r\n    self.itemName = singleItemName;\r\n    self.name = singleItemName; //This is how a relationship references collection\r\n    self.plural = options.plural || singleItemName + 's'\r\n    self.dbDocumentType = options.dbDocumentType || singleItemName;\r\n    self.__db = db;\r\n    self.__proto = options.proto || function(){};\r\n    self.__items = {};\r\n    self.__itemsAsArray = [];\r\n    self.__parentRelationships = {};\r\n    self.__relationships = [];\r\n    self.__fieldNames = fieldNames.slice();\r\n    self.__fullFieldNames = fieldNames.slice();\r\n    self.__fullFieldNames.push('_id');\r\n    self.__fullFieldNames.push('_rev');\r\n  };\r\n  util.inheritPrototype(Collection, BaseContainer);\r\n  var def = Collection.prototype;\r\n\r\n  def.registerChildRelationship = function(relationship)    {var self = this;\r\n    self.__relationships.push(relationship);\r\n  };\r\n  \r\n  def.registerParentRelationship = function(relationship, foreignKey, alias)    {var self = this;\r\n    self.__parentRelationships[alias] = relationship;\r\n    self.__relationships.push(relationship);\r\n    self.__fullFieldNames.push(foreignKey);\r\n  };\r\n  \r\n  def.registerManyToManyRelationship = function(relationship)    {var self = this;\r\n    self.__relationships.push(relationship);\r\n  };\r\n\r\n  def.loadDocumentFromDb = function(doc)    {var self = this;\r\n    var newItem = new self.__proto();\r\n    util.copyFields(doc, newItem, self.__fullFieldNames);\r\n    newItem.type = self.itemName;\r\n    self.__items[doc._id] = newItem;\r\n    self.__itemsAsArray.push(newItem);\r\n    return newItem;\r\n  };\r\n  \r\n  def.clear = function() {var self = this;\r\n    self.__items = {};\r\n    self.__itemsAsArray = [];\r\n  };\r\n\r\n  def.getAccessFunctionDefinitions = function()    {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        single = capitalize(self.itemName),\r\n        plural = capitalize(self.plural);\r\n    return [\r\n      buildFunc('new' + single, self.newItem, true),\r\n      buildFunc('get' + single, self.getItem, false),\r\n      buildFunc('find' + plural, self.findItems, false),\r\n      buildFunc('all' + plural, self.allItems, false),\r\n    ]\r\n  };\r\n\r\n  def.getItem = function(id)    {var self = this;\r\n    return self.__items[id];\r\n  };\r\n\r\n  def.allItems = function()    {var self = this;\r\n    return self.__itemsAsArray;\r\n  };\r\n\r\n  def.findItems = function(query)    {var self = this;\r\n    /*\r\n    query can be:\r\n      a function returning true or false\r\n      an object like {name: 'deirdre'} -- which returns items whose properties match.\r\n      an empty object {} -- which returns all items.\r\n    TODO: what about parent properties?\r\n    */\r\n    var test;\r\n    if (typeof query === 'function') {\r\n      test = query;\r\n    } else if (typeof query === 'object') {\r\n      test = function(item) {\r\n        for (prop in query) {\r\n          if (item[prop] !== query[prop]) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n    } else {\r\n      throw 'Invalid argument for \"find\", must be an object or a function.';\r\n    }\r\n    return util.filterIndex(self.__items, test);\r\n  };\r\n\r\n  def.newItem = function(data)    {var self = this;\r\n    var doc = {};\r\n    var relationshipsToLink = {};\r\n    util.copyFields(data, doc, self.__fieldNames);\r\n    doc.type = self.dbDocumentType;\r\n    for (var alias in self.__parentRelationships) {\r\n      var parentItem = data[alias];\r\n      var foreignKey = self.__parentRelationships[alias].foreignKey;\r\n      if (data[alias]) {\r\n        doc[foreignKey] = parentItem._id;\r\n        relationshipsToLink[alias] = parentItem;\r\n      }\r\n    }\r\n    return self.__postAndLoad(doc).then(function (newItem) {\r\n      for (var alias in relationshipsToLink) { \r\n        self.__parentRelationships[alias].linkNewlyLoadedChildToParent(newItem, parentItem);\r\n      }\r\n      return newItem;\r\n    });\r\n  };\r\n\r\n  def.saveItem = function(item)    {var self = this;\r\n    var doc = {};\r\n    util.copyFields(item, doc, self.__fullFieldNames);\r\n    doc.type = self.dbDocumentType;\r\n    return self.__db.put(doc).then(function (result) {\r\n      item._rev = result.rev;\r\n      return item._rev;\r\n    });\r\n  };\r\n\r\n  def.deleteItem = function(item)    {var self = this;\r\n    var childDeletions = self.__relationships.map(function(relationship) {\r\n      return relationship.respondToItemDeleted(item, self);\r\n    });\r\n    return $q.all(childDeletions).then(function() {\r\n      self.__db.remove(item).then(function (result) {\r\n        delete self.__items[item._id];\r\n        util.removeFromArray(self.__itemsAsArray, item);\r\n      }, util.promiseFailed);\r\n    }, util.promiseFailed);\r\n  };\r\n\r\n  return Collection;\r\n});\r\n","    \r\n/*\r\n  Left and right may be absent from register.\r\n  Both registers will always be equal and complimentary:\r\n  {\r\n     p1: {items: [t6]}\r\n     p2: {items: [t4, t6]}\r\n  }\r\n  {\r\n     t6: {items: [p1, p2]},\r\n     t4: {items: [p2]},\r\n  }\r\n*/\r\n    \r\nangular.module('SneakerJS').factory('ManyToManyRelationship', function($q, BaseContainer, util) {\r\n  \r\n  var ManyToManyRelationship = function(db, leftCollection, rightCollection, options)    {var self = this;\r\n    var options = options || {};\r\n    self.__rightCollection = rightCollection;\r\n    self.__leftCollection = leftCollection;\r\n    var defaultDbDocumentTypeName = ('lnk_' + leftCollection.itemName + '_' + rightCollection.itemName).toLowerCase();\r\n    self.__functionNameEnd = '';\r\n    if (options.qualifier) {\r\n      self.__functionNameEnd = 'As' + util.capitalizeFirstLetter(options.qualifier);\r\n      defaultDbDocumentTypeName += '_as_' + options.qualifier.toLowerCase();\r\n    }\r\n    self.dbDocumentType = options.dbDocumentType || defaultDbDocumentTypeName;\r\n    self.name = self.dbDocumentType;\r\n    self.__db = db;\r\n    self.__leftCollection = leftCollection;\r\n    self.__rightCollection = rightCollection;\r\n    self.__leftRights = {};\r\n    self.__rightLefts = {};\r\n    self.__docsForReuse = [];\r\n    rightCollection.registerManyToManyRelationship(self);\r\n    leftCollection.registerManyToManyRelationship(self);\r\n  };\r\n  util.inheritPrototype(ManyToManyRelationship, BaseContainer);\r\n  var def = ManyToManyRelationship.prototype;\r\n  \r\n  def.getAccessFunctionDefinitions = function()  {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        leftName = capitalize(self.__leftCollection.itemName),\r\n        leftPlural = capitalize(self.__leftCollection.plural),\r\n        rightName = capitalize(self.__rightCollection.itemName),\r\n        rightPlural = capitalize(self.__rightCollection.plural),\r\n        end = self.__functionNameEnd,\r\n        getLeftRightsFnName = 'get' + leftName + rightPlural + end,\r\n        getRightLeftsFnName = 'get' + rightName + leftPlural + end,\r\n        addLeftRightFnName = 'add' + leftName + rightName + end,\r\n        removeLeftRightFnName = 'remove' + leftName + rightName + end,\r\n        isLeftLinkedToRightFnName = 'is' + leftName + 'LinkedTo' + rightName + end;\r\n    return [\r\n      buildFunc(getLeftRightsFnName, self.getLeftRights, false),\r\n      buildFunc(getRightLeftsFnName, self.getRightLefts, false),\r\n      buildFunc(addLeftRightFnName, self.addLink, true),\r\n      buildFunc(removeLeftRightFnName, self.removeLink, true),\r\n      buildFunc(isLeftLinkedToRightFnName, self.isLinked, false)\r\n    ];\r\n  };\r\n  \r\n  def.loadDocumentFromDb = function(doc)  {var self = this;\r\n    if (doc.right && \r\n        doc.left && \r\n        self.__updateOneRegisterWithDocument(self.__leftRights, doc.left, doc.right, doc)\r\n        ){\r\n      self.__updateOneRegisterWithDocument(self.__rightLefts, doc.right, doc.left, doc);\r\n      return true;\r\n    } else {\r\n      self.__sendDocumentToReusePile(doc);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  def.clear = function() {var self = this;\r\n    self.__leftRights = {};\r\n    self.__rightLefts = {};\r\n    self.__docsForReuse = [];\r\n  };\r\n  \r\n  def.__updateOneRegisterWithDocument = function(register, key, id, doc)  {var self = this;\r\n    var entry = register[key];\r\n    if (entry === undefined) {\r\n      var docs = {};\r\n      docs[id] = doc;\r\n      register[key] = {docs: docs, items: []};\r\n    } else {\r\n      if (entry.docs[id]) {\r\n        return false;\r\n      }\r\n      entry.docs[id] = doc;\r\n    }\r\n    return true;\r\n  };\r\n  \r\n  def.getLeftRights = function (leftItem)  {var self = this;\r\n    return self.__getInitialisedEntry(self.__leftRights, leftItem._id).items;\r\n  };\r\n  \r\n  def.getRightLefts = function (rightItem)  {var self = this;\r\n    return self.__getInitialisedEntry(self.__rightLefts, rightItem._id).items;\r\n  };\r\n  \r\n  //TODO: assert they are of correct type?\r\n  def.addLink = function (leftItem, rightItem)    {var self = this;\r\n    if (self.isLinked(leftItem, rightItem)) {\r\n      return $q.when();\r\n    } else {\r\n      return self.__writeLinkToDatabase(leftItem, rightItem).then(function(){\r\n        //will have gone through loadDocumentFromDb succesfully.\r\n        var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id),\r\n            rightEntry = self.__getInitialisedEntry(self.__rightLefts, rightItem._id);\r\n        util.addUnique(leftEntry.items, rightItem);\r\n        util.addUnique(rightEntry.items, leftItem);\r\n      });\r\n    };\r\n  };\r\n  \r\n  def.removeLink = function (leftItem, rightItem)    {var self = this;\r\n    var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id);\r\n    var rightEntry = self.__getInitialisedEntry(self.__rightLefts, rightItem._id);\r\n    var doc1 = self.__removeFromEntry(leftEntry, rightItem);\r\n    var doc2 = self.__removeFromEntry(rightEntry, leftItem);\r\n    if (doc1 !== doc2) {\r\n      throw \"This is strange...\"\r\n    }\r\n    return self.__db.remove(doc1);\r\n  };\r\n  \r\n  def.__removeFromEntry = function(entry, item)  {var self = this;\r\n    var doc = entry.docs[item._id];\r\n    util.removeFromArray(entry.items, item);\r\n    delete entry.docs[item._id];\r\n    return doc;\r\n  }\r\n   \r\n  def.isLinked = function (leftItem, rightItem)  {var self = this;\r\n    var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id);\r\n    return util.arrayContains(leftEntry.items, rightItem);\r\n  };\r\n  \r\n  def.respondToItemDeleted = function (item, collection)     {var self = this;\r\n    var opposites, itemIsFromRight;\r\n    if (collection === self.__rightCollection) {\r\n      itemIsFromRight = true;\r\n      opposites = self.getRightLefts(item);\r\n    } else if (collection === self.__leftCollection) {\r\n      itemIsFromRight = false;\r\n      opposites = self.getLeftRights(item);\r\n    }\r\n    opposites = opposites.slice();\r\n    var operations = [];\r\n    angular.forEach(opposites, function(oppositeItem) {\r\n      if (itemIsFromRight) {\r\n        var leftItem = oppositeItem;\r\n        var rightItem = item;\r\n      } else {\r\n        var leftItem = item;\r\n        var rightItem = oppositeItem;\r\n      }\r\n      operations.push(self.removeLink(leftItem, rightItem));\r\n    });\r\n    return $q.all(operations);\r\n  };\r\n  \r\n  /*\r\n  Should only be called if sure that items are not linked. Will reuse a document if one is available.\r\n  */\r\n  //TODO: tidy this mess not to have var deferred = $q.defer()\r\n  def.__writeLinkToDatabase = function(leftItem, rightItem)  {var self = this;\r\n    var deferred = $q.defer(),\r\n        doc = self.__docsForReuse.pop();\r\n    function finish(succesfullyLoaded) {\r\n      if (succesfullyLoaded) {\r\n        deferred.resolve();\r\n      } else {\r\n        throw 'ManyToManyRelationship.__writeLinkToDatabase failed to load document. This should not have happened.'\r\n      }\r\n    }\r\n    if (doc) {\r\n      doc.left = leftItem._id;\r\n      doc.right = rightItem._id;\r\n      self.__db.put(doc).then(function (result) {\r\n        doc._rev = result.rev;\r\n        finish(self.loadDocumentFromDb(doc));        \r\n      });\r\n    } else {\r\n      doc = {left: leftItem._id, right:rightItem._id, type:self.dbDocumentType};\r\n      self.__postAndLoad(doc).then(function (result) {\r\n        finish(result);\r\n      });\r\n    }\r\n    return deferred.promise;\r\n  };\r\n  \r\n  def.__sendDocumentToReusePile = function(doc)  {var self = this;\r\n    self.__docsForReuse.push(doc);\r\n  };\r\n  \r\n  def.__getInitialisedEntry = function (register, id)  {var self = this;\r\n    var entry = register[id];\r\n    if (entry === undefined) {\r\n      entry = {docs: {}, items: []};\r\n      register[id] = entry;\r\n    } else {\r\n      if (entry.items.length !== Object.keys(entry.docs).length) {\r\n        var collection = (register === self.__leftRights)? self.__rightCollection : self.__leftCollection; \r\n        entry.items.length = 0;\r\n        angular.forEach(entry.docs, function(doc, id) {\r\n          //TODO: what if item doesn't exist?\r\n          var item = collection.getItem(id);\r\n          if (item) {\r\n            entry.items.push(item);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return entry;\r\n  };\r\n  \r\n  return ManyToManyRelationship;\r\n});","\r\nangular.module('SneakerJS').factory('ParentChildRelationship', function($q, BaseContainer, util) {\r\n\r\n  var ParentChildRelationship = function(db, parentCollection, childCollection, options)    {var self = this;\r\n    var options = options || {};\r\n    self.__db = db;\r\n    self.__parentCollection = parentCollection;\r\n    self.__childCollection = childCollection;\r\n    self.__childAlias = options.childAlias || childCollection.plural;\r\n    self.__parentAlias = options.parentAlias || parentCollection.itemName;\r\n    self.__cascadeDelete = (options.cascadeDelete === undefined)? true : options.cascadeDelete;\r\n    self.__itemParent = {};\r\n    self.__itemChildren = {};\r\n    self.name = 'relationship_' + childCollection.itemName + '_as_' + self.__childAlias + '_' +\r\n          parentCollection.itemName + '_as_' + self.__parentAlias;\r\n    self.foreignKey = 'fk__' + self.__parentAlias;\r\n    parentCollection.registerChildRelationship(self);\r\n    childCollection.registerParentRelationship(self, self.foreignKey, self.__parentAlias);\r\n  };\r\n  util.inheritPrototype(ParentChildRelationship, BaseContainer);\r\n  var def = ParentChildRelationship.prototype;\r\n\r\n  def.getAccessFunctionDefinitions = function()  {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        childName = capitalize(self.__childCollection.itemName),\r\n        childAlias = capitalize(self.__childAlias),\r\n        parentName = capitalize(self.__parentCollection.itemName),\r\n        parentAlias = capitalize(self.__parentAlias);\r\n    return [\r\n      buildFunc('get' + childName + parentAlias, self.getParent, false),\r\n      buildFunc('get' + parentName + childAlias, self.getChildren, false),\r\n      buildFunc('set' + childName + parentAlias, self.setChildParent, true),\r\n    ];\r\n  };\r\n\r\n  def.postInitialLoading = function()  {var self = this;\r\n    var key = self.foreignKey;\r\n    angular.forEach(self.__parentCollection.__items, function(parentItem) {\r\n      self.__itemChildren[parentItem._id] = [];\r\n    });\r\n    angular.forEach(self.__childCollection.__items, function(childItem) {\r\n      var parentId = childItem[key];\r\n      if (parentId) {\r\n        var parentItem = self.__parentCollection.getItem(parentId);\r\n        self.linkNewlyLoadedChildToParent(childItem, parentItem, parentId);\r\n      }\r\n    });\r\n  };\r\n  \r\n  def.clear = function() {var self = this;\r\n    self.__itemParent = {};\r\n    self.__itemChildren = {};\r\n  };\r\n  \r\n  def.linkNewlyLoadedChildToParent = function(childItem, parentItem, parentId)    {var self = this;\r\n    var parentId = parentId || parentItem._id;\r\n    self.__itemParent[childItem._id] = parentItem;\r\n    var parentChildren = self.__itemChildren[parentId];\r\n    if (parentChildren === undefined) {\r\n      self.__itemChildren[parentId] = [childItem];\r\n    } else {\r\n      parentChildren.push(childItem);\r\n    }\r\n  };\r\n\r\n  def.getParent = function (childItem)    {var self = this;\r\n    return self.__itemParent[childItem._id] || null;\r\n  };\r\n\r\n  def.getChildren = function (parentItem)    {var self = this;\r\n    return self.__itemChildren[parentItem._id] || [];\r\n  };\r\n\r\n  def.setChildParent = function (childItem, parentItem)    {var self = this;\r\n    //TODO: assert they are of correct type?\r\n    var oldParent = self.__itemParent[childItem._id];\r\n    var parentItemId = parentItem? parentItem._id : null;\r\n    if (oldParent) {\r\n      util.removeFromArray(self.__itemChildren[oldParent._id], childItem);\r\n    }\r\n    if (parentItem) {\r\n      if (self.__itemChildren[parentItem._id] === undefined) {\r\n        self.__itemChildren[parentItem._id] = [childItem];\r\n      } else {\r\n        self.__itemChildren[parentItem._id].push(childItem);\r\n      }\r\n    }\r\n    self.__itemParent[childItem._id] = parentItem;\r\n    childItem[self.foreignKey] = parentItemId;\r\n    return self.__childCollection.saveItem(childItem);\r\n  };\r\n\r\n  def.respondToItemDeleted = function (item, collection)     {var self = this;\r\n    if (collection === self.__parentCollection) {\r\n      return self.__respondToParentDeleted(item);\r\n    } else if (collection === self.__childCollection) {\r\n      return self.__respondToChildDeleted(item);\r\n    }\r\n  };\r\n\r\n  def.__respondToParentDeleted = function (parentItem)     {var self = this;\r\n    var action = (self.__cascadeDelete)?\r\n        function(childItem) {return self.__childCollection.deleteItem(childItem)} :\r\n        function(childItem) {return self.setChildParent(childItem, null)};\r\n    var children = self.getChildren(parentItem).slice(); //slice() is imortant!\r\n    return $q.all(children.map(action)).then(function() {\r\n      delete self.__itemChildren[parentItem._id];\r\n      return $q.when(true);\r\n    }, util.promiseFailed);\r\n  };\r\n\r\n  def.__respondToChildDeleted = function (childItem)     {var self = this;\r\n    var parentItem = self.getParent(childItem);\r\n    if (parentItem) {\r\n      util.removeFromArray(self.__itemChildren[parentItem._id], childItem);\r\n    }\r\n    delete self.__itemParent[childItem._id];\r\n    return $q.when(true);\r\n  };\r\n\r\n  return ParentChildRelationship;\r\n});\r\n","\r\nangular.module('SneakerJS').factory('Singleton', function(util, BaseContainer) {\r\n\r\n  var Singleton = function(db, name)    {var self = this;\r\n    self.name = name;\r\n    self.dbDocumentType = 'singleton__' + name;\r\n    self.__db = db;\r\n    self.__doc = null;\r\n  };\r\n  util.inheritPrototype(Singleton, BaseContainer);\r\n  var def = Singleton.prototype;\r\n  \r\n  def.loadDocumentFromDb = function(doc)    {var self = this;\r\n    if (self.__doc !== null) {\r\n      throw 'found singleton of type ' + self.name + ' more than once in db';\r\n    }\r\n    if (doc._id !== self.dbDocumentType) {\r\n      throw 'Expected singleton type ' + self.name + ' to have _id: ' + self.dbDocumentType;\r\n    }\r\n    self.__doc = doc;\r\n    return self.__doc.data;\r\n  };\r\n  \r\n  def.clear = function() {var self = this;\r\n    self.__doc = null;\r\n  };\r\n\r\n  def.getAccessFunctionDefinitions = function()    {var self = this;\r\n    return [\r\n      util.createAccessFunctionDefinition('get' + util.capitalizeFirstLetter(self.name), self.getData, false),\r\n      util.createAccessFunctionDefinition('set' + util.capitalizeFirstLetter(self.name), self.setData, false)\r\n    ]\r\n  };\r\n  \r\n  def.getData = function() {var self = this;\r\n    return (self.__doc)? self.__doc.data : {};\r\n  };\r\n  \r\n  def.setData = function(data) {var self = this;\r\n    if (!self.__doc){\r\n      self.__doc = {\r\n        type: self.dbDocumentType,\r\n        _id: self.dbDocumentType,\r\n        data: {}\r\n      }\r\n    }\r\n    angular.copy(data, self.__doc.data);\r\n    return self.__db.put(self.__doc).then(function (result) {\r\n      self.__doc._rev = result.rev;\r\n      return result.rev;\r\n    });\r\n  };\r\n  \r\n  return Singleton; \r\n});","\r\n\r\n\r\nangular.module('SneakerJS').service('util', function($q) {\r\n  var self = this;\r\n\r\n  self.capitalizeFirstLetter = function(str) {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  };\r\n\r\n  self.createAccessFunctionDefinition = function(name, fn, queuedPromise) {\r\n    return {\r\n      ModelFunctionName: name,\r\n      containerFunction: fn,\r\n      queuedPromise: queuedPromise\r\n    }\r\n  };\r\n\r\n  self.arrayContains = function(myArray, item) {\r\n    for (var i = 0, len = myArray.length; i < len; i++) {\r\n      if (item === myArray[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  self.addUnique = function(myArray, item) {\r\n    if(!self.arrayContains(myArray, item)){\r\n      myArray.push(item);\r\n    }\r\n  }\r\n\r\n  self.addAsItem = function(object, key, item) {\r\n    //Where object[key] = [items...]\r\n    if (object[key] === undefined) {\r\n      object[key] = [item];\r\n    } else {\r\n      object[key].push(item);\r\n    }\r\n  };\r\n\r\n  self.removeFromArray = function(myArray, item) {\r\n    var index = myArray.indexOf(item);\r\n    if (index > -1) {\r\n      myArray.splice(index, 1);\r\n    }\r\n  };\r\n\r\n  self.filterIndex = function(index, test) {\r\n    //accepts an object like array.\r\n    var filteredItems = [];\r\n    angular.forEach(index, function(item) {\r\n      if (test(item)) {\r\n        filteredItems.push(item);\r\n      }\r\n    });\r\n    return filteredItems;\r\n  };\r\n\r\n  self.inheritPrototype = function(Child, Parent) {\r\n    var childProto = Child.prototype;\r\n    var parentProto = Parent.prototype;\r\n    for (var prop in parentProto) {\r\n      if (typeof parentProto[prop] == 'function') {\r\n        childProto[prop] = parentProto[prop];\r\n      }\r\n    }\r\n  };\r\n\r\n  self.copyFields = function(source, target, fields) {\r\n    angular.forEach(fields, function(field) {\r\n      target[field] = source[field];\r\n    });\r\n  };\r\n\r\n  self.promiseFailed = function(error) {\r\n    console.log('Promise failed!');\r\n    console.log(error);\r\n  }\r\n\r\n});\r\n"],"sourceRoot":"/source/"}