{"version":3,"sources":["model.js","BaseContainer.js","Collection.js","ManyToManyRelationship.js","ParentChildRelationship.js","util.js"],"names":["angular","module","service","$q","Collection","ParentChildRelationship","ManyToManyRelationship","__registerContainer","container","name","undefined","__containers","__registerDocumentTypeLoader","__createAccessFunctions","forEach","getAccessFunctionDefinitions","accessFunc","func","fnName","ModelFunctionName","queuedPromise","__getQueuedFunction","containerFunction","__getNonQueuedFunction","self","apply","arguments","originalArgs","deferred","defer","__lastPromiseInQueue","then","result","resolve","promise","dbDocumentType","__dbDocumentTypeLoaders","__initializeModel","__loadQuery","rows","row","__addDocumentToCollection","doc","__postInitialLoading","err","console","log","document","type","loadDocumentFromDb","_id","postInitialLoading","__db","this","when","initialize","db","query","allDocs","include_docs","attachments","__dataReady","dataReady","reload","clear","printInfo","collection","singleItemName","fieldNames","options","join","firstCollection","secondCollection","relationshipType","parentCollection","childCollection","toLowerCase","leftCollection","rightCollection","saveItem","item","deleteItem","factory","BaseContainer","def","prototype","__postAndLoad","defered","post","ok","get","id","docFromDb","util","itemName","plural","__proto","proto","__items","__itemsAsArray","__parentRelationships","__relationships","__fieldNames","slice","__fullFieldNames","push","inheritPrototype","registerChildRelationship","relationship","registerParentRelationship","foreignKey","alias","registerManyToManyRelationship","newItem","copyFields","capitalize","capitalizeFirstLetter","buildFunc","createAccessFunctionDefinition","single","getItem","findItems","allItems","test","prop","filterIndex","data","relationshipsToLink","parentItem","linkNewlyLoadedChildToParent","put","_rev","rev","childDeletions","map","respondToItemDeleted","all","remove","removeFromArray","promiseFailed","__rightCollection","__leftCollection","defaultDbDocumentTypeName","__functionNameEnd","qualifier","__leftRights","__rightLefts","__docsForReuse","leftName","leftPlural","rightName","rightPlural","end","getLeftRightsFnName","getRightLeftsFnName","addLeftRightFnName","removeLeftRightFnName","isLeftLinkedToRightFnName","getLeftRights","getRightLefts","addLink","removeLink","isLinked","right","left","__updateOneRegisterWithDocument","__sendDocumentToReusePile","register","key","entry","docs","items","leftItem","__getInitialisedEntry","rightItem","__writeLinkToDatabase","leftEntry","rightEntry","addUnique","doc1","__removeFromEntry","doc2","arrayContains","opposites","itemIsFromRight","operations","oppositeItem","finish","succesfullyLoaded","pop","length","Object","keys","__parentCollection","__childCollection","__childAlias","childAlias","__parentAlias","parentAlias","__cascadeDelete","cascadeDelete","__itemParent","__itemChildren","childName","parentName","getParent","getChildren","setChildParent","childItem","parentId","parentChildren","oldParent","parentItemId","__respondToParentDeleted","__respondToChildDeleted","action","children","str","charAt","toUpperCase","fn","myArray","i","len","addAsItem","object","index","indexOf","splice","filteredItems","Child","Parent","childProto","parentProto","source","target","fields","field","error"],"mappings":"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","file":"sneakerjs.min.js","sourcesContent":["\"use strict\";\r\nangular.module('SneakerJS', []);\r\n\r\nangular.module('SneakerJS').service('model', function($q, Collection, ParentChildRelationship, ManyToManyRelationship) {\r\n\r\n  var self = this,\r\n      __db,\r\n      __loadQuery,\r\n      __containers = {},\r\n      __dbDocumentTypeLoaders = {},\r\n      __lastPromiseInQueue = $q.when(),\r\n      __relationshipDefinitionFunctions = {};\r\n\r\n  self.initialize = function(db, query) {\r\n    __db = db;\r\n    __loadQuery = query || function() {\r\n      return __db.allDocs({\r\n        include_docs: true,\r\n        attachments: false\r\n      });\r\n    }\r\n  };\r\n\r\n  var __dataReady;\r\n  self.dataReady = function (){\r\n    if (__dataReady === undefined) {\r\n      __dataReady = __initializeModel();\r\n    }\r\n    return __dataReady.promise;\r\n  };\r\n  \r\n  self.reload = function (){\r\n    __dataReady = undefined;\r\n    angular.forEach(__containers, function(container) {\r\n      container.clear();\r\n    });\r\n    return self.dataReady();\r\n  };\r\n\r\n  self.printInfo = function (){\r\n    angular.forEach(__containers, function(container) {\r\n      angular.forEach(container.getAccessFunctionDefinitions(), function(accessFunc) {\r\n        console.log('model.' + accessFunc.ModelFunctionName);\r\n      });\r\n    });\r\n  };\r\n\r\n  /************* MODEL DEFINITION FUNCTIONS *************/\r\n\r\n  self.collection = function(singleItemName, fieldNames, options){\r\n    var container = new Collection(__db, singleItemName, fieldNames, options);\r\n    __registerContainer(container);\r\n    return container;\r\n  };\r\n\r\n  self.join = function(firstCollection, secondCollection, options){\r\n    var options = options || {},\r\n        container,\r\n        relationshipType = options.type || 'parentChild';\r\n    angular.forEach([firstCollection, secondCollection], function(name) {\r\n      if (__containers[name] === undefined) {\r\n        throw 'Failed to create join, container not found: \"' + name + '\" ';\r\n      }\r\n    });\r\n    if (relationshipType === 'parentChild') {\r\n      var parentCollection = __containers[firstCollection];\r\n      var childCollection = __containers[secondCollection];\r\n      container = new ParentChildRelationship(__db, parentCollection, childCollection, options);\r\n    } else if (relationshipType.toLowerCase() === 'many-to-many') {\r\n      var leftCollection = __containers[firstCollection];\r\n      var rightCollection = __containers[secondCollection];\r\n      container = new ManyToManyRelationship(__db, leftCollection, rightCollection, options);\r\n    } else {\r\n      throw '\"' + relationshipType + '\" is not a valid relationship type';\r\n    }\r\n    __registerContainer(container);\r\n    return container;\r\n  };\r\n\r\n  function __registerContainer(container) {\r\n    var name = container.name;\r\n    if (__containers[name] !== undefined) {\r\n      throw 'Trying to create two containers with the same name: ' + name + ' on model but it already exists.';\r\n    }\r\n    __containers[name] = container;\r\n    __registerDocumentTypeLoader(container);\r\n    __createAccessFunctions(container);\r\n  };\r\n\r\n  /************* COLLECTION ACCESS FUNCTIONALITY ************\r\n\r\n    __createAccessFunctions() creates methods like:\r\n\r\n      model.newTask({})\r\n      model.getProjectTasks(project)\r\n\r\n    Query functions (getX, findX) return directly. Data changing functions (all other prefixed) return promises.\r\n\r\n    Query data may be dirty while a promise is waiting to complete, so you need to do this:\r\n\r\n    model.newTask({}).then(function(){\r\n      angular.copy($scope.tasks, model.getProjectTasks($scope.project));\r\n    });\r\n\r\n    Data changing functions are queued internally, so you can do this.\r\n    model.newTask({});\r\n    model.newTask({});\r\n    model.newTask({}).then(function(){\r\n      angular.copy($scope.tasks, model.getProjectTasks($scope.project));\r\n    });\r\n\r\n  */\r\n  self.saveItem = function(item) {\r\n    return __containers[item.type].saveItem(item);\r\n  };\r\n\r\n  self.deleteItem = function(item) {\r\n    return __containers[item.type].deleteItem(item);\r\n  };\r\n\r\n  function __createAccessFunctions(container){\r\n    angular.forEach(container.getAccessFunctionDefinitions(), function(accessFunc) {\r\n      var func, fnName = accessFunc.ModelFunctionName;\r\n      if (accessFunc.queuedPromise) {\r\n        func = __getQueuedFunction(container, accessFunc.containerFunction);\r\n      } else {\r\n        func = __getNonQueuedFunction(container, accessFunc.containerFunction);\r\n      }\r\n      if (self[fnName] !== undefined) {\r\n        throw 'Container ' + container.name + ' trying to create function ' + fnName + ' on model but it already exists.';\r\n      }\r\n      self[fnName] = func;\r\n    });\r\n  };\r\n\r\n  function __getNonQueuedFunction(container, containerFunction){\r\n    return function() {\r\n      return containerFunction.apply(container, arguments);\r\n    }\r\n  };\r\n\r\n  function __getQueuedFunction(container, containerFunction){\r\n    return function() {\r\n      var originalArgs = arguments;\r\n      var deferred = $q.defer();\r\n      __lastPromiseInQueue.then( function() {\r\n        __lastPromiseInQueue = containerFunction.apply(container, originalArgs);\r\n        __lastPromiseInQueue.then(function(result) {\r\n          deferred.resolve(result);\r\n        });\r\n      });\r\n      return deferred.promise;\r\n    }\r\n  };\r\n\r\n  /************* INITIAL LOADING FUNCTIONALITY *************/\r\n\r\n  function __registerDocumentTypeLoader(container) {\r\n    /* If container has field 'dbDocumentType' then every document whose 'type' field matches that\r\n    will be passed to the container's loadDocumentFromDb() function at loading.\r\n    */\r\n    var dbDocumentType = container.dbDocumentType;\r\n    if (dbDocumentType !== undefined) {\r\n      if (dbDocumentType in __dbDocumentTypeLoaders) {\r\n        var claimedBy = __dbDocumentTypeLoaders[dbDocumentType];\r\n        throw 'More than one container attempting to register database document type: \"' + dbDocumentType + '\".';\r\n      } else {\r\n        __dbDocumentTypeLoaders[dbDocumentType] = container;\r\n      }\r\n    }\r\n  };\r\n\r\n  function __initializeModel(){\r\n    return __loadQuery().then(function (result) {\r\n      angular.forEach(result.rows, function(row){\r\n        __addDocumentToCollection(row.doc);\r\n      });\r\n      __postInitialLoading();\r\n    }).catch(function (err) {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  function __addDocumentToCollection(document){\r\n    var dbDocumentType = document.type;\r\n    if (dbDocumentType) {\r\n      var container = __dbDocumentTypeLoaders[dbDocumentType];\r\n      if (container) {\r\n        container.loadDocumentFromDb(document, dbDocumentType);\r\n      } else {\r\n        console.log(document);\r\n        console.log('Could not load document \\\"' + document._id + '\\\" as type was not recognised (' + dbDocumentType + ')');\r\n      }\r\n    } else {\r\n      console.log('Could not load document \\\"' + document._id + '\\\" as it has no \\\"type\\\" field.');\r\n    }\r\n  };\r\n\r\n  function __postInitialLoading() {\r\n    angular.forEach(__containers, function(container) {\r\n      container.postInitialLoading();\r\n    });\r\n  }\r\n\r\n});\r\n\r\n","\r\nangular.module('SneakerJS').factory('BaseContainer', function($q) {\r\n  /*\r\n  A collection has an internal index of the objects in the database.\r\n  What it uses as keys and values is up to the derived class.\r\n  */\r\n  var BaseContainer = function()    {var self = this;\r\n    self.__db = null;\r\n  };\r\n  var def = BaseContainer.prototype;\r\n  \r\n  def.postInitialLoading = function() {\r\n    //override if container needs to do any post loading operations\r\n  };\r\n  \r\n  def.clear = function() {\r\n    //must implement to clear items\r\n  }\r\n  \r\n  def.__postAndLoad = function(doc)  {var self = this;\r\n    var defered = $q.defer();\r\n    self.__db.post(doc).then( function (result) {\r\n      if (result.ok) {\r\n        self.__db.get(result.id).then( function (docFromDb) {\r\n          defered.resolve(self.loadDocumentFromDb(docFromDb));\r\n        });\r\n      } else {\r\n        console.log(result);\r\n        throw \"Error fetching data\";\r\n      }\r\n    });\r\n    return defered.promise;\r\n  };\r\n  \r\n  return BaseContainer;\r\n});","\r\nangular.module('SneakerJS').factory('Collection', function(util, $q, BaseContainer) {\r\n\r\n  var Collection = function(db, singleItemName, fieldNames, options)    {var self = this;\r\n    var options = options || {};\r\n    self.itemName = singleItemName;\r\n    self.name = singleItemName; //This is how a relationship references collection\r\n    self.plural = options.plural || singleItemName + 's'\r\n    self.dbDocumentType = options.dbDocumentType || singleItemName;\r\n    self.__db = db;\r\n    self.__proto = options.proto || function(){};\r\n    self.__items = {};\r\n    self.__itemsAsArray = [];\r\n    self.__parentRelationships = {};\r\n    self.__relationships = [];\r\n    self.__fieldNames = fieldNames.slice();\r\n    self.__fullFieldNames = fieldNames.slice();\r\n    self.__fullFieldNames.push('_id');\r\n    self.__fullFieldNames.push('_rev');\r\n  };\r\n  util.inheritPrototype(Collection, BaseContainer);\r\n  var def = Collection.prototype;\r\n\r\n  def.registerChildRelationship = function(relationship)    {var self = this;\r\n    self.__relationships.push(relationship);\r\n  };\r\n  \r\n  def.registerParentRelationship = function(relationship, foreignKey, alias)    {var self = this;\r\n    self.__parentRelationships[alias] = relationship;\r\n    self.__relationships.push(relationship);\r\n    self.__fullFieldNames.push(foreignKey);\r\n  };\r\n  \r\n  def.registerManyToManyRelationship = function(relationship)    {var self = this;\r\n    self.__relationships.push(relationship);\r\n  };\r\n\r\n  def.loadDocumentFromDb = function(doc)    {var self = this;\r\n    var newItem = new self.__proto();\r\n    util.copyFields(doc, newItem, self.__fullFieldNames);\r\n    newItem.type = self.itemName;\r\n    self.__items[doc._id] = newItem;\r\n    self.__itemsAsArray.push(newItem);\r\n    return newItem;\r\n  };\r\n  \r\n  def.clear = function() {var self = this;\r\n    self.__items = {};\r\n    self.__itemsAsArray = [];\r\n  };\r\n\r\n  def.getAccessFunctionDefinitions = function()    {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        single = capitalize(self.itemName),\r\n        plural = capitalize(self.plural);\r\n    return [\r\n      buildFunc('new' + single, self.newItem, true),\r\n      buildFunc('get' + single, self.getItem, false),\r\n      buildFunc('find' + plural, self.findItems, false),\r\n      buildFunc('all' + plural, self.allItems, false),\r\n    ]\r\n  };\r\n\r\n  def.getItem = function(id)    {var self = this;\r\n    return self.__items[id];\r\n  };\r\n\r\n  def.allItems = function()    {var self = this;\r\n    return self.__itemsAsArray;\r\n  };\r\n\r\n  def.findItems = function(query)    {var self = this;\r\n    /*\r\n    query can be:\r\n      a function returning true or false\r\n      an object like {name: 'deirdre'} -- which returns items whose properties match.\r\n      an empty object {} -- which returns all items.\r\n    TODO: what about parent properties?\r\n    */\r\n    var test;\r\n    if (typeof query === 'function') {\r\n      test = query;\r\n    } else if (typeof query === 'object') {\r\n      test = function(item) {\r\n        for (prop in query) {\r\n          if (item[prop] !== query[prop]) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n    } else {\r\n      throw 'Invalid argument for \"find\", must be an object or a function.';\r\n    }\r\n    return util.filterIndex(self.__items, test);\r\n  };\r\n\r\n  def.newItem = function(data)    {var self = this;\r\n    var deferred = $q.defer();\r\n    var doc = {};\r\n    var relationshipsToLink = {};\r\n    util.copyFields(data, doc, self.__fieldNames);\r\n    doc.type = self.dbDocumentType;\r\n    for (var alias in self.__parentRelationships) {\r\n      var parentItem = data[alias];\r\n      var foreignKey = self.__parentRelationships[alias].foreignKey;\r\n      if (data[alias]) {\r\n        doc[foreignKey] = parentItem._id;\r\n        relationshipsToLink[alias] = parentItem;\r\n      }\r\n    }\r\n    self.__postAndLoad(doc).then(function (newItem) {\r\n      for (var alias in relationshipsToLink) { \r\n        self.__parentRelationships[alias].linkNewlyLoadedChildToParent(newItem, parentItem);\r\n      }\r\n      deferred.resolve(newItem);\r\n    });\r\n    return deferred.promise;\r\n  };\r\n\r\n  def.saveItem = function(item)    {var self = this;\r\n    var deferred = $q.defer();\r\n    var doc = {};\r\n    util.copyFields(item, doc, self.__fullFieldNames);\r\n    doc.type = self.dbDocumentType;\r\n    self.__db.put(doc).then(function (result) {\r\n      item._rev = result.rev;\r\n      deferred.resolve(item._rev);\r\n    });\r\n    return deferred.promise;\r\n  };\r\n\r\n  def.deleteItem = function(item)    {var self = this;\r\n    var childDeletions = self.__relationships.map(function(relationship) {\r\n      return relationship.respondToItemDeleted(item, self);\r\n    });\r\n    return $q.all(childDeletions).then(function() {\r\n      self.__db.remove(item).then(function (result) {\r\n        delete self.__items[item._id];\r\n        util.removeFromArray(self.__itemsAsArray, item);\r\n      }, util.promiseFailed);\r\n    }, util.promiseFailed);\r\n  };\r\n\r\n  return Collection;\r\n});\r\n","    \r\n/*\r\n  Left and right may be absent from register.\r\n  Both registers will always be equal and complimentary:\r\n  {\r\n     p1: {items: [t6]}\r\n     p2: {items: [t4, t6]}\r\n  }\r\n  {\r\n     t6: {items: [p1, p2]},\r\n     t4: {items: [p2]},\r\n  }\r\n*/\r\n    \r\nangular.module('SneakerJS').factory('ManyToManyRelationship', function($q, BaseContainer, util) {\r\n  \r\n  var ManyToManyRelationship = function(db, leftCollection, rightCollection, options)    {var self = this;\r\n    var options = options || {};\r\n    self.__rightCollection = rightCollection;\r\n    self.__leftCollection = leftCollection;\r\n    var defaultDbDocumentTypeName = ('lnk_' + leftCollection.itemName + '_' + rightCollection.itemName).toLowerCase();\r\n    self.__functionNameEnd = '';\r\n    if (options.qualifier) {\r\n      self.__functionNameEnd = 'As' + util.capitalizeFirstLetter(options.qualifier);\r\n      defaultDbDocumentTypeName += '_as_' + options.qualifier.toLowerCase();\r\n    }\r\n    self.dbDocumentType = options.dbDocumentType || defaultDbDocumentTypeName;\r\n    self.name = self.dbDocumentType;\r\n    self.__db = db;\r\n    self.__leftCollection = leftCollection;\r\n    self.__rightCollection = rightCollection;\r\n    self.__leftRights = {};\r\n    self.__rightLefts = {};\r\n    self.__docsForReuse = [];\r\n    rightCollection.registerManyToManyRelationship(self);\r\n    leftCollection.registerManyToManyRelationship(self);\r\n  };\r\n  util.inheritPrototype(ManyToManyRelationship, BaseContainer);\r\n  var def = ManyToManyRelationship.prototype;\r\n  \r\n  def.getAccessFunctionDefinitions = function()  {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        leftName = capitalize(self.__leftCollection.itemName),\r\n        leftPlural = capitalize(self.__leftCollection.plural),\r\n        rightName = capitalize(self.__rightCollection.itemName),\r\n        rightPlural = capitalize(self.__rightCollection.plural),\r\n        end = self.__functionNameEnd,\r\n        getLeftRightsFnName = 'get' + leftName + rightPlural + end,\r\n        getRightLeftsFnName = 'get' + rightName + leftPlural + end,\r\n        addLeftRightFnName = 'add' + leftName + rightName + end,\r\n        removeLeftRightFnName = 'remove' + leftName + rightName + end,\r\n        isLeftLinkedToRightFnName = 'is' + leftName + 'LinkedTo' + rightName + end;\r\n    return [\r\n      buildFunc(getLeftRightsFnName, self.getLeftRights, false),\r\n      buildFunc(getRightLeftsFnName, self.getRightLefts, false),\r\n      buildFunc(addLeftRightFnName, self.addLink, true),\r\n      buildFunc(removeLeftRightFnName, self.removeLink, true),\r\n      buildFunc(isLeftLinkedToRightFnName, self.isLinked, false)\r\n    ];\r\n  };\r\n  \r\n  def.loadDocumentFromDb = function(doc)  {var self = this;\r\n    if (doc.right && \r\n        doc.left && \r\n        self.__updateOneRegisterWithDocument(self.__leftRights, doc.left, doc.right, doc)\r\n        ){\r\n      self.__updateOneRegisterWithDocument(self.__rightLefts, doc.right, doc.left, doc);\r\n      return true;\r\n    } else {\r\n      self.__sendDocumentToReusePile(doc);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  def.clear = function() {var self = this;\r\n    self.__leftRights = {};\r\n    self.__rightLefts = {};\r\n    self.__docsForReuse = [];\r\n  };\r\n  \r\n  def.__updateOneRegisterWithDocument = function(register, key, id, doc)  {var self = this;\r\n    var entry = register[key];\r\n    if (entry === undefined) {\r\n      var docs = {};\r\n      docs[id] = doc;\r\n      register[key] = {docs: docs, items: []};\r\n    } else {\r\n      if (entry.docs[id]) {\r\n        return false;\r\n      }\r\n      entry.docs[id] = doc;\r\n    }\r\n    return true;\r\n  };\r\n  \r\n  def.getLeftRights = function (leftItem)  {var self = this;\r\n    return self.__getInitialisedEntry(self.__leftRights, leftItem._id).items;\r\n  };\r\n  \r\n  def.getRightLefts = function (rightItem)  {var self = this;\r\n    return self.__getInitialisedEntry(self.__rightLefts, rightItem._id).items;\r\n  };\r\n  \r\n  //TODO: assert they are of correct type?\r\n  def.addLink = function (leftItem, rightItem)    {var self = this;\r\n    if (self.isLinked(leftItem, rightItem)) {\r\n      return $q.when();\r\n    } else {\r\n      var deferred = $q.defer();\r\n      self.__writeLinkToDatabase(leftItem, rightItem).then(function(){\r\n        //will have gone through loadDocumentFromDb succesfully.\r\n        var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id),\r\n            rightEntry = self.__getInitialisedEntry(self.__rightLefts, rightItem._id);\r\n        util.addUnique(leftEntry.items, rightItem);\r\n        util.addUnique(rightEntry.items, leftItem);\r\n        deferred.resolve()\r\n      });\r\n      return deferred.promise; \r\n    };\r\n  };\r\n  \r\n  def.removeLink = function (leftItem, rightItem)    {var self = this;\r\n    var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id);\r\n    var rightEntry = self.__getInitialisedEntry(self.__rightLefts, rightItem._id);\r\n    var doc1 = self.__removeFromEntry(leftEntry, rightItem);\r\n    var doc2 = self.__removeFromEntry(rightEntry, leftItem);\r\n    if (doc1 !== doc2) {\r\n      throw \"This is strange...\"\r\n    }\r\n    return self.__db.remove(doc1);\r\n  };\r\n  \r\n  def.__removeFromEntry = function(entry, item)  {var self = this;\r\n    var doc = entry.docs[item._id];\r\n    util.removeFromArray(entry.items, item);\r\n    delete entry.docs[item._id];\r\n    return doc;\r\n  }\r\n   \r\n  def.isLinked = function (leftItem, rightItem)  {var self = this;\r\n    var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id);\r\n    return util.arrayContains(leftEntry.items, rightItem);\r\n  };\r\n  \r\n  def.respondToItemDeleted = function (item, collection)     {var self = this;\r\n    var opposites, itemIsFromRight;\r\n    if (collection === self.__rightCollection) {\r\n      itemIsFromRight = true;\r\n      opposites = self.getRightLefts(item);\r\n    } else if (collection === self.__leftCollection) {\r\n      itemIsFromRight = false;\r\n      opposites = self.getLeftRights(item);\r\n    }\r\n    opposites = opposites.slice();\r\n    var operations = [];\r\n    angular.forEach(opposites, function(oppositeItem) {\r\n      if (itemIsFromRight) {\r\n        var leftItem = oppositeItem;\r\n        var rightItem = item;\r\n      } else {\r\n        var leftItem = item;\r\n        var rightItem = oppositeItem;\r\n      }\r\n      operations.push(self.removeLink(leftItem, rightItem));\r\n    });\r\n    return $q.all(operations);\r\n  };\r\n  \r\n  /*\r\n  Should only be called if sure that items are not linked. Will reuse a document if one is available.\r\n  */\r\n  def.__writeLinkToDatabase = function(leftItem, rightItem)  {var self = this;\r\n    var deferred = $q.defer(),\r\n        doc = self.__docsForReuse.pop();\r\n    function finish(succesfullyLoaded) {\r\n      if (succesfullyLoaded) {\r\n        deferred.resolve();\r\n      } else {\r\n        throw 'ManyToManyRelationship.__writeLinkToDatabase failed to load document. This should not have happened.'\r\n      }\r\n    }\r\n    if (doc) {\r\n      doc.left = leftItem._id;\r\n      doc.right = rightItem._id;\r\n      self.__db.put(doc).then(function (result) {\r\n        doc._rev = result.rev;\r\n        finish(self.loadDocumentFromDb(doc));        \r\n      });\r\n    } else {\r\n      doc = {left: leftItem._id, right:rightItem._id, type:self.dbDocumentType};\r\n      self.__postAndLoad(doc).then(function (result) {\r\n        finish(result);\r\n      });\r\n    }\r\n    return deferred.promise;\r\n  };\r\n  \r\n  def.__sendDocumentToReusePile = function(doc)  {var self = this;\r\n    self.__docsForReuse.push(doc);\r\n  };\r\n  \r\n  def.__getInitialisedEntry = function (register, id)  {var self = this;\r\n    var entry = register[id];\r\n    if (entry === undefined) {\r\n      entry = {docs: {}, items: []};\r\n      register[id] = entry;\r\n    } else {\r\n      if (entry.items.length !== Object.keys(entry.docs).length) {\r\n        var collection = (register === self.__leftRights)? self.__rightCollection : self.__leftCollection; \r\n        entry.items.length = 0;\r\n        angular.forEach(entry.docs, function(doc, id) {\r\n          //TODO: what if item doesn't exist?\r\n          var item = collection.getItem(id);\r\n          if (item) {\r\n            entry.items.push(item);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return entry;\r\n  };\r\n  \r\n  return ManyToManyRelationship;\r\n});","\r\nangular.module('SneakerJS').factory('ParentChildRelationship', function($q, BaseContainer, util) {\r\n\r\n  var ParentChildRelationship = function(db, parentCollection, childCollection, options)    {var self = this;\r\n    var options = options || {};\r\n    self.__db = db;\r\n    self.__parentCollection = parentCollection;\r\n    self.__childCollection = childCollection;\r\n    self.__childAlias = options.childAlias || childCollection.plural;\r\n    self.__parentAlias = options.parentAlias || parentCollection.itemName;\r\n    self.__cascadeDelete = (options.cascadeDelete === undefined)? true : options.cascadeDelete;\r\n    self.__itemParent = {};\r\n    self.__itemChildren = {};\r\n    self.name = 'relationship_' + childCollection.itemName + '_as_' + self.__childAlias + '_' +\r\n          parentCollection.itemName + '_as_' + self.__parentAlias;\r\n    self.foreignKey = 'fk__' + self.__parentAlias;\r\n    parentCollection.registerChildRelationship(self);\r\n    childCollection.registerParentRelationship(self, self.foreignKey, self.__parentAlias);\r\n  };\r\n  util.inheritPrototype(ParentChildRelationship, BaseContainer);\r\n  var def = ParentChildRelationship.prototype;\r\n\r\n  def.getAccessFunctionDefinitions = function()  {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        childName = capitalize(self.__childCollection.itemName),\r\n        childAlias = capitalize(self.__childAlias),\r\n        parentName = capitalize(self.__parentCollection.itemName),\r\n        parentAlias = capitalize(self.__parentAlias);\r\n    return [\r\n      buildFunc('get' + childName + parentAlias, self.getParent, false),\r\n      buildFunc('get' + parentName + childAlias, self.getChildren, false),\r\n      buildFunc('set' + childName + parentAlias, self.setChildParent, true),\r\n    ];\r\n  };\r\n\r\n  def.postInitialLoading = function()  {var self = this;\r\n    var key = self.foreignKey;\r\n    angular.forEach(self.__parentCollection.__items, function(parentItem) {\r\n      self.__itemChildren[parentItem._id] = [];\r\n    });\r\n    angular.forEach(self.__childCollection.__items, function(childItem) {\r\n      var parentId = childItem[key];\r\n      if (parentId) {\r\n        var parentItem = self.__parentCollection.getItem(parentId);\r\n        self.linkNewlyLoadedChildToParent(childItem, parentItem, parentId);\r\n      }\r\n    });\r\n  };\r\n  \r\n  def.clear = function() {var self = this;\r\n    self.__itemParent = {};\r\n    self.__itemChildren = {};\r\n  };\r\n  \r\n  def.linkNewlyLoadedChildToParent = function(childItem, parentItem, parentId)    {var self = this;\r\n    var parentId = parentId || parentItem._id;\r\n    self.__itemParent[childItem._id] = parentItem;\r\n    var parentChildren = self.__itemChildren[parentId];\r\n    if (parentChildren === undefined) {\r\n      self.__itemChildren[parentId] = [childItem];\r\n    } else {\r\n      parentChildren.push(childItem);\r\n    }\r\n  };\r\n\r\n  def.getParent = function (childItem)    {var self = this;\r\n    return self.__itemParent[childItem._id] || null;\r\n  };\r\n\r\n  def.getChildren = function (parentItem)    {var self = this;\r\n    return self.__itemChildren[parentItem._id] || [];\r\n  };\r\n\r\n  def.setChildParent = function (childItem, parentItem)    {var self = this;\r\n    //TODO: assert they are of correct type?\r\n    var oldParent = self.__itemParent[childItem._id];\r\n    var parentItemId = parentItem? parentItem._id : null;\r\n    if (oldParent) {\r\n      util.removeFromArray(self.__itemChildren[oldParent._id], childItem);\r\n    }\r\n    if (parentItem) {\r\n      if (self.__itemChildren[parentItem._id] === undefined) {\r\n        self.__itemChildren[parentItem._id] = [childItem];\r\n      } else {\r\n        self.__itemChildren[parentItem._id].push(childItem);\r\n      }\r\n    }\r\n    self.__itemParent[childItem._id] = parentItem;\r\n    childItem[self.foreignKey] = parentItemId;\r\n    return self.__childCollection.saveItem(childItem);\r\n  };\r\n\r\n  def.respondToItemDeleted = function (item, collection)     {var self = this;\r\n    if (collection === self.__parentCollection) {\r\n      return self.__respondToParentDeleted(item);\r\n    } else if (collection === self.__childCollection) {\r\n      return self.__respondToChildDeleted(item);\r\n    }\r\n  };\r\n\r\n  def.__respondToParentDeleted = function (parentItem)     {var self = this;\r\n    var action = (self.__cascadeDelete)?\r\n        function(childItem) {return self.__childCollection.deleteItem(childItem)} :\r\n        function(childItem) {return self.setChildParent(childItem, null)};\r\n    var children = self.getChildren(parentItem).slice(); //slice() is imortant!\r\n    return $q.all(children.map(action)).then(function() {\r\n      delete self.__itemChildren[parentItem._id];\r\n      return $q.when(true);\r\n    }, util.promiseFailed);\r\n  };\r\n\r\n  def.__respondToChildDeleted = function (childItem)     {var self = this;\r\n    var parentItem = self.getParent(childItem);\r\n    if (parentItem) {\r\n      util.removeFromArray(self.__itemChildren[parentItem._id], childItem);\r\n    }\r\n    delete self.__itemParent[childItem._id];\r\n    return $q.when(true);\r\n  };\r\n\r\n  return ParentChildRelationship;\r\n});\r\n","\r\n\r\n\r\nangular.module('SneakerJS').service('util', function($q) {\r\n  var self = this;\r\n\r\n  self.capitalizeFirstLetter = function(str) {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  };\r\n\r\n  self.createAccessFunctionDefinition = function(name, fn, queuedPromise) {\r\n    return {\r\n      ModelFunctionName: name,\r\n      containerFunction: fn,\r\n      queuedPromise: queuedPromise\r\n    }\r\n  };\r\n\r\n  self.arrayContains = function(myArray, item) {\r\n    for (var i = 0, len = myArray.length; i < len; i++) {\r\n      if (item === myArray[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  self.addUnique = function(myArray, item) {\r\n    if(!self.arrayContains(myArray, item)){\r\n      myArray.push(item);\r\n    }\r\n  }\r\n\r\n  self.addAsItem = function(object, key, item) {\r\n    //Where object[key] = [items...]\r\n    if (object[key] === undefined) {\r\n      object[key] = [item];\r\n    } else {\r\n      object[key].push(item);\r\n    }\r\n  };\r\n\r\n  self.removeFromArray = function(myArray, item) {\r\n    var index = myArray.indexOf(item);\r\n    if (index > -1) {\r\n      myArray.splice(index, 1);\r\n    }\r\n  };\r\n\r\n  self.filterIndex = function(index, test) {\r\n    //accepts an object like array.\r\n    var filteredItems = [];\r\n    angular.forEach(index, function(item) {\r\n      if (test(item)) {\r\n        filteredItems.push(item);\r\n      }\r\n    });\r\n    return filteredItems;\r\n  };\r\n\r\n  self.inheritPrototype = function(Child, Parent) {\r\n    var childProto = Child.prototype;\r\n    var parentProto = Parent.prototype;\r\n    for (var prop in parentProto) {\r\n      if (typeof parentProto[prop] == 'function') {\r\n        childProto[prop] = parentProto[prop];\r\n      }\r\n    }\r\n  };\r\n\r\n  self.copyFields = function(source, target, fields) {\r\n    angular.forEach(fields, function(field) {\r\n      target[field] = source[field];\r\n    });\r\n  };\r\n\r\n  self.promiseFailed = function(error) {\r\n    console.log('Promise failed!');\r\n    console.log(error);\r\n  }\r\n\r\n});\r\n"],"sourceRoot":"/source/"}