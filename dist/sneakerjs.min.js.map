{"version":3,"sources":["model.js","BaseContainer.js","Collection.js","ManyToManyRelationship.js","ParentChildRelationship.js","Singleton.js","util.js"],"names":["angular","module","service","$q","Collection","Singleton","ParentChildRelationship","ManyToManyRelationship","__registerContainer","container","name","undefined","__containers","__registerDocumentTypeLoader","__createAccessFunctions","forEach","getAccessFunctionDefinitions","accessFunc","func","fnName","ModelFunctionName","queuedPromise","__getQueuedFunction","containerFunction","__getNonQueuedFunction","self","apply","arguments","originalArgs","deferred","defer","__lastPromiseInQueue","then","result","resolve","promise","dbDocumentType","__dbDocumentTypeLoaders","__initializeModel","__loadQuery","rows","row","__addDocumentToCollection","doc","__postInitialLoading","err","console","log","document","type","loadDocumentFromDb","_id","postInitialLoading","__db","this","when","initialize","db","query","allDocs","include_docs","attachments","__dataReady","dataReady","reload","clear","printInfo","collection","singleItemName","fieldNames","options","singleton","data","join","firstCollection","secondCollection","relationshipType","parentCollection","childCollection","toLowerCase","leftCollection","rightCollection","saveItem","item","deleteItem","factory","BaseContainer","def","prototype","__postAndLoad","defered","post","ok","get","id","docFromDb","util","itemName","plural","__proto","proto","__items","__itemsAsArray","__parentRelationships","__relationships","__fieldNames","slice","__fullFieldNames","push","inheritPrototype","registerChildRelationship","relationship","registerParentRelationship","foreignKey","alias","registerManyToManyRelationship","newItem","copyFields","capitalize","capitalizeFirstLetter","buildFunc","createAccessFunctionDefinition","single","getItem","findItems","allItems","test","prop","filterIndex","relationshipsToLink","parentItem","linkNewlyLoadedChildToParent","put","_rev","rev","childDeletions","map","respondToItemDeleted","all","remove","removeFromArray","promiseFailed","__rightCollection","__leftCollection","defaultDbDocumentTypeName","__functionNameEnd","qualifier","__leftRights","__rightLefts","__docsForReuse","leftName","leftPlural","rightName","rightPlural","end","getLeftRightsFnName","getRightLeftsFnName","addLeftRightFnName","removeLeftRightFnName","isLeftLinkedToRightFnName","getLeftRights","getRightLefts","addLink","removeLink","isLinked","right","left","__updateOneRegisterWithDocument","__sendDocumentToReusePile","register","key","entry","docs","items","leftItem","__getInitialisedEntry","rightItem","__writeLinkToDatabase","leftEntry","rightEntry","addUnique","doc1","__removeFromEntry","doc2","arrayContains","opposites","itemIsFromRight","operations","oppositeItem","finish","succesfullyLoaded","pop","length","Object","keys","__parentCollection","__childCollection","__childAlias","childAlias","__parentAlias","parentAlias","__cascadeDelete","cascadeDelete","__itemParent","__itemChildren","childName","parentName","getParent","getChildren","setChildParent","childItem","parentId","parentChildren","oldParent","parentItemId","__respondToParentDeleted","__respondToChildDeleted","action","children","__doc","getData","setData","copy","str","charAt","toUpperCase","fn","myArray","i","len","addAsItem","object","index","indexOf","splice","filteredItems","Child","Parent","childProto","parentProto","source","target","fields","field","error"],"mappings":"AAAAA,QAAQC,OAAO,gBAEfD,QAAQC,OAAO,aAAaC,QAAQ,SAAA,KAAA,aAAA,YAAA,0BAAA,yBAAS,SAASC,EAAIC,EAAYC,EAAWC,EAAyBC,GAkFxG,QAASC,GAAoBC,GAC3B,GAAIC,GAAOD,EAAUC,IACrB,IAA2BC,SAAvBC,EAAaF,GACf,KAAM,0CAA4CA,EAAO,kCAE3DE,GAAaF,GAAQD,EACrBI,EAA6BJ,GAC7BK,EAAwBL,GAkC1B,QAASK,GAAwBL,GAC/BT,QAAQe,QAAQN,EAAUO,+BAAgC,SAASC,GACjE,GAAIC,GAAMC,EAASF,EAAWG,iBAM9B,IAJEF,EADED,EAAWI,cACNC,EAAoBb,EAAWQ,EAAWM,mBAE1CC,EAAuBf,EAAWQ,EAAWM,mBAEjCZ,SAAjBc,EAAKN,GACP,KAAM,aAAeV,EAAUC,KAAO,8BAAgCS,EAAS,kCAEjFM,GAAKN,GAAUD,IAInB,QAASM,GAAuBf,EAAWc,GACzC,MAAO,YACL,MAAOA,GAAkBG,MAAMjB,EAAWkB,YAI9C,QAASL,GAAoBb,EAAWc,GACtC,MAAO,YACL,GAAIK,GAAeD,UACfE,EAAW1B,EAAG2B,OAOlB,OANAC,GAAqBC,KAAM,WACzBD,EAAuBR,EAAkBG,MAAMjB,EAAWmB,GAC1DG,EAAqBC,KAAK,SAASC,GACjCJ,EAASK,QAAQD,OAGdJ,EAASM,SAMpB,QAAStB,GAA6BJ,GAIpC,GAAI2B,GAAiB3B,EAAU2B,cAC/B,IAAuBzB,SAAnByB,EAA8B,CAChC,GAAIA,IAAkBC,GAAyB,CAC7BA,EAAwBD,EACxC,MAAM,2EAA6EA,EAAiB,KAEpGC,EAAwBD,GAAkB3B,GAKhD,QAAS6B,KACP,MAAOC,KAAcP,KAAK,SAAUC,GAClCjC,QAAQe,QAAQkB,EAAOO,KAAM,SAASC,GACpCC,EAA0BD,EAAIE,OAEhCC,MAJKL,SAKE,SAAUM,GACjBC,QAAQC,IAAIF,KAIhB,QAASH,GAA0BM,GACjC,GAAIZ,GAAiBY,EAASC,IAC9B,IAAIb,EAAgB,CAClB,GAAI3B,GAAY4B,EAAwBD,EACpC3B,GACFA,EAAUyC,mBAAmBF,EAAUZ,IAEvCU,QAAQC,IAAIC,GACZF,QAAQC,IAAI,4BAA+BC,EAASG,IAAM,iCAAoCf,EAAiB,UAGjHU,SAAQC,IAAI,4BAA+BC,EAASG,IAAM,gCAI9D,QAASP,KACP5C,QAAQe,QAAQH,EAAc,SAASH,GACrCA,EAAU2C,uBAzMd,GACIC,GACAd,EAFAd,EAAO6B,KAGP1C,KACAyB,KACAN,EAAuB5B,EAAGoD,MAG9B9B,GAAK+B,WAAa,SAASC,EAAIC,GAC7BL,EAAOI,EACPlB,EAAcmB,GAAS,WACrB,MAAOL,GAAKM,SACVC,cAAc,EACdC,aAAa,KAKnB,IAAIC,EACJrC,GAAKsC,UAAY,WAIf,MAHoBpD,UAAhBmD,IACFA,EAAcxB,KAETwB,GAGTrC,EAAKuC,OAAS,WAKZ,MAJAF,GAAcnD,OACdX,QAAQe,QAAQH,EAAc,SAASH,GACrCA,EAAUwD,UAELxC,EAAKsC,aAGdtC,EAAKyC,UAAY,WACflE,QAAQe,QAAQH,EAAc,SAASH,GACrCT,QAAQe,QAAQN,EAAUO,+BAAgC,SAASC,GACjE6B,QAAQC,IAAI,SAAW9B,EAAWG,wBAOxCK,EAAK0C,WAAa,SAASC,EAAgBC,EAAYC,GACrD,GAAI7D,GAAY,GAAIL,GAAWiD,EAAMe,EAAgBC,EAAYC,EAEjE,OADA9D,GAAoBC,GACbA,GAGTgB,EAAK8C,UAAY,SAAS7D,EAAM8D,GAC9B,GAAI/D,GAAY,GAAIJ,GAAUgD,EAAM3C,EAAM8D,EAE1C,OADAhE,GAAoBC,GACbA,GAGTgB,EAAKgD,KAAO,SAASC,EAAiBC,EAAkBL,GACtD,GACI7D,GADA6D,EAAUA,MAEVM,EAAmBN,EAAQrB,MAAQ,aAMvC,IALAjD,QAAQe,SAAS2D,EAAiBC,GAAmB,SAASjE,GAC5D,GAA2BC,SAAvBC,EAAaF,GACf,KAAM,gDAAkDA,EAAO,OAG1C,gBAArBkE,EAAoC,CACtC,GAAIC,GAAmBjE,EAAa8D,GAChCI,EAAkBlE,EAAa+D,EACnClE,GAAY,GAAIH,GAAwB+C,EAAMwB,EAAkBC,EAAiBR,OAC5E,CAAA,GAAuC,iBAAnCM,EAAiBG,cAK1B,KAAM,IAAMH,EAAmB,oCAJ/B,IAAII,GAAiBpE,EAAa8D,GAC9BO,EAAkBrE,EAAa+D,EACnClE,GAAY,GAAIF,GAAuB8C,EAAM2B,EAAgBC,EAAiBX,GAKhF,MADA9D,GAAoBC,GACbA,GAoCTgB,EAAKyD,SAAW,SAASC,GACvB,MAAOvE,GAAauE,EAAKlC,MAAMiC,SAASC,IAG1C1D,EAAK2D,WAAa,SAASD,GACzB,MAAOvE,GAAauE,EAAKlC,MAAMmC,WAAWD,OCzH9CnF,QAAQC,OAAO,aAAaoF,QAAQ,iBAAA,KAAiB,SAASlF,GAK5D,GAAImF,GAAgB,WAAe,GAAI7D,GAAO6B,IAC5C7B,GAAK4B,KAAO,MAEVkC,EAAMD,EAAcE,SAyBxB,OAvBAD,GAAInC,mBAAqB,aAIzBmC,EAAItB,MAAQ,aAIZsB,EAAIE,cAAgB,SAAS9C,GAAO,GAAIlB,GAAO6B,KACzCoC,EAAUvF,EAAG2B,OAWjB,OAVAL,GAAK4B,KAAKsC,KAAKhD,GAAKX,KAAM,SAAUC,GAClC,IAAIA,EAAO2D,GAMT,KADA9C,SAAQC,IAAId,GACN,qBALNR,GAAK4B,KAAKwC,IAAI5D,EAAO6D,IAAI9D,KAAM,SAAU+D,GACvCL,EAAQxD,QAAQT,EAAKyB,mBAAmB6C,QAOvCL,EAAQvD,SAGVmD,KCjCTtF,QAAQC,OAAO,aAAaoF,QAAQ,cAAA,OAAA,KAAA,gBAAc,SAASW,EAAM7F,EAAImF,GAEnE,GAAIlF,GAAa,SAASqD,EAAIW,EAAgBC,EAAYC,GAAa,GAAI7C,GAAO6B,KAC5EgB,EAAUA,KACd7C,GAAKwE,SAAW7B,EAChB3C,EAAKf,KAAO0D,EACZ3C,EAAKyE,OAAS5B,EAAQ4B,QAAU9B,EAAiB,IACjD3C,EAAKW,eAAiBkC,EAAQlC,gBAAkBgC,EAChD3C,EAAK4B,KAAOI,EACZhC,EAAK0E,QAAU7B,EAAQ8B,OAAS,aAChC3E,EAAK4E,WACL5E,EAAK6E,kBACL7E,EAAK8E,yBACL9E,EAAK+E,mBACL/E,EAAKgF,aAAepC,EAAWqC,QAC/BjF,EAAKkF,iBAAmBtC,EAAWqC,QACnCjF,EAAKkF,iBAAiBC,KAAK,OAC3BnF,EAAKkF,iBAAiBC,KAAK,QAE7BZ,GAAKa,iBAAiBzG,EAAYkF,EAClC,IAAIC,GAAMnF,EAAWoF,SAwHrB,OAtHAD,GAAIuB,0BAA4B,SAASC,GAAkB,GAAItF,GAAO6B,IACpE7B,GAAK+E,gBAAgBI,KAAKG,IAG5BxB,EAAIyB,2BAA6B,SAASD,EAAcE,EAAYC,GAAW,GAAIzF,GAAO6B,IACxF7B,GAAK8E,sBAAsBW,GAASH,EACpCtF,EAAK+E,gBAAgBI,KAAKG,GAC1BtF,EAAKkF,iBAAiBC,KAAKK,IAG7B1B,EAAI4B,+BAAiC,SAASJ,GAAkB,GAAItF,GAAO6B,IACzE7B,GAAK+E,gBAAgBI,KAAKG,IAG5BxB,EAAIrC,mBAAqB,SAASP,GAAS,GAAIlB,GAAO6B,KAChD8D,EAAU,GAAI3F,GAAK0E,OAKvB,OAJAH,GAAKqB,WAAW1E,EAAKyE,EAAS3F,EAAKkF,kBACnCS,EAAQnE,KAAOxB,EAAKwE,SACpBxE,EAAK4E,QAAQ1D,EAAIQ,KAAOiE,EACxB3F,EAAK6E,eAAeM,KAAKQ,GAClBA,GAGT7B,EAAItB,MAAQ,WAAY,GAAIxC,GAAO6B,IACjC7B,GAAK4E,WACL5E,EAAK6E,mBAGPf,EAAIvE,6BAA+B,WAAe,GAAIS,GAAO6B,KACvDgE,EAAatB,EAAKuB,sBAClBC,EAAYxB,EAAKyB,+BACjBC,EAASJ,EAAW7F,EAAKwE,UACzBC,EAASoB,EAAW7F,EAAKyE,OAC7B,QACEsB,EAAU,MAAQE,EAAQjG,EAAK2F,SAAS,GACxCI,EAAU,MAAQE,EAAQjG,EAAKkG,SAAS,GACxCH,EAAU,OAAStB,EAAQzE,EAAKmG,WAAW,GAC3CJ,EAAU,MAAQtB,EAAQzE,EAAKoG,UAAU,KAI7CtC,EAAIoC,QAAU,SAAS7B,GAAQ,GAAIrE,GAAO6B,IACxC,OAAO7B,GAAK4E,QAAQP,IAGtBP,EAAIsC,SAAW,WAAe,GAAIpG,GAAO6B,IACvC,OAAO7B,GAAK6E,gBAGdf,EAAIqC,UAAY,SAASlE,GAAW,GAQ9BoE,GARkCrG,EAAO6B,IAS7C,IAAqB,kBAAVI,GACToE,EAAOpE,MACF,CAAA,GAAqB,gBAAVA,GAUhB,KAAM,+DATNoE,GAAO,SAAS3C,GACd,IAAK4C,OAAQrE,GACX,GAAIyB,EAAK4C,QAAUrE,EAAMqE,MACvB,OAAO,CAGX,QAAO,GAKX,MAAO/B,GAAKgC,YAAYvG,EAAK4E,QAASyB,IAGxCvC,EAAI6B,QAAU,SAAS5C,GAAU,GAAI/C,GAAO6B,KACtCX,KACAsF,IACJjC,GAAKqB,WAAW7C,EAAM7B,EAAKlB,EAAKgF,cAChC9D,EAAIM,KAAOxB,EAAKW,cAChB,KAAK,GAAI8E,KAASzF,GAAK8E,sBAAuB,CAC5C,GAAI2B,GAAa1D,EAAK0C,GAClBD,EAAaxF,EAAK8E,sBAAsBW,GAAOD,UAC/CzC,GAAK0C,KACPvE,EAAIsE,GAAciB,EAAW/E,IAC7B8E,EAAoBf,GAASgB,GAGjC,MAAOzG,GAAKgE,cAAc9C,GAAKX,KAAK,SAAUoF,GAC5C,IAAK,GAAIF,KAASe,GAChBxG,EAAK8E,sBAAsBW,GAAOiB,6BAA6Bf,EAASc,EAE1E,OAAOd,MAIX7B,EAAIL,SAAW,SAASC,GAAU,GAAI1D,GAAO6B,KACvCX,IAGJ,OAFAqD,GAAKqB,WAAWlC,EAAMxC,EAAKlB,EAAKkF,kBAChChE,EAAIM,KAAOxB,EAAKW,eACTX,EAAK4B,KAAK+E,IAAIzF,GAAKX,KAAK,SAAUC,GAEvC,MADAkD,GAAKkD,KAAOpG,EAAOqG,IACZnD,EAAKkD,QAIhB9C,EAAIH,WAAa,SAASD,GAAU,GAAI1D,GAAO6B,KACzCiF,EAAiB9G,EAAK+E,gBAAgBgC,IAAI,SAASzB,GACrD,MAAOA,GAAa0B,qBAAqBtD,EAAM1D,IAEjD,OAAOtB,GAAGuI,IAAIH,GAAgBvG,KAAK,WACjCP,EAAK4B,KAAKsF,OAAOxD,GAAMnD,KAAK,SAAUC,SAC7BR,GAAK4E,QAAQlB,EAAKhC,KACzB6C,EAAK4C,gBAAgBnH,EAAK6E,eAAgBnB,IACzCa,EAAK6C,gBACP7C,EAAK6C,gBAGHzI,KC/HTJ,QAAQC,OAAO,aAAaoF,QAAQ,0BAAA,KAAA,gBAAA,OAA0B,SAASlF,EAAImF,EAAeU,GAExF,GAAIzF,GAAyB,SAASkD,EAAIuB,EAAgBC,EAAiBX,GAAa,GAAI7C,GAAO6B,KAC7FgB,EAAUA,KACd7C,GAAKqH,kBAAoB7D,EACzBxD,EAAKsH,iBAAmB/D,CACxB,IAAIgE,IAA6B,OAAShE,EAAeiB,SAAW,IAAMhB,EAAgBgB,UAAUlB,aACpGtD,GAAKwH,kBAAoB,GACrB3E,EAAQ4E,YACVzH,EAAKwH,kBAAoB,KAAOjD,EAAKuB,sBAAsBjD,EAAQ4E,WACnEF,GAA6B,OAAS1E,EAAQ4E,UAAUnE,eAE1DtD,EAAKW,eAAiBkC,EAAQlC,gBAAkB4G,EAChDvH,EAAKf,KAAOe,EAAKW,eACjBX,EAAK4B,KAAOI,EACZhC,EAAKsH,iBAAmB/D,EACxBvD,EAAKqH,kBAAoB7D,EACzBxD,EAAK0H,gBACL1H,EAAK2H,gBACL3H,EAAK4H,kBACLpE,EAAgBkC,+BAA+B1F,GAC/CuD,EAAemC,+BAA+B1F,GAEhDuE,GAAKa,iBAAiBtG,EAAwB+E,EAC9C,IAAIC,GAAMhF,EAAuBiF,SAuLjC,OArLAD,GAAIvE,6BAA+B,WAAa,GAAIS,GAAO6B,KACrDgE,EAAatB,EAAKuB,sBAClBC,EAAYxB,EAAKyB,+BACjB6B,EAAWhC,EAAW7F,EAAKsH,iBAAiB9C,UAC5CsD,EAAajC,EAAW7F,EAAKsH,iBAAiB7C,QAC9CsD,EAAYlC,EAAW7F,EAAKqH,kBAAkB7C,UAC9CwD,EAAcnC,EAAW7F,EAAKqH,kBAAkB5C,QAChDwD,EAAMjI,EAAKwH,kBACXU,EAAsB,MAAQL,EAAWG,EAAcC,EACvDE,EAAsB,MAAQJ,EAAYD,EAAaG,EACvDG,EAAqB,MAAQP,EAAWE,EAAYE,EACpDI,EAAwB,SAAWR,EAAWE,EAAYE,EAC1DK,EAA4B,KAAOT,EAAW,WAAaE,EAAYE,CAC3E,QACElC,EAAUmC,EAAqBlI,EAAKuI,eAAe,GACnDxC,EAAUoC,EAAqBnI,EAAKwI,eAAe,GACnDzC,EAAUqC,EAAoBpI,EAAKyI,SAAS,GAC5C1C,EAAUsC,EAAuBrI,EAAK0I,YAAY,GAClD3C,EAAUuC,EAA2BtI,EAAK2I,UAAU,KAIxD7E,EAAIrC,mBAAqB,SAASP,GAAO,GAAIlB,GAAO6B,IAClD,OAAIX,GAAI0H,OACJ1H,EAAI2H,MACJ7I,EAAK8I,gCAAgC9I,EAAK0H,aAAcxG,EAAI2H,KAAM3H,EAAI0H,MAAO1H,IAE/ElB,EAAK8I,gCAAgC9I,EAAK2H,aAAczG,EAAI0H,MAAO1H,EAAI2H,KAAM3H,IACtE,IAEPlB,EAAK+I,0BAA0B7H,IACxB,IAIX4C,EAAItB,MAAQ,WAAY,GAAIxC,GAAO6B,IACjC7B,GAAK0H,gBACL1H,EAAK2H,gBACL3H,EAAK4H,mBAGP9D,EAAIgF,gCAAkC,SAASE,EAAUC,EAAK5E,EAAInD,GAAO,GACnEgI,GAAQF,EAASC,EACrB,IAAc/J,SAAVgK,EAAqB,CACvB,GAAIC,KACJA,GAAK9E,GAAMnD,EACX8H,EAASC,IAAQE,KAAMA,EAAMC,cACxB,CACL,GAAIF,EAAMC,KAAK9E,GACb,OAAO,CAET6E,GAAMC,KAAK9E,GAAMnD,EAEnB,OAAO,GAGT4C,EAAIyE,cAAgB,SAAUc,GAAY,GAAIrJ,GAAO6B,IACnD,OAAO7B,GAAKsJ,sBAAsBtJ,EAAK0H,aAAc2B,EAAS3H,KAAK0H,OAGrEtF,EAAI0E,cAAgB,SAAUe,GAAa,GAAIvJ,GAAO6B,IACpD,OAAO7B,GAAKsJ,sBAAsBtJ,EAAK2H,aAAc4B,EAAU7H,KAAK0H,OAItEtF,EAAI2E,QAAU,SAAUY,EAAUE,GAAe,GAAIvJ,GAAO6B,IAC1D,OAAI7B,GAAK2I,SAASU,EAAUE,GACnB7K,EAAGoD,OAEH9B,EAAKwJ,sBAAsBH,EAAUE,GAAWhJ,KAAK,WAE1D,GAAIkJ,GAAYzJ,EAAKsJ,sBAAsBtJ,EAAK0H,aAAc2B,EAAS3H,KACnEgI,EAAa1J,EAAKsJ,sBAAsBtJ,EAAK2H,aAAc4B,EAAU7H,IACzE6C,GAAKoF,UAAUF,EAAUL,MAAOG,GAChChF,EAAKoF,UAAUD,EAAWN,MAAOC,MAKvCvF,EAAI4E,WAAa,SAAUW,EAAUE,GAAe,GAAIvJ,GAAO6B,KACzD4H,EAAYzJ,EAAKsJ,sBAAsBtJ,EAAK0H,aAAc2B,EAAS3H,KACnEgI,EAAa1J,EAAKsJ,sBAAsBtJ,EAAK2H,aAAc4B,EAAU7H,KACrEkI,EAAO5J,EAAK6J,kBAAkBJ,EAAWF,GACzCO,EAAO9J,EAAK6J,kBAAkBH,EAAYL,EAC9C,IAAIO,IAASE,EACX,KAAM,oBAER,OAAO9J,GAAK4B,KAAKsF,OAAO0C,IAG1B9F,EAAI+F,kBAAoB,SAASX,EAAOxF,GAAQ,GAC1CxC,GAAMgI,EAAMC,KAAKzF,EAAKhC,IAG1B,OAFA6C,GAAK4C,gBAAgB+B,EAAME,MAAO1F,SAC3BwF,GAAMC,KAAKzF,EAAKhC,KAChBR,GAGT4C,EAAI6E,SAAW,SAAUU,EAAUE,GAAa,GAAIvJ,GAAO6B,KACrD4H,EAAYzJ,EAAKsJ,sBAAsBtJ,EAAK0H,aAAc2B,EAAS3H,IACvE,OAAO6C,GAAKwF,cAAcN,EAAUL,MAAOG,IAG7CzF,EAAIkD,qBAAuB,SAAUtD,EAAMhB,GAAiB,GACtDsH,GAAWC,EAD+CjK,EAAO6B,IAEjEa,KAAe1C,EAAKqH,mBACtB4C,GAAkB,EAClBD,EAAYhK,EAAKwI,cAAc9E,IACtBhB,IAAe1C,EAAKsH,mBAC7B2C,GAAkB,EAClBD,EAAYhK,EAAKuI,cAAc7E,IAEjCsG,EAAYA,EAAU/E,OACtB,IAAIiF,KAWJ,OAVA3L,SAAQe,QAAQ0K,EAAW,SAASG,GAClC,GAAIF,EACF,GAAIZ,GAAWc,EACXZ,EAAY7F,MAEhB,IAAI2F,GAAW3F,EACX6F,EAAYY,CAElBD,GAAW/E,KAAKnF,EAAK0I,WAAWW,EAAUE,MAErC7K,EAAGuI,IAAIiD,IAOhBpG,EAAI0F,sBAAwB,SAASH,EAAUE,GAG7C,QAASa,GAAOC,GACd,IAAIA,EAGF,KAAM,sGAFNjK,GAASK,UAL6C,GAAIT,GAAO6B,KACjEzB,EAAW1B,EAAG2B,QACda,EAAMlB,EAAK4H,eAAe0C,KAqB9B,OAbIpJ,IACFA,EAAI2H,KAAOQ,EAAS3H,IACpBR,EAAI0H,MAAQW,EAAU7H,IACtB1B,EAAK4B,KAAK+E,IAAIzF,GAAKX,KAAK,SAAUC,GAChCU,EAAI0F,KAAOpG,EAAOqG,IAClBuD,EAAOpK,EAAKyB,mBAAmBP,QAGjCA,GAAO2H,KAAMQ,EAAS3H,IAAKkH,MAAMW,EAAU7H,IAAKF,KAAKxB,EAAKW,gBAC1DX,EAAKgE,cAAc9C,GAAKX,KAAK,SAAUC,GACrC4J,EAAO5J,MAGJJ,EAASM,SAGlBoD,EAAIiF,0BAA4B,SAAS7H,GAAO,GAAIlB,GAAO6B,IACzD7B,GAAK4H,eAAezC,KAAKjE,IAG3B4C,EAAIwF,sBAAwB,SAAUN,EAAU3E,GAAM,GAAIrE,GAAO6B,KAC3DqH,EAAQF,EAAS3E,EACrB,IAAcnF,SAAVgK,EACFA,GAASC,QAAUC,UACnBJ,EAAS3E,GAAM6E,MAEf,IAAIA,EAAME,MAAMmB,SAAWC,OAAOC,KAAKvB,EAAMC,MAAMoB,OAAQ,CACzD,GAAI7H,GAAcsG,IAAahJ,EAAK0H,aAAe1H,EAAKqH,kBAAoBrH,EAAKsH,gBACjF4B,GAAME,MAAMmB,OAAS,EACrBhM,QAAQe,QAAQ4J,EAAMC,KAAM,SAASjI,EAAKmD,GAExC,GAAIX,GAAOhB,EAAWwD,QAAQ7B,EAC1BX,IACFwF,EAAME,MAAMjE,KAAKzB,KAKzB,MAAOwF,IAGFpK,KC5NTP,QAAQC,OAAO,aAAaoF,QAAQ,2BAAA,KAAA,gBAAA,OAA2B,SAASlF,EAAImF,EAAeU,GAEzF,GAAI1F,GAA0B,SAASmD,EAAIoB,EAAkBC,EAAiBR,GAAa,GAAI7C,GAAO6B,KAChGgB,EAAUA,KACd7C,GAAK4B,KAAOI,EACZhC,EAAK0K,mBAAqBtH,EAC1BpD,EAAK2K,kBAAoBtH,EACzBrD,EAAK4K,aAAe/H,EAAQgI,YAAcxH,EAAgBoB,OAC1DzE,EAAK8K,cAAgBjI,EAAQkI,aAAe3H,EAAiBoB,SAC7DxE,EAAKgL,gBAA6C9L,SAA1B2D,EAAQoI,eAA8B,EAAOpI,EAAQoI,cAC7EjL,EAAKkL,gBACLlL,EAAKmL,kBACLnL,EAAKf,KAAO,gBAAkBoE,EAAgBmB,SAAW,OAASxE,EAAK4K,aAAe,IAChFxH,EAAiBoB,SAAW,OAASxE,EAAK8K,cAChD9K,EAAKwF,WAAa,OAASxF,EAAK8K,cAChC1H,EAAiBiC,0BAA0BrF,GAC3CqD,EAAgBkC,2BAA2BvF,EAAMA,EAAKwF,WAAYxF,EAAK8K,eAEzEvG,GAAKa,iBAAiBvG,EAAyBgF,EAC/C,IAAIC,GAAMjF,EAAwBkF,SAqGlC,OAnGAD,GAAIvE,6BAA+B,WAAa,GAAIS,GAAO6B,KACrDgE,EAAatB,EAAKuB,sBAClBC,EAAYxB,EAAKyB,+BACjBoF,EAAYvF,EAAW7F,EAAK2K,kBAAkBnG,UAC9CqG,EAAahF,EAAW7F,EAAK4K,cAC7BS,EAAaxF,EAAW7F,EAAK0K,mBAAmBlG,UAChDuG,EAAclF,EAAW7F,EAAK8K,cAClC,QACE/E,EAAU,MAAQqF,EAAYL,EAAa/K,EAAKsL,WAAW,GAC3DvF,EAAU,MAAQsF,EAAaR,EAAY7K,EAAKuL,aAAa,GAC7DxF,EAAU,MAAQqF,EAAYL,EAAa/K,EAAKwL,gBAAgB,KAIpE1H,EAAInC,mBAAqB,WAAa,GAAI3B,GAAO6B,KAC3CoH,EAAMjJ,EAAKwF,UACfjH,SAAQe,QAAQU,EAAK0K,mBAAmB9F,QAAS,SAAS6B,GACxDzG,EAAKmL,eAAe1E,EAAW/E,UAEjCnD,QAAQe,QAAQU,EAAK2K,kBAAkB/F,QAAS,SAAS6G,GACvD,GAAIC,GAAWD,EAAUxC,EACzB,IAAIyC,EAAU,CACZ,GAAIjF,GAAazG,EAAK0K,mBAAmBxE,QAAQwF,EACjD1L,GAAK0G,6BAA6B+E,EAAWhF,EAAYiF,OAK/D5H,EAAItB,MAAQ,WAAY,GAAIxC,GAAO6B,IACjC7B,GAAKkL,gBACLlL,EAAKmL,mBAGPrH,EAAI4C,6BAA+B,SAAS+E,EAAWhF,EAAYiF,GAAc,GAAI1L,GAAO6B,KACtF6J,EAAWA,GAAYjF,EAAW/E,GACtC1B,GAAKkL,aAAaO,EAAU/J,KAAO+E,CACnC,IAAIkF,GAAiB3L,EAAKmL,eAAeO,EAClBxM,UAAnByM,EACF3L,EAAKmL,eAAeO,IAAaD,GAEjCE,EAAexG,KAAKsG,IAIxB3H,EAAIwH,UAAY,SAAUG,GAAe,GAAIzL,GAAO6B,IAClD,OAAO7B,GAAKkL,aAAaO,EAAU/J,MAAQ,MAG7CoC,EAAIyH,YAAc,SAAU9E,GAAgB,GAAIzG,GAAO6B,IACrD,OAAO7B,GAAKmL,eAAe1E,EAAW/E,UAGxCoC,EAAI0H,eAAiB,SAAUC,EAAWhF,GAAgB,GAAIzG,GAAO6B,KAE/D+J,EAAY5L,EAAKkL,aAAaO,EAAU/J,KACxCmK,EAAepF,EAAYA,EAAW/E,IAAM,IAahD,OAZIkK,IACFrH,EAAK4C,gBAAgBnH,EAAKmL,eAAeS,EAAUlK,KAAM+J,GAEvDhF,IAC0CvH,SAAxCc,EAAKmL,eAAe1E,EAAW/E,KACjC1B,EAAKmL,eAAe1E,EAAW/E,MAAQ+J,GAEvCzL,EAAKmL,eAAe1E,EAAW/E,KAAKyD,KAAKsG,IAG7CzL,EAAKkL,aAAaO,EAAU/J,KAAO+E,EACnCgF,EAAUzL,EAAKwF,YAAcqG,EACtB7L,EAAK2K,kBAAkBlH,SAASgI,IAGzC3H,EAAIkD,qBAAuB,SAAUtD,EAAMhB,GAAiB,GAAI1C,GAAO6B,IACrE,OAAIa,KAAe1C,EAAK0K,mBACf1K,EAAK8L,yBAAyBpI,GAC5BhB,IAAe1C,EAAK2K,kBACtB3K,EAAK+L,wBAAwBrI,GAD/B,QAKTI,EAAIgI,yBAA2B,SAAUrF,GAAiB,GAAIzG,GAAO6B,KAC/DmK,EAAUhM,EAAK,gBACf,SAASyL,GAAY,MAAOzL,GAAK2K,kBAAkBhH,WAAW8H,IAC9D,SAASA,GAAY,MAAOzL,GAAKwL,eAAeC,EAAW,OAC3DQ,EAAWjM,EAAKuL,YAAY9E,GAAYxB,OAC5C,OAAOvG,GAAGuI,IAAIgF,EAASlF,IAAIiF,IAASzL,KAAK,WAEvC,aADOP,GAAKmL,eAAe1E,EAAW/E,KAC/BhD,EAAGoD,MAAK,IACdyC,EAAK6C,gBAGVtD,EAAIiI,wBAA0B,SAAUN,GAAgB,GAAIzL,GAAO6B,KAC7D4E,EAAazG,EAAKsL,UAAUG,EAKhC,OAJIhF,IACFlC,EAAK4C,gBAAgBnH,EAAKmL,eAAe1E,EAAW/E,KAAM+J,SAErDzL,GAAKkL,aAAaO,EAAU/J,KAC5BhD,EAAGoD,MAAK,IAGVjD,KCxHTN,QAAQC,OAAO,aAAaoF,QAAQ,aAAA,OAAA,gBAAa,SAASW,EAAMV,GAE9D,GAAIjF,GAAY,SAASoD,EAAI/C,GAAU,GAAIe,GAAO6B,IAChD7B,GAAKf,KAAOA,EACZe,EAAKW,eAAiB,cAAgB1B,EACtCe,EAAK4B,KAAOI,EACZhC,EAAKkM,MAAQ,KAEf3H,GAAKa,iBAAiBxG,EAAWiF,EACjC,IAAIC,GAAMlF,EAAUmF,SA2CpB,OAzCAD,GAAIrC,mBAAqB,SAASP,GAAS,GAAIlB,GAAO6B,IACpD,IAAmB,OAAf7B,EAAKkM,MACP,KAAM,2BAA6BlM,EAAKf,KAAO,uBAEjD,IAAIiC,EAAIQ,MAAQ1B,EAAKW,eACnB,KAAM,2BAA6BX,EAAKf,KAAO,iBAAmBe,EAAKW,cAGzE,OADAX,GAAKkM,MAAQhL,EACNlB,EAAKkM,MAAMnJ,MAGpBe,EAAItB,MAAQ,WAAY,GAAIxC,GAAO6B,IACjC7B,GAAKkM,MAAQ,MAGfpI,EAAIvE,6BAA+B,WAAe,GAAIS,GAAO6B,IAC3D,QACE0C,EAAKyB,+BAA+B,MAAQzB,EAAKuB,sBAAsB9F,EAAKf,MAAOe,EAAKmM,SAAS,GACjG5H,EAAKyB,+BAA+B,MAAQzB,EAAKuB,sBAAsB9F,EAAKf,MAAOe,EAAKoM,SAAS,KAIrGtI,EAAIqI,QAAU,WAAY,GAAInM,GAAO6B,IACnC,OAAQ7B,GAAK,MAAQA,EAAKkM,MAAMnJ,SAGlCe,EAAIsI,QAAU,SAASrJ,GAAO,GAAI/C,GAAO6B,IASvC,OARK7B,GAAKkM,QACRlM,EAAKkM,OACH1K,KAAMxB,EAAKW,eACXe,IAAK1B,EAAKW,eACVoC,UAGJxE,QAAQ8N,KAAKtJ,EAAM/C,EAAKkM,MAAMnJ,MACvB/C,EAAK4B,KAAK+E,IAAI3G,EAAKkM,OAAO3L,KAAK,SAAUC,GAE9C,MADAR,GAAKkM,MAAMtF,KAAOpG,EAAOqG,IAClBrG,EAAOqG,OAIXjI,KClDTL,QAAQC,OAAO,aAAaC,QAAQ,QAAA,KAAQ,SAASC,GACnD,GAAIsB,GAAO6B,IAEX7B,GAAK8F,sBAAwB,SAASwG,GACpC,MAAOA,GAAIC,OAAO,GAAGC,cAAgBF,EAAIrH,MAAM,IAGjDjF,EAAKgG,+BAAiC,SAAS/G,EAAMwN,EAAI7M,GACvD,OACED,kBAAmBV,EACnBa,kBAAmB2M,EACnB7M,cAAeA,IAInBI,EAAK+J,cAAgB,SAAS2C,EAAShJ,GACrC,IAAK,GAAIiJ,GAAI,EAAGC,EAAMF,EAAQnC,OAAYqC,EAAJD,EAASA,IAC7C,GAAIjJ,IAASgJ,EAAQC,GACnB,OAAO,CAGX,QAAO,GAGT3M,EAAK2J,UAAY,SAAS+C,EAAShJ,GAC7B1D,EAAK+J,cAAc2C,EAAShJ,IAC9BgJ,EAAQvH,KAAKzB,IAIjB1D,EAAK6M,UAAY,SAASC,EAAQ7D,EAAKvF,GAEjBxE,SAAhB4N,EAAO7D,GACT6D,EAAO7D,IAAQvF,GAEfoJ,EAAO7D,GAAK9D,KAAKzB,IAIrB1D,EAAKmH,gBAAkB,SAASuF,EAAShJ,GACvC,GAAIqJ,GAAQL,EAAQM,QAAQtJ,EACxBqJ,GAAQ,IACVL,EAAQO,OAAOF,EAAO,IAI1B/M,EAAKuG,YAAc,SAASwG,EAAO1G,GAEjC,GAAI6G,KAMJ,OALA3O,SAAQe,QAAQyN,EAAO,SAASrJ,GAC1B2C,EAAK3C,IACPwJ,EAAc/H,KAAKzB,KAGhBwJ,GAGTlN,EAAKoF,iBAAmB,SAAS+H,EAAOC,GACtC,GAAIC,GAAaF,EAAMpJ,UACnBuJ,EAAcF,EAAOrJ,SACzB,KAAK,GAAIuC,KAAQgH,GACiB,kBAArBA,GAAYhH,KACrB+G,EAAW/G,GAAQgH,EAAYhH,KAKrCtG,EAAK4F,WAAa,SAAS2H,EAAQC,EAAQC,GACzClP,QAAQe,QAAQmO,EAAQ,SAASC,GAC/BF,EAAOE,GAASH,EAAOG,MAI3B1N,EAAKoH,cAAgB,SAASuG,GAC5BtM,QAAQC,IAAI,mBACZD,QAAQC,IAAIqM","file":"sneakerjs.min.js","sourcesContent":["angular.module('SneakerJS', []);\r\n\r\nangular.module('SneakerJS').service('model', function($q, Collection, Singleton, ParentChildRelationship, ManyToManyRelationship) {\r\n\r\n  var self = this,\r\n      __db,\r\n      __loadQuery,\r\n      __containers = {},\r\n      __dbDocumentTypeLoaders = {},\r\n      __lastPromiseInQueue = $q.when(),\r\n      __relationshipDefinitionFunctions = {};\r\n\r\n  self.initialize = function(db, query) {\r\n    __db = db;\r\n    __loadQuery = query || function() {\r\n      return __db.allDocs({\r\n        include_docs: true,\r\n        attachments: false\r\n      });\r\n    }\r\n  };\r\n\r\n  var __dataReady;\r\n  self.dataReady = function (){\r\n    if (__dataReady === undefined) {\r\n      __dataReady = __initializeModel();\r\n    }\r\n    return __dataReady;\r\n  };\r\n  \r\n  self.reload = function (){\r\n    __dataReady = undefined;\r\n    angular.forEach(__containers, function(container) {\r\n      container.clear();\r\n    });\r\n    return self.dataReady();\r\n  };\r\n\r\n  self.printInfo = function (){\r\n    angular.forEach(__containers, function(container) {\r\n      angular.forEach(container.getAccessFunctionDefinitions(), function(accessFunc) {\r\n        console.log('model.' + accessFunc.ModelFunctionName);\r\n      });\r\n    });\r\n  };\r\n\r\n  /************* MODEL DEFINITION FUNCTIONS *************/\r\n\r\n  self.collection = function(singleItemName, fieldNames, options){\r\n    var container = new Collection(__db, singleItemName, fieldNames, options);\r\n    __registerContainer(container);\r\n    return container;\r\n  };\r\n  \r\n  self.singleton = function(name, data){\r\n    var container = new Singleton(__db, name, data);\r\n    __registerContainer(container);\r\n    return container;\r\n  };\r\n\r\n  self.join = function(firstCollection, secondCollection, options){\r\n    var options = options || {},\r\n        container,\r\n        relationshipType = options.type || 'parentChild';\r\n    angular.forEach([firstCollection, secondCollection], function(name) {\r\n      if (__containers[name] === undefined) {\r\n        throw 'Failed to create join, container not found: \"' + name + '\" ';\r\n      }\r\n    });\r\n    if (relationshipType === 'parentChild') {\r\n      var parentCollection = __containers[firstCollection];\r\n      var childCollection = __containers[secondCollection];\r\n      container = new ParentChildRelationship(__db, parentCollection, childCollection, options);\r\n    } else if (relationshipType.toLowerCase() === 'many-to-many') {\r\n      var leftCollection = __containers[firstCollection];\r\n      var rightCollection = __containers[secondCollection];\r\n      container = new ManyToManyRelationship(__db, leftCollection, rightCollection, options);\r\n    } else {\r\n      throw '\"' + relationshipType + '\" is not a valid relationship type';\r\n    }\r\n    __registerContainer(container);\r\n    return container;\r\n  };\r\n\r\n  function __registerContainer(container) {\r\n    var name = container.name;\r\n    if (__containers[name] !== undefined) {\r\n      throw 'Trying to create containers with name: ' + name + ' on model but it already exists.';\r\n    }\r\n    __containers[name] = container;\r\n    __registerDocumentTypeLoader(container);\r\n    __createAccessFunctions(container);\r\n  };\r\n\r\n  /************* COLLECTION ACCESS FUNCTIONALITY ************\r\n\r\n    __createAccessFunctions() creates methods like:\r\n\r\n      model.newTask({})\r\n      model.getProjectTasks(project)\r\n\r\n    Query functions (getX, findX) return directly. Data changing functions (all other prefixed) return promises.\r\n\r\n    Query data may be dirty while a promise is waiting to complete, so you need to do this:\r\n\r\n    model.newTask({}).then(function(){\r\n      angular.copy($scope.tasks, model.getProjectTasks($scope.project));\r\n    });\r\n\r\n    Data changing functions are queued internally, so you can do this.\r\n    model.newTask({});\r\n    model.newTask({});\r\n    model.newTask({}).then(function(){\r\n      angular.copy($scope.tasks, model.getProjectTasks($scope.project));\r\n    });\r\n\r\n  */\r\n  self.saveItem = function(item) {\r\n    return __containers[item.type].saveItem(item);\r\n  };\r\n\r\n  self.deleteItem = function(item) {\r\n    return __containers[item.type].deleteItem(item);\r\n  };\r\n\r\n  function __createAccessFunctions(container){\r\n    angular.forEach(container.getAccessFunctionDefinitions(), function(accessFunc) {\r\n      var func, fnName = accessFunc.ModelFunctionName;\r\n      if (accessFunc.queuedPromise) {\r\n        func = __getQueuedFunction(container, accessFunc.containerFunction);\r\n      } else {\r\n        func = __getNonQueuedFunction(container, accessFunc.containerFunction);\r\n      }\r\n      if (self[fnName] !== undefined) {\r\n        throw 'Container ' + container.name + ' trying to create function ' + fnName + ' on model but it already exists.';\r\n      }\r\n      self[fnName] = func;\r\n    });\r\n  };\r\n\r\n  function __getNonQueuedFunction(container, containerFunction){\r\n    return function() {\r\n      return containerFunction.apply(container, arguments);\r\n    }\r\n  };\r\n\r\n  function __getQueuedFunction(container, containerFunction){\r\n    return function() {\r\n      var originalArgs = arguments;\r\n      var deferred = $q.defer();\r\n      __lastPromiseInQueue.then( function() {\r\n        __lastPromiseInQueue = containerFunction.apply(container, originalArgs);\r\n        __lastPromiseInQueue.then(function(result) {\r\n          deferred.resolve(result);\r\n        });\r\n      });\r\n      return deferred.promise;\r\n    }\r\n  };\r\n\r\n  /************* INITIAL LOADING FUNCTIONALITY *************/\r\n\r\n  function __registerDocumentTypeLoader(container) {\r\n    /* If container has field 'dbDocumentType' then every document whose 'type' field matches that\r\n    will be passed to the container's loadDocumentFromDb() function at loading.\r\n    */\r\n    var dbDocumentType = container.dbDocumentType;\r\n    if (dbDocumentType !== undefined) {\r\n      if (dbDocumentType in __dbDocumentTypeLoaders) {\r\n        var claimedBy = __dbDocumentTypeLoaders[dbDocumentType];\r\n        throw 'More than one container attempting to register database document type: \"' + dbDocumentType + '\".';\r\n      } else {\r\n        __dbDocumentTypeLoaders[dbDocumentType] = container;\r\n      }\r\n    }\r\n  };\r\n\r\n  function __initializeModel(){\r\n    return __loadQuery().then(function (result) {\r\n      angular.forEach(result.rows, function(row){\r\n        __addDocumentToCollection(row.doc);\r\n      });\r\n      __postInitialLoading();\r\n    }).catch(function (err) {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  function __addDocumentToCollection(document){\r\n    var dbDocumentType = document.type;\r\n    if (dbDocumentType) {\r\n      var container = __dbDocumentTypeLoaders[dbDocumentType];\r\n      if (container) {\r\n        container.loadDocumentFromDb(document, dbDocumentType);\r\n      } else {\r\n        console.log(document);\r\n        console.log('Could not load document \\\"' + document._id + '\\\" as type was not recognised (' + dbDocumentType + ')');\r\n      }\r\n    } else {\r\n      console.log('Could not load document \\\"' + document._id + '\\\" as it has no \\\"type\\\" field.');\r\n    }\r\n  };\r\n\r\n  function __postInitialLoading() {\r\n    angular.forEach(__containers, function(container) {\r\n      container.postInitialLoading();\r\n    });\r\n  }\r\n\r\n});\r\n\r\n","\r\nangular.module('SneakerJS').factory('BaseContainer', function($q) {\r\n  /*\r\n  A collection has an internal index of the objects in the database.\r\n  What it uses as keys and values is up to the derived class.\r\n  */\r\n  var BaseContainer = function()    {var self = this;\r\n    self.__db = null;\r\n  };\r\n  var def = BaseContainer.prototype;\r\n  \r\n  def.postInitialLoading = function() {\r\n    //override if container needs to do any post loading operations\r\n  };\r\n  \r\n  def.clear = function() {\r\n    //must implement to clear items\r\n  }\r\n  \r\n  def.__postAndLoad = function(doc)  {var self = this;\r\n    var defered = $q.defer();\r\n    self.__db.post(doc).then( function (result) {\r\n      if (result.ok) {\r\n        self.__db.get(result.id).then( function (docFromDb) {\r\n          defered.resolve(self.loadDocumentFromDb(docFromDb));\r\n        });\r\n      } else {\r\n        console.log(result);\r\n        throw \"Error fetching data\";\r\n      }\r\n    });\r\n    return defered.promise;\r\n  };\r\n  \r\n  return BaseContainer;\r\n});","\r\nangular.module('SneakerJS').factory('Collection', function(util, $q, BaseContainer) {\r\n\r\n  var Collection = function(db, singleItemName, fieldNames, options)    {var self = this;\r\n    var options = options || {};\r\n    self.itemName = singleItemName;\r\n    self.name = singleItemName; //This is how a relationship references collection\r\n    self.plural = options.plural || singleItemName + 's'\r\n    self.dbDocumentType = options.dbDocumentType || singleItemName;\r\n    self.__db = db;\r\n    self.__proto = options.proto || function(){};\r\n    self.__items = {};\r\n    self.__itemsAsArray = [];\r\n    self.__parentRelationships = {};\r\n    self.__relationships = [];\r\n    self.__fieldNames = fieldNames.slice();\r\n    self.__fullFieldNames = fieldNames.slice();\r\n    self.__fullFieldNames.push('_id');\r\n    self.__fullFieldNames.push('_rev');\r\n  };\r\n  util.inheritPrototype(Collection, BaseContainer);\r\n  var def = Collection.prototype;\r\n\r\n  def.registerChildRelationship = function(relationship)    {var self = this;\r\n    self.__relationships.push(relationship);\r\n  };\r\n  \r\n  def.registerParentRelationship = function(relationship, foreignKey, alias)    {var self = this;\r\n    self.__parentRelationships[alias] = relationship;\r\n    self.__relationships.push(relationship);\r\n    self.__fullFieldNames.push(foreignKey);\r\n  };\r\n  \r\n  def.registerManyToManyRelationship = function(relationship)    {var self = this;\r\n    self.__relationships.push(relationship);\r\n  };\r\n\r\n  def.loadDocumentFromDb = function(doc)    {var self = this;\r\n    var newItem = new self.__proto();\r\n    util.copyFields(doc, newItem, self.__fullFieldNames);\r\n    newItem.type = self.itemName;\r\n    self.__items[doc._id] = newItem;\r\n    self.__itemsAsArray.push(newItem);\r\n    return newItem;\r\n  };\r\n  \r\n  def.clear = function() {var self = this;\r\n    self.__items = {};\r\n    self.__itemsAsArray = [];\r\n  };\r\n\r\n  def.getAccessFunctionDefinitions = function()    {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        single = capitalize(self.itemName),\r\n        plural = capitalize(self.plural);\r\n    return [\r\n      buildFunc('new' + single, self.newItem, true),\r\n      buildFunc('get' + single, self.getItem, false),\r\n      buildFunc('find' + plural, self.findItems, false),\r\n      buildFunc('all' + plural, self.allItems, false),\r\n    ]\r\n  };\r\n\r\n  def.getItem = function(id)    {var self = this;\r\n    return self.__items[id];\r\n  };\r\n\r\n  def.allItems = function()    {var self = this;\r\n    return self.__itemsAsArray;\r\n  };\r\n\r\n  def.findItems = function(query)    {var self = this;\r\n    /*\r\n    query can be:\r\n      a function returning true or false\r\n      an object like {name: 'deirdre'} -- which returns items whose properties match.\r\n      an empty object {} -- which returns all items.\r\n    TODO: what about parent properties?\r\n    */\r\n    var test;\r\n    if (typeof query === 'function') {\r\n      test = query;\r\n    } else if (typeof query === 'object') {\r\n      test = function(item) {\r\n        for (prop in query) {\r\n          if (item[prop] !== query[prop]) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n    } else {\r\n      throw 'Invalid argument for \"find\", must be an object or a function.';\r\n    }\r\n    return util.filterIndex(self.__items, test);\r\n  };\r\n\r\n  def.newItem = function(data)    {var self = this;\r\n    var doc = {};\r\n    var relationshipsToLink = {};\r\n    util.copyFields(data, doc, self.__fieldNames);\r\n    doc.type = self.dbDocumentType;\r\n    for (var alias in self.__parentRelationships) {\r\n      var parentItem = data[alias];\r\n      var foreignKey = self.__parentRelationships[alias].foreignKey;\r\n      if (data[alias]) {\r\n        doc[foreignKey] = parentItem._id;\r\n        relationshipsToLink[alias] = parentItem;\r\n      }\r\n    }\r\n    return self.__postAndLoad(doc).then(function (newItem) {\r\n      for (var alias in relationshipsToLink) { \r\n        self.__parentRelationships[alias].linkNewlyLoadedChildToParent(newItem, parentItem);\r\n      }\r\n      return newItem;\r\n    });\r\n  };\r\n\r\n  def.saveItem = function(item)    {var self = this;\r\n    var doc = {};\r\n    util.copyFields(item, doc, self.__fullFieldNames);\r\n    doc.type = self.dbDocumentType;\r\n    return self.__db.put(doc).then(function (result) {\r\n      item._rev = result.rev;\r\n      return item._rev;\r\n    });\r\n  };\r\n\r\n  def.deleteItem = function(item)    {var self = this;\r\n    var childDeletions = self.__relationships.map(function(relationship) {\r\n      return relationship.respondToItemDeleted(item, self);\r\n    });\r\n    return $q.all(childDeletions).then(function() {\r\n      self.__db.remove(item).then(function (result) {\r\n        delete self.__items[item._id];\r\n        util.removeFromArray(self.__itemsAsArray, item);\r\n      }, util.promiseFailed);\r\n    }, util.promiseFailed);\r\n  };\r\n\r\n  return Collection;\r\n});\r\n","    \r\n/*\r\n  Left and right may be absent from register.\r\n  Both registers will always be equal and complimentary:\r\n  {\r\n     p1: {items: [t6]}\r\n     p2: {items: [t4, t6]}\r\n  }\r\n  {\r\n     t6: {items: [p1, p2]},\r\n     t4: {items: [p2]},\r\n  }\r\n*/\r\n    \r\nangular.module('SneakerJS').factory('ManyToManyRelationship', function($q, BaseContainer, util) {\r\n  \r\n  var ManyToManyRelationship = function(db, leftCollection, rightCollection, options)    {var self = this;\r\n    var options = options || {};\r\n    self.__rightCollection = rightCollection;\r\n    self.__leftCollection = leftCollection;\r\n    var defaultDbDocumentTypeName = ('lnk_' + leftCollection.itemName + '_' + rightCollection.itemName).toLowerCase();\r\n    self.__functionNameEnd = '';\r\n    if (options.qualifier) {\r\n      self.__functionNameEnd = 'As' + util.capitalizeFirstLetter(options.qualifier);\r\n      defaultDbDocumentTypeName += '_as_' + options.qualifier.toLowerCase();\r\n    }\r\n    self.dbDocumentType = options.dbDocumentType || defaultDbDocumentTypeName;\r\n    self.name = self.dbDocumentType;\r\n    self.__db = db;\r\n    self.__leftCollection = leftCollection;\r\n    self.__rightCollection = rightCollection;\r\n    self.__leftRights = {};\r\n    self.__rightLefts = {};\r\n    self.__docsForReuse = [];\r\n    rightCollection.registerManyToManyRelationship(self);\r\n    leftCollection.registerManyToManyRelationship(self);\r\n  };\r\n  util.inheritPrototype(ManyToManyRelationship, BaseContainer);\r\n  var def = ManyToManyRelationship.prototype;\r\n  \r\n  def.getAccessFunctionDefinitions = function()  {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        leftName = capitalize(self.__leftCollection.itemName),\r\n        leftPlural = capitalize(self.__leftCollection.plural),\r\n        rightName = capitalize(self.__rightCollection.itemName),\r\n        rightPlural = capitalize(self.__rightCollection.plural),\r\n        end = self.__functionNameEnd,\r\n        getLeftRightsFnName = 'get' + leftName + rightPlural + end,\r\n        getRightLeftsFnName = 'get' + rightName + leftPlural + end,\r\n        addLeftRightFnName = 'add' + leftName + rightName + end,\r\n        removeLeftRightFnName = 'remove' + leftName + rightName + end,\r\n        isLeftLinkedToRightFnName = 'is' + leftName + 'LinkedTo' + rightName + end;\r\n    return [\r\n      buildFunc(getLeftRightsFnName, self.getLeftRights, false),\r\n      buildFunc(getRightLeftsFnName, self.getRightLefts, false),\r\n      buildFunc(addLeftRightFnName, self.addLink, true),\r\n      buildFunc(removeLeftRightFnName, self.removeLink, true),\r\n      buildFunc(isLeftLinkedToRightFnName, self.isLinked, false)\r\n    ];\r\n  };\r\n  \r\n  def.loadDocumentFromDb = function(doc)  {var self = this;\r\n    if (doc.right && \r\n        doc.left && \r\n        self.__updateOneRegisterWithDocument(self.__leftRights, doc.left, doc.right, doc)\r\n        ){\r\n      self.__updateOneRegisterWithDocument(self.__rightLefts, doc.right, doc.left, doc);\r\n      return true;\r\n    } else {\r\n      self.__sendDocumentToReusePile(doc);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  def.clear = function() {var self = this;\r\n    self.__leftRights = {};\r\n    self.__rightLefts = {};\r\n    self.__docsForReuse = [];\r\n  };\r\n  \r\n  def.__updateOneRegisterWithDocument = function(register, key, id, doc)  {var self = this;\r\n    var entry = register[key];\r\n    if (entry === undefined) {\r\n      var docs = {};\r\n      docs[id] = doc;\r\n      register[key] = {docs: docs, items: []};\r\n    } else {\r\n      if (entry.docs[id]) {\r\n        return false;\r\n      }\r\n      entry.docs[id] = doc;\r\n    }\r\n    return true;\r\n  };\r\n  \r\n  def.getLeftRights = function (leftItem)  {var self = this;\r\n    return self.__getInitialisedEntry(self.__leftRights, leftItem._id).items;\r\n  };\r\n  \r\n  def.getRightLefts = function (rightItem)  {var self = this;\r\n    return self.__getInitialisedEntry(self.__rightLefts, rightItem._id).items;\r\n  };\r\n  \r\n  //TODO: assert they are of correct type?\r\n  def.addLink = function (leftItem, rightItem)    {var self = this;\r\n    if (self.isLinked(leftItem, rightItem)) {\r\n      return $q.when();\r\n    } else {\r\n      return self.__writeLinkToDatabase(leftItem, rightItem).then(function(){\r\n        //will have gone through loadDocumentFromDb succesfully.\r\n        var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id),\r\n            rightEntry = self.__getInitialisedEntry(self.__rightLefts, rightItem._id);\r\n        util.addUnique(leftEntry.items, rightItem);\r\n        util.addUnique(rightEntry.items, leftItem);\r\n      });\r\n    };\r\n  };\r\n  \r\n  def.removeLink = function (leftItem, rightItem)    {var self = this;\r\n    var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id);\r\n    var rightEntry = self.__getInitialisedEntry(self.__rightLefts, rightItem._id);\r\n    var doc1 = self.__removeFromEntry(leftEntry, rightItem);\r\n    var doc2 = self.__removeFromEntry(rightEntry, leftItem);\r\n    if (doc1 !== doc2) {\r\n      throw \"This is strange...\"\r\n    }\r\n    return self.__db.remove(doc1);\r\n  };\r\n  \r\n  def.__removeFromEntry = function(entry, item)  {var self = this;\r\n    var doc = entry.docs[item._id];\r\n    util.removeFromArray(entry.items, item);\r\n    delete entry.docs[item._id];\r\n    return doc;\r\n  }\r\n   \r\n  def.isLinked = function (leftItem, rightItem)  {var self = this;\r\n    var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id);\r\n    return util.arrayContains(leftEntry.items, rightItem);\r\n  };\r\n  \r\n  def.respondToItemDeleted = function (item, collection)     {var self = this;\r\n    var opposites, itemIsFromRight;\r\n    if (collection === self.__rightCollection) {\r\n      itemIsFromRight = true;\r\n      opposites = self.getRightLefts(item);\r\n    } else if (collection === self.__leftCollection) {\r\n      itemIsFromRight = false;\r\n      opposites = self.getLeftRights(item);\r\n    }\r\n    opposites = opposites.slice();\r\n    var operations = [];\r\n    angular.forEach(opposites, function(oppositeItem) {\r\n      if (itemIsFromRight) {\r\n        var leftItem = oppositeItem;\r\n        var rightItem = item;\r\n      } else {\r\n        var leftItem = item;\r\n        var rightItem = oppositeItem;\r\n      }\r\n      operations.push(self.removeLink(leftItem, rightItem));\r\n    });\r\n    return $q.all(operations);\r\n  };\r\n  \r\n  /*\r\n  Should only be called if sure that items are not linked. Will reuse a document if one is available.\r\n  */\r\n  //TODO: tidy this mess not to have var deferred = $q.defer()\r\n  def.__writeLinkToDatabase = function(leftItem, rightItem)  {var self = this;\r\n    var deferred = $q.defer(),\r\n        doc = self.__docsForReuse.pop();\r\n    function finish(succesfullyLoaded) {\r\n      if (succesfullyLoaded) {\r\n        deferred.resolve();\r\n      } else {\r\n        throw 'ManyToManyRelationship.__writeLinkToDatabase failed to load document. This should not have happened.'\r\n      }\r\n    }\r\n    if (doc) {\r\n      doc.left = leftItem._id;\r\n      doc.right = rightItem._id;\r\n      self.__db.put(doc).then(function (result) {\r\n        doc._rev = result.rev;\r\n        finish(self.loadDocumentFromDb(doc));        \r\n      });\r\n    } else {\r\n      doc = {left: leftItem._id, right:rightItem._id, type:self.dbDocumentType};\r\n      self.__postAndLoad(doc).then(function (result) {\r\n        finish(result);\r\n      });\r\n    }\r\n    return deferred.promise;\r\n  };\r\n  \r\n  def.__sendDocumentToReusePile = function(doc)  {var self = this;\r\n    self.__docsForReuse.push(doc);\r\n  };\r\n  \r\n  def.__getInitialisedEntry = function (register, id)  {var self = this;\r\n    var entry = register[id];\r\n    if (entry === undefined) {\r\n      entry = {docs: {}, items: []};\r\n      register[id] = entry;\r\n    } else {\r\n      if (entry.items.length !== Object.keys(entry.docs).length) {\r\n        var collection = (register === self.__leftRights)? self.__rightCollection : self.__leftCollection; \r\n        entry.items.length = 0;\r\n        angular.forEach(entry.docs, function(doc, id) {\r\n          //TODO: what if item doesn't exist?\r\n          var item = collection.getItem(id);\r\n          if (item) {\r\n            entry.items.push(item);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return entry;\r\n  };\r\n  \r\n  return ManyToManyRelationship;\r\n});","\r\nangular.module('SneakerJS').factory('ParentChildRelationship', function($q, BaseContainer, util) {\r\n\r\n  var ParentChildRelationship = function(db, parentCollection, childCollection, options)    {var self = this;\r\n    var options = options || {};\r\n    self.__db = db;\r\n    self.__parentCollection = parentCollection;\r\n    self.__childCollection = childCollection;\r\n    self.__childAlias = options.childAlias || childCollection.plural;\r\n    self.__parentAlias = options.parentAlias || parentCollection.itemName;\r\n    self.__cascadeDelete = (options.cascadeDelete === undefined)? true : options.cascadeDelete;\r\n    self.__itemParent = {};\r\n    self.__itemChildren = {};\r\n    self.name = 'relationship_' + childCollection.itemName + '_as_' + self.__childAlias + '_' +\r\n          parentCollection.itemName + '_as_' + self.__parentAlias;\r\n    self.foreignKey = 'fk__' + self.__parentAlias;\r\n    parentCollection.registerChildRelationship(self);\r\n    childCollection.registerParentRelationship(self, self.foreignKey, self.__parentAlias);\r\n  };\r\n  util.inheritPrototype(ParentChildRelationship, BaseContainer);\r\n  var def = ParentChildRelationship.prototype;\r\n\r\n  def.getAccessFunctionDefinitions = function()  {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        childName = capitalize(self.__childCollection.itemName),\r\n        childAlias = capitalize(self.__childAlias),\r\n        parentName = capitalize(self.__parentCollection.itemName),\r\n        parentAlias = capitalize(self.__parentAlias);\r\n    return [\r\n      buildFunc('get' + childName + parentAlias, self.getParent, false),\r\n      buildFunc('get' + parentName + childAlias, self.getChildren, false),\r\n      buildFunc('set' + childName + parentAlias, self.setChildParent, true),\r\n    ];\r\n  };\r\n\r\n  def.postInitialLoading = function()  {var self = this;\r\n    var key = self.foreignKey;\r\n    angular.forEach(self.__parentCollection.__items, function(parentItem) {\r\n      self.__itemChildren[parentItem._id] = [];\r\n    });\r\n    angular.forEach(self.__childCollection.__items, function(childItem) {\r\n      var parentId = childItem[key];\r\n      if (parentId) {\r\n        var parentItem = self.__parentCollection.getItem(parentId);\r\n        self.linkNewlyLoadedChildToParent(childItem, parentItem, parentId);\r\n      }\r\n    });\r\n  };\r\n  \r\n  def.clear = function() {var self = this;\r\n    self.__itemParent = {};\r\n    self.__itemChildren = {};\r\n  };\r\n  \r\n  def.linkNewlyLoadedChildToParent = function(childItem, parentItem, parentId)    {var self = this;\r\n    var parentId = parentId || parentItem._id;\r\n    self.__itemParent[childItem._id] = parentItem;\r\n    var parentChildren = self.__itemChildren[parentId];\r\n    if (parentChildren === undefined) {\r\n      self.__itemChildren[parentId] = [childItem];\r\n    } else {\r\n      parentChildren.push(childItem);\r\n    }\r\n  };\r\n\r\n  def.getParent = function (childItem)    {var self = this;\r\n    return self.__itemParent[childItem._id] || null;\r\n  };\r\n\r\n  def.getChildren = function (parentItem)    {var self = this;\r\n    return self.__itemChildren[parentItem._id] || [];\r\n  };\r\n\r\n  def.setChildParent = function (childItem, parentItem)    {var self = this;\r\n    //TODO: assert they are of correct type?\r\n    var oldParent = self.__itemParent[childItem._id];\r\n    var parentItemId = parentItem? parentItem._id : null;\r\n    if (oldParent) {\r\n      util.removeFromArray(self.__itemChildren[oldParent._id], childItem);\r\n    }\r\n    if (parentItem) {\r\n      if (self.__itemChildren[parentItem._id] === undefined) {\r\n        self.__itemChildren[parentItem._id] = [childItem];\r\n      } else {\r\n        self.__itemChildren[parentItem._id].push(childItem);\r\n      }\r\n    }\r\n    self.__itemParent[childItem._id] = parentItem;\r\n    childItem[self.foreignKey] = parentItemId;\r\n    return self.__childCollection.saveItem(childItem);\r\n  };\r\n\r\n  def.respondToItemDeleted = function (item, collection)     {var self = this;\r\n    if (collection === self.__parentCollection) {\r\n      return self.__respondToParentDeleted(item);\r\n    } else if (collection === self.__childCollection) {\r\n      return self.__respondToChildDeleted(item);\r\n    }\r\n  };\r\n\r\n  def.__respondToParentDeleted = function (parentItem)     {var self = this;\r\n    var action = (self.__cascadeDelete)?\r\n        function(childItem) {return self.__childCollection.deleteItem(childItem)} :\r\n        function(childItem) {return self.setChildParent(childItem, null)};\r\n    var children = self.getChildren(parentItem).slice(); //slice() is imortant!\r\n    return $q.all(children.map(action)).then(function() {\r\n      delete self.__itemChildren[parentItem._id];\r\n      return $q.when(true);\r\n    }, util.promiseFailed);\r\n  };\r\n\r\n  def.__respondToChildDeleted = function (childItem)     {var self = this;\r\n    var parentItem = self.getParent(childItem);\r\n    if (parentItem) {\r\n      util.removeFromArray(self.__itemChildren[parentItem._id], childItem);\r\n    }\r\n    delete self.__itemParent[childItem._id];\r\n    return $q.when(true);\r\n  };\r\n\r\n  return ParentChildRelationship;\r\n});\r\n","\r\nangular.module('SneakerJS').factory('Singleton', function(util, BaseContainer) {\r\n\r\n  var Singleton = function(db, name)    {var self = this;\r\n    self.name = name;\r\n    self.dbDocumentType = 'singleton__' + name;\r\n    self.__db = db;\r\n    self.__doc = null;\r\n  };\r\n  util.inheritPrototype(Singleton, BaseContainer);\r\n  var def = Singleton.prototype;\r\n  \r\n  def.loadDocumentFromDb = function(doc)    {var self = this;\r\n    if (self.__doc !== null) {\r\n      throw 'found singleton of type ' + self.name + ' more than once in db';\r\n    }\r\n    if (doc._id !== self.dbDocumentType) {\r\n      throw 'Expected singleton type ' + self.name + ' to have _id: ' + self.dbDocumentType;\r\n    }\r\n    self.__doc = doc;\r\n    return self.__doc.data;\r\n  };\r\n  \r\n  def.clear = function() {var self = this;\r\n    self.__doc = null;\r\n  };\r\n\r\n  def.getAccessFunctionDefinitions = function()    {var self = this;\r\n    return [\r\n      util.createAccessFunctionDefinition('get' + util.capitalizeFirstLetter(self.name), self.getData, false),\r\n      util.createAccessFunctionDefinition('set' + util.capitalizeFirstLetter(self.name), self.setData, false)\r\n    ]\r\n  };\r\n  \r\n  def.getData = function() {var self = this;\r\n    return (self.__doc)? self.__doc.data : {};\r\n  };\r\n  \r\n  def.setData = function(data) {var self = this;\r\n    if (!self.__doc){\r\n      self.__doc = {\r\n        type: self.dbDocumentType,\r\n        _id: self.dbDocumentType,\r\n        data: {}\r\n      }\r\n    }\r\n    angular.copy(data, self.__doc.data);\r\n    return self.__db.put(self.__doc).then(function (result) {\r\n      self.__doc._rev = result.rev;\r\n      return result.rev;\r\n    });\r\n  };\r\n  \r\n  return Singleton; \r\n});","\r\n\r\n\r\nangular.module('SneakerJS').service('util', function($q) {\r\n  var self = this;\r\n\r\n  self.capitalizeFirstLetter = function(str) {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  };\r\n\r\n  self.createAccessFunctionDefinition = function(name, fn, queuedPromise) {\r\n    return {\r\n      ModelFunctionName: name,\r\n      containerFunction: fn,\r\n      queuedPromise: queuedPromise\r\n    }\r\n  };\r\n\r\n  self.arrayContains = function(myArray, item) {\r\n    for (var i = 0, len = myArray.length; i < len; i++) {\r\n      if (item === myArray[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  self.addUnique = function(myArray, item) {\r\n    if(!self.arrayContains(myArray, item)){\r\n      myArray.push(item);\r\n    }\r\n  }\r\n\r\n  self.addAsItem = function(object, key, item) {\r\n    //Where object[key] = [items...]\r\n    if (object[key] === undefined) {\r\n      object[key] = [item];\r\n    } else {\r\n      object[key].push(item);\r\n    }\r\n  };\r\n\r\n  self.removeFromArray = function(myArray, item) {\r\n    var index = myArray.indexOf(item);\r\n    if (index > -1) {\r\n      myArray.splice(index, 1);\r\n    }\r\n  };\r\n\r\n  self.filterIndex = function(index, test) {\r\n    //accepts an object like array.\r\n    var filteredItems = [];\r\n    angular.forEach(index, function(item) {\r\n      if (test(item)) {\r\n        filteredItems.push(item);\r\n      }\r\n    });\r\n    return filteredItems;\r\n  };\r\n\r\n  self.inheritPrototype = function(Child, Parent) {\r\n    var childProto = Child.prototype;\r\n    var parentProto = Parent.prototype;\r\n    for (var prop in parentProto) {\r\n      if (typeof parentProto[prop] == 'function') {\r\n        childProto[prop] = parentProto[prop];\r\n      }\r\n    }\r\n  };\r\n\r\n  self.copyFields = function(source, target, fields) {\r\n    angular.forEach(fields, function(field) {\r\n      target[field] = source[field];\r\n    });\r\n  };\r\n\r\n  self.promiseFailed = function(error) {\r\n    console.log('Promise failed!');\r\n    console.log(error);\r\n  }\r\n\r\n});\r\n"],"sourceRoot":"/source/"}