{"version":3,"sources":["module.js","BaseContainer.js","collection.js","ManyToManyRelationship.js","model.js","ParentChildRelationship.js","queued-response-db.js","relationship.js","util.js","value-register.js"],"names":["angular","module","factory","$q","BaseContainer","self","this","__index","__db","dbDocumentType","def","prototype","postInitialLoading","__postAndLoad","doc","defered","defer","post","then","result","ok","console","log","get","id","docFromDb","resolve","loadDocumentFromDb","promise","util","Collection","db","singleItemName","fieldNames","options","itemName","name","plural","__constructorFunction","constructorFunction","__items","__relationships","__fieldNames","slice","__fullFieldNames","push","inheritPrototype","registerRelationship","relationship","fieldName","item","copyFields","type","_id","getAccessFunctionDefinitions","capitalize","capitalizeFirstLetter","buildFunc","createAccessFunctionDefinition","single","newItem","getItem","findItems","allItems","Object","keys","map","i","query","test","prop","filterIndex","data","undefined","deferred","saveItem","put","_rev","rev","deleteItem","childDeletions","respondToItemDeleted","all","remove","promiseFailed","ManyToManyRelationship","leftCollection","rightCollection","__rightCollection","__leftCollection","defaultDbDocumentTypeName","toLowerCase","__functionNameEnd","qualifier","__leftRights","__rightLefts","__docsForReuse","leftName","leftPlural","rightName","rightPlural","end","getLeftRightsFnName","getRightLeftsFnName","addLeftRightFnName","removeLeftRightFnName","isLeftLinkedToRightFnName","getLeftRights","getRightLefts","addLink","removeLink","isLinked","right","left","__updateOneRegisterWithDocument","__sendDocumentToReusePile","register","key","entry","docs","items","leftItem","__getInitialisedEntry","rightItem","when","__writeLinkToDatabase","leftEntry","rightEntry","addUnique","doc1","__removeFromEntry","doc2","removeFromArray","arrayContains","collection","opposites","itemIsFromRight","operations","forEach","oppositeItem","finish","succesfullyLoaded","pop","length","service","ParentChildRelationship","__registerContainer","container","__containers","__registerDocumentTypeLoader","__createAccessFunctions","accessFunc","func","fnName","ModelFunctionName","queuedPromise","__getQueuedFunction","containerFunction","__getNonQueuedFunction","apply","arguments","originalArgs","__lastPromiseInQueue","__dbDocumentTypeLoaders","__initializeModel","loadQuery","__loadQuery","rows","row","__addDocumentToCollection","__postInitialLoading","err","document","initialize","allDocs","include_docs","attachments","__dataReady","dataReady","printInfo","join","firstCollection","secondCollection","relationshipType","parentCollection","childCollection","ValueRegister","__parentCollection","__childCollection","__childAlias","childAlias","__parentAlias","parentAlias","__parentDeleteInProgress","__cascadeDelete","cascadeDelete","__itemParent","__itemChildren","foreignKey","childName","parentName","getParent","getChildren","setChildParent","parentItem","childItem","parentId","parent","oldParent","parentItemId","__respondToParentDeleted","__respondToChildDeleted","action","children","QueuedResponseDb","_db","queue","_nextId","_latestResolvedId","wrapPromise","dbCall","promiseId","nextId","hiddenPromise","returnPromise","queuePromise","response","promiseGotResolved","resolved","releasResolvedPromises","stop","Relationship","propertyName","parentPopertyName","_parentCollection","_parentPopertyName","_convertFromDoc","value","_convertToDoc","_onItemRemove","_links","str","charAt","toUpperCase","fn","myArray","len","addAsItem","object","index","indexOf","splice","filteredItems","Child","Parent","childProto","parentProto","source","target","fields","field","error","_register","set"],"mappings":"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","file":"sneakerjs.min.js","sourcesContent":["\"use strict\";\r\nangular.module('SneakerJS', []);","\r\nangular.module('SneakerJS').factory('BaseContainer', function($q) {\r\n  /*\r\n  A collection has an internal index of the objects in the database.\r\n  What it uses as keys and values is up to the derived class.\r\n  */\r\n  var BaseContainer = function()    {var self = this;\r\n    self.__index = null;\r\n    self.__db = null;\r\n    self.dbDocumentType = null;\r\n  };\r\n  var def = BaseContainer.prototype;\r\n  \r\n  def.postInitialLoading = function() {\r\n    //override if container needs to do any post loading operations\r\n  };\r\n  \r\n  def.__postAndLoad = function(doc)  {var self = this;\r\n    var defered = $q.defer();\r\n    self.__db.post(doc).then( function (result) {\r\n      if (result.ok) {\r\n        self.__db.get(result.id).then( function (docFromDb) {\r\n          defered.resolve(self.loadDocumentFromDb(docFromDb));\r\n        });\r\n      } else {\r\n        console.log(result);\r\n        throw \"Error fetching data\";\r\n      }\r\n    });\r\n    return defered.promise;\r\n  };\r\n  \r\n  return BaseContainer;\r\n});","\r\nangular.module('SneakerJS').factory('Collection', function(util, $q, BaseContainer) {\r\n\r\n  var Collection = function(db, singleItemName, fieldNames, options)    {var self = this;\r\n    var options = options || {};\r\n    self.itemName = singleItemName;\r\n    self.name = singleItemName; //This is how a relationship references collection\r\n    self.plural = options.plural || singleItemName + 's'\r\n    self.dbDocumentType = options.dbDocumentType || singleItemName;\r\n    self.__db = db;\r\n    self.__constructorFunction = options.constructorFunction || function(){};\r\n    self.__items = {};\r\n    self.__relationships = [];\r\n    self.__fieldNames = fieldNames.slice();\r\n    self.__fullFieldNames = fieldNames.slice();\r\n    self.__fullFieldNames.push('_id');\r\n    self.__fullFieldNames.push('_rev');\r\n  };\r\n  util.inheritPrototype(Collection, BaseContainer);\r\n  var def = Collection.prototype;\r\n\r\n  def.registerRelationship = function(relationship, fieldName)    {var self = this;\r\n    self.__relationships.push(relationship);\r\n    if (fieldName) {\r\n      self.__fullFieldNames.push(fieldName);\r\n    }\r\n  };\r\n\r\n  def.loadDocumentFromDb = function(doc)    {var self = this;\r\n    var item = new self.__constructorFunction();\r\n    util.copyFields(doc, item, self.__fullFieldNames);\r\n    item.type = self.itemName;\r\n    self.__items[doc._id] = item;\r\n    return item;\r\n  };\r\n\r\n  def.getAccessFunctionDefinitions = function()    {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        single = capitalize(self.itemName),\r\n        plural = capitalize(self.plural);\r\n    return [\r\n      buildFunc('new' + single, self.newItem, true),\r\n      buildFunc('get' + single, self.getItem, false),\r\n      buildFunc('find' + plural, self.findItems, false),\r\n      buildFunc('all' + plural, self.allItems, false),\r\n    ]\r\n  };\r\n\r\n  def.getItem = function(id)    {var self = this;\r\n    return self.__items[id];\r\n  };\r\n\r\n  def.allItems = function()    {var self = this;\r\n    return Object.keys(self.__items).map(function(i){\r\n      return self.__items[i];\r\n    });\r\n  };\r\n\r\n  def.findItems = function(query)    {var self = this;\r\n    /*\r\n    query can be:\r\n      a function returning true or false\r\n      an object like {name: 'deirdre'} -- which returns items whose properties match.\r\n      an empty object {} -- which returns all items.\r\n    TODO: what about parent properties?\r\n    */\r\n    var test;\r\n    if (typeof query === 'function') {\r\n      test = query;\r\n    } else if (typeof query === 'object') {\r\n      test = function(item) {\r\n        for (prop in query) {\r\n          if (item[prop] !== query[prop]) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n    } else {\r\n      throw 'Invalid argument for \"find\", must be an object or a function.';\r\n    }\r\n    return util.filterIndex(self.__items, test);\r\n  };\r\n\r\n  def.newItem = function(data)    {var self = this;\r\n    if (data === undefined) {\r\n      throw 'newItem expects an object as its first argument.'\r\n    }\r\n    var deferred = $q.defer();\r\n    var doc = {};\r\n    util.copyFields(data, doc, self.__fieldNames);\r\n    doc.type = self.dbDocumentType;\r\n    self.__postAndLoad(doc).then(function (newItem) {\r\n      //TODO: link relationships...\r\n      deferred.resolve(newItem);\r\n    });\r\n    return deferred.promise;\r\n  };\r\n\r\n  def.saveItem = function(item)    {var self = this;\r\n    var deferred = $q.defer();\r\n    var doc = {};\r\n    util.copyFields(item, doc, self.__fullFieldNames);\r\n    doc.type = self.dbDocumentType;\r\n    self.__db.put(doc).then(function (result) {\r\n      item._rev = result.rev;\r\n      deferred.resolve(item._rev);\r\n    });\r\n    return deferred.promise;\r\n  };\r\n\r\n  def.deleteItem = function(item)    {var self = this;\r\n    var childDeletions = self.__relationships.map(function(relationship) {\r\n      return relationship.respondToItemDeleted(item, self);\r\n    });\r\n    return $q.all(childDeletions).then(function() {\r\n      self.__db.remove(item).then(function (result) {\r\n        delete self.__items[item._id];\r\n      }, util.promiseFailed);\r\n    }, util.promiseFailed);\r\n  };\r\n\r\n  return Collection;\r\n});\r\n","    \r\n/*\r\n  Left and right may be absent from register.\r\n  Both registers will always be equal and complimentary:\r\n  {\r\n     p1: {items: [t6]}\r\n     p2: {items: [t4, t6]}\r\n  }\r\n  {\r\n     t6: {items: [p1, p2]},\r\n     t4: {items: [p2]},\r\n  }\r\n*/\r\n    \r\nangular.module('SneakerJS').factory('ManyToManyRelationship', function($q, BaseContainer, util) {\r\n  \r\n  var ManyToManyRelationship = function(db, leftCollection, rightCollection, options)    {var self = this;\r\n    var options = options || {};\r\n    self.__rightCollection = rightCollection;\r\n    self.__leftCollection = leftCollection;\r\n    var defaultDbDocumentTypeName = ('lnk_' + leftCollection.itemName + '_' + rightCollection.itemName).toLowerCase();\r\n    self.__functionNameEnd = '';\r\n    if (options.qualifier) {\r\n      self.__functionNameEnd = 'As' + util.capitalizeFirstLetter(options.qualifier);\r\n      defaultDbDocumentTypeName += '_as_' + options.qualifier.toLowerCase();\r\n    }\r\n    self.dbDocumentType = options.dbDocumentType || defaultDbDocumentTypeName;\r\n    self.name = self.dbDocumentType;\r\n    self.__db = db;\r\n    self.__leftCollection = leftCollection;\r\n    self.__rightCollection = rightCollection;\r\n    self.__leftRights = {};\r\n    self.__rightLefts = {};\r\n    self.__docsForReuse = [];\r\n    rightCollection.registerRelationship(self);\r\n    leftCollection.registerRelationship(self);\r\n  };\r\n  util.inheritPrototype(ManyToManyRelationship, BaseContainer);\r\n  var def = ManyToManyRelationship.prototype;\r\n  \r\n  def.getAccessFunctionDefinitions = function()  {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        leftName = capitalize(self.__leftCollection.itemName),\r\n        leftPlural = capitalize(self.__leftCollection.plural),\r\n        rightName = capitalize(self.__rightCollection.itemName),\r\n        rightPlural = capitalize(self.__rightCollection.plural),\r\n        end = self.__functionNameEnd,\r\n        getLeftRightsFnName = 'get' + leftName + rightPlural + end,\r\n        getRightLeftsFnName = 'get' + rightName + leftPlural + end,\r\n        addLeftRightFnName = 'add' + leftName + rightName + end,\r\n        removeLeftRightFnName = 'remove' + leftName + rightName + end,\r\n        isLeftLinkedToRightFnName = 'is' + leftName + 'LinkedTo' + rightName + end;\r\n    return [\r\n      buildFunc(getLeftRightsFnName, self.getLeftRights, false),\r\n      buildFunc(getRightLeftsFnName, self.getRightLefts, false),\r\n      buildFunc(addLeftRightFnName, self.addLink, true),\r\n      buildFunc(removeLeftRightFnName, self.removeLink, true),\r\n      buildFunc(isLeftLinkedToRightFnName, self.isLinked, false)\r\n    ];\r\n  };\r\n  \r\n  def.loadDocumentFromDb = function(doc)  {var self = this;\r\n    if (doc.right && \r\n        doc.left && \r\n        self.__updateOneRegisterWithDocument(self.__leftRights, doc.left, doc.right, doc)\r\n        ){\r\n      self.__updateOneRegisterWithDocument(self.__rightLefts, doc.right, doc.left, doc);\r\n      return true;\r\n    } else {\r\n      self.__sendDocumentToReusePile(doc);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  def.__updateOneRegisterWithDocument = function(register, key, id, doc)  {var self = this;\r\n    var entry = register[key];\r\n    if (entry === undefined) {\r\n      var docs = {};\r\n      docs[id] = doc;\r\n      register[key] = {docs: docs, items: []};\r\n    } else {\r\n      if (entry.docs[id]) {\r\n        return false;\r\n      }\r\n      entry.docs[id] = doc;\r\n    }\r\n    return true;\r\n  };\r\n  \r\n  def.getLeftRights = function (leftItem)  {var self = this;\r\n    return self.__getInitialisedEntry(self.__leftRights, leftItem._id).items;\r\n  };\r\n  \r\n  def.getRightLefts = function (rightItem)  {var self = this;\r\n    return self.__getInitialisedEntry(self.__rightLefts, rightItem._id).items;\r\n  };\r\n  \r\n  //TODO: assert they are of correct type?\r\n  def.addLink = function (leftItem, rightItem)    {var self = this;\r\n    if (self.isLinked(leftItem, rightItem)) {\r\n      return $q.when();\r\n    } else {\r\n      var deferred = $q.defer();\r\n      self.__writeLinkToDatabase(leftItem, rightItem).then(function(){\r\n        //will have gone through loadDocumentFromDb succesfully.\r\n        var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id),\r\n            rightEntry = self.__getInitialisedEntry(self.__rightLefts, rightItem._id);\r\n        util.addUnique(leftEntry.items, rightItem);\r\n        util.addUnique(rightEntry.items, leftItem);\r\n        deferred.resolve()\r\n      });\r\n      return deferred.promise; \r\n    };\r\n  };\r\n  \r\n  def.removeLink = function (leftItem, rightItem)    {var self = this;\r\n    var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id);\r\n    var rightEntry = self.__getInitialisedEntry(self.__rightLefts, rightItem._id);\r\n    var doc1 = self.__removeFromEntry(leftEntry, rightItem);\r\n    var doc2 = self.__removeFromEntry(rightEntry, leftItem);\r\n    if (doc1 !== doc2) {\r\n      throw \"This is strange...\"\r\n    }\r\n    return self.__db.remove(doc1);\r\n  };\r\n  \r\n  def.__removeFromEntry = function(entry, item)  {var self = this;\r\n    var doc = entry.docs[item._id];\r\n    util.removeFromArray(entry.items, item);\r\n    delete entry.docs[item._id];\r\n    return doc;\r\n  }\r\n   \r\n  def.isLinked = function (leftItem, rightItem)  {var self = this;\r\n    var leftEntry = self.__getInitialisedEntry(self.__leftRights, leftItem._id);\r\n    return util.arrayContains(leftEntry.items, rightItem);\r\n  };\r\n  \r\n  def.respondToItemDeleted = function (item, collection)     {var self = this;\r\n    var opposites, itemIsFromRight;\r\n    if (collection === self.__rightCollection) {\r\n      itemIsFromRight = true;\r\n      opposites = self.getRightLefts(item);\r\n    } else if (collection === self.__leftCollection) {\r\n      itemIsFromRight = false;\r\n      opposites = self.getLeftRights(item);\r\n    }\r\n    opposites = opposites.slice();\r\n    var operations = [];\r\n    angular.forEach(opposites, function(oppositeItem) {\r\n      if (itemIsFromRight) {\r\n        var leftItem = oppositeItem;\r\n        var rightItem = item;\r\n      } else {\r\n        var leftItem = item;\r\n        var rightItem = oppositeItem;\r\n      }\r\n      operations.push(self.removeLink(leftItem, rightItem));\r\n    });\r\n    return $q.all(operations);\r\n  };\r\n  \r\n  /*\r\n  Should only be called if sure that items are not linked. Will reuse a document if one is available.\r\n  */\r\n  def.__writeLinkToDatabase = function(leftItem, rightItem)  {var self = this;\r\n    var deferred = $q.defer(),\r\n        doc = self.__docsForReuse.pop();\r\n    function finish(succesfullyLoaded) {\r\n      if (succesfullyLoaded) {\r\n        deferred.resolve();\r\n      } else {\r\n        throw 'ManyToManyRelationship.__writeLinkToDatabase failed to load document. This should not have happened.'\r\n      }\r\n    }\r\n    if (doc) {\r\n      doc.left = leftItem._id;\r\n      doc.right = rightItem._id;\r\n      self.__db.put(doc).then(function (result) {\r\n        doc._rev = result.rev;\r\n        finish(self.loadDocumentFromDb(doc));        \r\n      });\r\n    } else {\r\n      doc = {left: leftItem._id, right:rightItem._id};\r\n      self.__postAndLoad(doc).then(function (result) {\r\n        finish(result);\r\n      });\r\n    }\r\n    return deferred.promise;\r\n  };\r\n  \r\n  def.__sendDocumentToReusePile = function(doc)  {var self = this;\r\n    self.__docsForReuse.push(doc);\r\n  };\r\n  \r\n  def.__getInitialisedEntry = function (register, id)  {var self = this;\r\n    var entry = register[id];\r\n    if (entry === undefined) {\r\n      entry = {docs: {}, items: []};\r\n      register[id] = entry;\r\n    } else {\r\n      if (entry.items.length !== Object.keys(entry.docs).length) {\r\n        var collection = (register === self.__leftRights)? self.__rightCollection : self.__leftCollection; \r\n        entry.items.length = 0;\r\n        angular.forEach(entry.docs, function(doc, id) {\r\n          //TODO: what if item doesn't exist?\r\n          var item = collection.getItem(id);\r\n          if (item) {\r\n            entry.items.push(item);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return entry;\r\n  };\r\n  \r\n  return ManyToManyRelationship;\r\n});","\r\nangular.module('SneakerJS').service('model', function($q, Collection, ParentChildRelationship, ManyToManyRelationship) {\r\n\r\n  var self = this,\r\n      __db,\r\n      __loadQuery,\r\n      __containers = {},\r\n      __dbDocumentTypeLoaders = {},\r\n      __lastPromiseInQueue = $q.when(),\r\n      __relationshipDefinitionFunctions = {};\r\n\r\n  self.initialize = function(db, query) {\r\n    __db = db;\r\n    __loadQuery = query || function() {\r\n      return __db.allDocs({\r\n        include_docs: true,\r\n        attachments: false\r\n      });\r\n    }\r\n  };\r\n\r\n  var __dataReady;\r\n  self.dataReady = function (){\r\n    if (__dataReady === undefined) {\r\n      __dataReady = $q.defer();\r\n      __initializeModel().then( function () {\r\n        __dataReady.resolve();\r\n      });\r\n    }\r\n    return __dataReady.promise;\r\n  };\r\n\r\n  self.printInfo = function (){\r\n    angular.forEach(__containers, function(container) {\r\n      angular.forEach(container.getAccessFunctionDefinitions(), function(accessFunc) {\r\n        console.log('model.' + accessFunc.ModelFunctionName);\r\n      });\r\n    });\r\n  };\r\n\r\n  /************* MODEL DEFINITION FUNCTIONS *************/\r\n\r\n  self.collection = function(singleItemName, fieldNames, options){\r\n    var container = new Collection(__db, singleItemName, fieldNames, options);\r\n    __registerContainer(container);\r\n    return container;\r\n  };\r\n\r\n  self.join = function(firstCollection, secondCollection, options){\r\n    var options = options || {},\r\n        container,\r\n        relationshipType = options.type || 'parentChild';\r\n    angular.forEach([firstCollection, secondCollection], function(name) {\r\n      if (__containers[name] === undefined) {\r\n        throw 'Failed to create join, container not found: \"' + name + '\" ';\r\n      }\r\n    });\r\n    if (relationshipType === 'parentChild') {\r\n      var parentCollection = __containers[firstCollection];\r\n      var childCollection = __containers[secondCollection];\r\n      container = new ParentChildRelationship(__db, parentCollection, childCollection, options);\r\n    } else if (relationshipType === 'manyToMany') {\r\n      var leftCollection = __containers[firstCollection];\r\n      var rightCollection = __containers[secondCollection];\r\n      container = new ManyToManyRelationship(__db, leftCollection, rightCollection, options);\r\n    } else {\r\n      throw '\"' + relationshipType + '\" is not a valid relationship type';\r\n    }\r\n    __registerContainer(container);\r\n    return container;\r\n  };\r\n\r\n  function __registerContainer(container) {\r\n    var name = container.name;\r\n    if (__containers[name] !== undefined) {\r\n      throw 'Trying to create two containers with the same name: ' + name + ' on model but it already exists.';\r\n    }\r\n    __containers[name] = container;\r\n    __registerDocumentTypeLoader(container);\r\n    __createAccessFunctions(container);\r\n  };\r\n\r\n  /************* COLLECTION ACCESS FUNCTIONALITY ************\r\n\r\n    __createAccessFunctions() creates methods like:\r\n\r\n      model.newTask({})\r\n      model.getProjectTasks(project)\r\n\r\n    Query functions (getX, findX) return directly. Data changing functions (all other prefixed) return promises.\r\n\r\n    Query data may be dirty while a promise is waiting to complete, so you need to do this:\r\n\r\n    model.newTask({}).then(function(){\r\n      angular.copy($scope.tasks, model.getProjectTasks($scope.project));\r\n    });\r\n\r\n    Data changing functions are queued internally, so you can do this.\r\n    model.newTask({});\r\n    model.newTask({});\r\n    model.newTask({}).then(function(){\r\n      angular.copy($scope.tasks, model.getProjectTasks($scope.project));\r\n    });\r\n\r\n  */\r\n  self.saveItem = function(item) {\r\n    return __containers[item.type].saveItem(item);\r\n  };\r\n\r\n  self.deleteItem = function(item) {\r\n    return __containers[item.type].deleteItem(item);\r\n  };\r\n\r\n  function __createAccessFunctions(container){\r\n    angular.forEach(container.getAccessFunctionDefinitions(), function(accessFunc) {\r\n      var func, fnName = accessFunc.ModelFunctionName;\r\n      if (accessFunc.queuedPromise) {\r\n        func = __getQueuedFunction(container, accessFunc.containerFunction);\r\n      } else {\r\n        func = __getNonQueuedFunction(container, accessFunc.containerFunction);\r\n      }\r\n      if (self[fnName] !== undefined) {\r\n        throw 'Container ' + container.name + ' trying to create function ' + fnName + ' on model but it already exists.';\r\n      }\r\n      self[fnName] = func;\r\n    });\r\n  };\r\n\r\n  function __getNonQueuedFunction(container, containerFunction){\r\n    return function() {\r\n      return containerFunction.apply(container, arguments);\r\n    }\r\n  };\r\n\r\n  function __getQueuedFunction(container, containerFunction){\r\n    return function() {\r\n      var originalArgs = arguments;\r\n      var deferred = $q.defer();\r\n      __lastPromiseInQueue.then( function() {\r\n        __lastPromiseInQueue = containerFunction.apply(container, originalArgs);\r\n        __lastPromiseInQueue.then(function(result) {\r\n          deferred.resolve(result);\r\n        });\r\n      });\r\n      return deferred.promise;\r\n    }\r\n  };\r\n\r\n  /************* INITIAL LOADING FUNCTIONALITY *************/\r\n\r\n  function __registerDocumentTypeLoader(container) {\r\n    /* If container has field 'dbDocumentType' then every document whose 'type' field matches that\r\n    will be passed to the container's loadDocumentFromDb() function at loading.\r\n    */\r\n    var dbDocumentType = container.dbDocumentType;\r\n    if (dbDocumentType !== undefined) {\r\n      if (dbDocumentType in __dbDocumentTypeLoaders) {\r\n        var claimedBy = __dbDocumentTypeLoaders[dbDocumentType];\r\n        throw 'More than one container attempting to register database document type: \"' + dbDocumentType + '\".';\r\n      } else {\r\n        __dbDocumentTypeLoaders[dbDocumentType] = container;\r\n      }\r\n    }\r\n  };\r\n\r\n  function __initializeModel(){\r\n    var defer = $q.defer();\r\n    var loadQuery = __loadQuery();\r\n    loadQuery.then(function (result) {\r\n      angular.forEach(result.rows, function(row){\r\n        __addDocumentToCollection(row.doc);\r\n      });\r\n      __postInitialLoading();\r\n      defer.resolve();\r\n    }).catch(function (err) {\r\n      console.log(err);\r\n    });\r\n    return defer.promise;\r\n  };\r\n\r\n  function __addDocumentToCollection(document){\r\n    var dbDocumentType = document.type;\r\n    if (dbDocumentType) {\r\n      var container = __dbDocumentTypeLoaders[dbDocumentType];\r\n      if (container) {\r\n        container.loadDocumentFromDb(document, dbDocumentType);\r\n      } else {\r\n        console.log(document);\r\n        console.log('Could not load document \\\"' + document._id + '\\\" as type was not recognised (' + dbDocumentType + ')');\r\n      }\r\n    } else {\r\n      console.log('Could not load document \\\"' + document._id + '\\\" as it has no \\\"type\\\" field.');\r\n    }\r\n  };\r\n\r\n  function __postInitialLoading() {\r\n    angular.forEach(__containers, function(container) {\r\n      container.postInitialLoading();\r\n    });\r\n  }\r\n\r\n});\r\n\r\n","\r\nangular.module('SneakerJS').factory('ParentChildRelationship', function($q, BaseContainer, ValueRegister, util) {\r\n\r\n  var ParentChildRelationship = function(db, parentCollection, childCollection, options)    {var self = this;\r\n    var options = options || {};\r\n    self.__db = db;\r\n    self.__parentCollection = parentCollection;\r\n    self.__childCollection = childCollection;\r\n    self.__childAlias = options.childAlias || childCollection.plural;\r\n    self.__parentAlias = options.parentAlias || parentCollection.itemName;\r\n    self.__parentDeleteInProgress = new ValueRegister();\r\n    self.__cascadeDelete = (options.cascadeDelete === undefined)? true : options.cascadeDelete;\r\n    self.__itemParent = {};\r\n    self.__itemChildren = {};\r\n    self.name = 'relationship_' + childCollection.itemName + '_as_' + self.__childAlias + '_' +\r\n          parentCollection.itemName + '_as_' + self.__parentAlias;\r\n    self.foreignKey = 'fk__' + self.__parentAlias;\r\n    parentCollection.registerRelationship(self);\r\n    childCollection.registerRelationship(self, self.foreignKey);\r\n  };\r\n  util.inheritPrototype(ParentChildRelationship, BaseContainer);\r\n  var def = ParentChildRelationship.prototype;\r\n\r\n  def.getAccessFunctionDefinitions = function()  {var self = this;\r\n    var capitalize = util.capitalizeFirstLetter,\r\n        buildFunc = util.createAccessFunctionDefinition,\r\n        childName = capitalize(self.__childCollection.itemName),\r\n        childAlias = capitalize(self.__childAlias),\r\n        parentName = capitalize(self.__parentCollection.itemName),\r\n        parentAlias = capitalize(self.__parentAlias);\r\n    return [\r\n      buildFunc('get' + childName + parentAlias, self.getParent, false),\r\n      buildFunc('get' + parentName + childAlias, self.getChildren, false),\r\n      buildFunc('set' + childName + parentAlias, self.setChildParent, true),\r\n    ];\r\n  };\r\n\r\n  def.postInitialLoading = function()  {var self = this;\r\n    var key = self.foreignKey;\r\n    angular.forEach(self.__parentCollection.__items, function(parentItem) {\r\n      self.__itemChildren[parentItem._id] = [];\r\n    });\r\n    angular.forEach(self.__childCollection.__items, function(childItem) {\r\n      var parentId = childItem[key];\r\n      if (parentId) {\r\n        var parent = self.__parentCollection.getItem(parentId);\r\n        self.__itemParent[childItem._id] = parent;\r\n        self.__itemChildren[parentId].push(childItem);\r\n      }\r\n    });\r\n  };\r\n\r\n  def.getParent = function (childItem)    {var self = this;\r\n    return self.__itemParent[childItem._id] || null;\r\n  };\r\n\r\n  def.getChildren = function (parentItem)    {var self = this;\r\n    return self.__itemChildren[parentItem._id] || [];\r\n  };\r\n\r\n  def.setChildParent = function (childItem, parentItem)    {var self = this;\r\n    //TODO: assert they are of correct type?\r\n    var oldParent = self.__itemParent[childItem._id];\r\n    var parentItemId = parentItem? parentItem._id : null;\r\n    if (oldParent) {\r\n      util.removeFromArray(self.__itemChildren[oldParent._id], childItem);\r\n    }\r\n    if (parentItem) {\r\n      if (self.__itemChildren[parentItem._id] === undefined) {\r\n        self.__itemChildren[parentItem._id] = [childItem];\r\n      } else {\r\n        self.__itemChildren[parentItem._id].push(childItem);\r\n      }\r\n    }\r\n    self.__itemParent[childItem._id] = parentItem;\r\n    childItem[self.foreignKey] = parentItemId;\r\n    return self.__childCollection.saveItem(childItem);\r\n  };\r\n\r\n  def.respondToItemDeleted = function (item, collection)     {var self = this;\r\n    if (collection === self.__parentCollection) {\r\n      return self.__respondToParentDeleted(item);\r\n    } else if (collection === self.__childCollection) {\r\n      return self.__respondToChildDeleted(item);\r\n    }\r\n  };\r\n\r\n  def.__respondToParentDeleted = function (parentItem)     {var self = this;\r\n    var action = (self.__cascadeDelete)?\r\n        function(childItem) {return self.__childCollection.deleteItem(childItem)} :\r\n        function(childItem) {return self.setChildParent(childItem, null)};\r\n    var children = self.getChildren(parentItem).slice(); //slice() is imortant!\r\n    return $q.all(children.map(action)).then(function() {\r\n      delete self.__itemChildren[parentItem._id];\r\n      return $q.when(true);\r\n    }, util.promiseFailed);\r\n  };\r\n\r\n  def.__respondToChildDeleted = function (childItem)     {var self = this;\r\n    var parentItem = self.getParent(childItem);\r\n    if (parentItem) {\r\n      util.removeFromArray(self.__itemChildren[parentItem._id], childItem);\r\n    }\r\n    delete self.__itemParent[childItem._id];\r\n    return $q.when(true);\r\n  };\r\n\r\n  return ParentChildRelationship;\r\n});\r\n","\r\nangular.module('SneakerJS').factory('QueuedResponseDb', function($q, ValueRegister) {\r\n  /*\r\n  post put get remove\r\n  */\r\n  var QueuedResponseDb = function(db) {\r\n    var self = this;\r\n    self._db = db;\r\n    self.queue = {};\r\n    self._nextId = 0;\r\n    self._latestResolvedId = 1;\r\n    \r\n    self.wrapPromise = function(dbCall, data) {\r\n      var promiseId = self.nextId();\r\n      var hiddenPromise = self._db[dbCall](data);\r\n      var returnPromise = $q.defer();\r\n      self.queuePromise(promiseId, returnPromise);\r\n      hiddenPromise.then(function(response) {\r\n        self.promiseGotResolved(promiseId, response);\r\n      });\r\n      return returnPromise.promise;\r\n    };\r\n    angular.forEach(['post', 'put', 'get', 'remove'], function (dbCall) {\r\n      self[dbCall] = function(data) {\r\n        return self.wrapPromise(dbCall, data);\r\n      }\r\n    });\r\n  };\r\n  \r\n  QueuedResponseDb.prototype.nextId = function (){\r\n    this._nextId ++;\r\n    return this._nextId;\r\n  }\r\n  \r\n  QueuedResponseDb.prototype.queuePromise = function(promiseId, returnPromise) {\r\n    this.queue[promiseId] = {\r\n      returnPromise: returnPromise,\r\n      resolved: false\r\n    };\r\n  };\r\n  \r\n  QueuedResponseDb.prototype.promiseGotResolved = function(promiseId, result) {\r\n    var promise = this.queue[promiseId]\r\n    promise['result'] = result;\r\n    promise.resolved = true;\r\n    this.releasResolvedPromises();\r\n  };\r\n  \r\n  QueuedResponseDb.prototype.releasResolvedPromises = function() {\r\n    var stop = false; // encounteredUnresolvedPromiseOrReachedEndOfQueue\r\n    while (!stop) {\r\n      entry = this.queue[this._latestResolvedId]\r\n      if (entry && entry.resolved) {\r\n        entry.returnPromise.resolve(entry.result);\r\n        this._latestResolvedId ++;\r\n      } else {\r\n        stop = true;\r\n      }\r\n    }\r\n  }\r\n  \r\n  return QueuedResponseDb;\r\n});","/*\r\nNew way:\r\n\r\nSpecify one relationship per collection.\r\nIt knows of the other collection, and how the relationship behaves.\r\n\r\nThe model is responisble for passing complementary relationships to the collections.\r\n\r\nLinking:\r\n   collection ends up with methods:\r\n   setParent\r\n   addChild\r\n   removeChild\r\n   addTag\r\n   removeTag\r\n   \r\n  model.join({type: 'parentChild'... })\r\n    r1 = parentChildRelationship(parent, child)\r\n    r2 = childParentRelationship(parent, child)\r\n    parentCollection.registerRelationship(r1)\r\n    parentCollection.registerRelationship(r2)\r\n    childCollection.registerRelationship(r1)\r\n    childCollection.registerRelationship(r2)\r\n  }\r\n  What does a relationship do:\r\n    create accessor functions (get, set)\r\n    respond to deletions\r\n    respond to new\r\n    \r\n    \r\n  Deletions:\r\n    if has child items: \r\n      delete:\r\n        chilren\r\n        parent of child links \r\n        children of parent\r\n    if has parent items:\r\n      delete:\r\n        parent of child links \r\n        children of parent\r\n    if many to many:\r\n      delete join only\r\n      \r\n    ...but parent child deletions could benefit from not having all the items stripped first. Do I care?\r\n    I could collate operations on the db side (i.e. collect changes to single objects, and flush them after a period)\r\n    \r\n    \r\n      \r\n*/\r\n\r\nangular.module('SneakerJS').factory('ParentRelationshipNew', function($q) {\r\n\r\n  var Relationship = function(propertyName, parentCollection, parentPopertyName) {\r\n    this.propertyName = propertyName;\r\n    this._parentCollection = parentCollection;\r\n    this._parentPopertyName = parentPopertyName;\r\n  };\r\n  \r\n  Relationship.prototype._convertFromDoc = function(doc) {\r\n    var value = doc[this.propertyName];\r\n    if (value) {\r\n      this._parentCollection.getItem(value);\r\n    }\r\n  };\r\n  \r\n  Relationship.prototype._convertToDoc = function(value) {\r\n    return value.id;\r\n  };\r\n  \r\n  Relationship.prototype._onItemRemove = function(item) {\r\n    var value = doc[this.propertyName];\r\n    if (value) {\r\n      var parentItem = this._parentCollection.getItem(value);\r\n      if (parentItem) {\r\n        parentItem._links[this._parentPopertyName]\r\n      }\r\n    }\r\n  };\r\n  \r\n});","\r\n\r\n\r\nangular.module('SneakerJS').service('util', function($q) {\r\n  var self = this;\r\n\r\n  self.capitalizeFirstLetter = function(str) {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  };\r\n\r\n  self.createAccessFunctionDefinition = function(name, fn, queuedPromise) {\r\n    return {\r\n      ModelFunctionName: name,\r\n      containerFunction: fn,\r\n      queuedPromise: queuedPromise\r\n    }\r\n  };\r\n\r\n  self.arrayContains = function(myArray, item) {\r\n    for (var i = 0, len = myArray.length; i < len; i++) {\r\n      if (item === myArray[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  self.addUnique = function(myArray, item) {\r\n    if(!self.arrayContains(myArray, item)){\r\n      myArray.push(item);\r\n    }\r\n  }\r\n\r\n  self.addAsItem = function(object, key, item) {\r\n    //Where object[key] = [items...]\r\n    if (object[key] === undefined) {\r\n      object[key] = [item];\r\n    } else {\r\n      object[key].push(item);\r\n    }\r\n  };\r\n\r\n  self.removeFromArray = function(myArray, item) {\r\n    var index = myArray.indexOf(item);\r\n    if (index > -1) {\r\n      myArray.splice(index, 1);\r\n    }\r\n  };\r\n\r\n  self.filterIndex = function(index, test) {\r\n    //accepts an object like array.\r\n    var filteredItems = [];\r\n    angular.forEach(index, function(item) {\r\n      if (test(item)) {\r\n        filteredItems.push(item);\r\n      }\r\n    });\r\n    return filteredItems;\r\n  };\r\n\r\n  self.inheritPrototype = function(Child, Parent) {\r\n    var childProto = Child.prototype;\r\n    var parentProto = Parent.prototype;\r\n    for (var prop in parentProto) {\r\n      if (typeof parentProto[prop] == 'function') {\r\n        childProto[prop] = parentProto[prop];\r\n      }\r\n    }\r\n  };\r\n\r\n  self.copyFields = function(source, target, fields) {\r\n    angular.forEach(fields, function(field) {\r\n      target[field] = source[field];\r\n    });\r\n  };\r\n\r\n  self.promiseFailed = function(error) {\r\n    console.log('Promise failed!');\r\n    console.log(error);\r\n  }\r\n\r\n});\r\n","\r\nangular.module('SneakerJS').factory('ValueRegister', function() {\r\n  //\r\n  var ValueRegister = function() {\r\n    this._register = {};\r\n  };\r\n  ValueRegister.prototype.set = function(key, value) {\r\n    this._register[key] = value;\r\n  };\r\n  ValueRegister.prototype.get = function(key) {\r\n    return this._register[key];\r\n  };\r\n  \r\n  return ValueRegister;\r\n});\r\n"],"sourceRoot":"/source/"}